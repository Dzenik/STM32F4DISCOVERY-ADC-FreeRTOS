   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_wwdg.c"
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.WWDG_DeInit,"ax",%progbits
  25              		.align	2
  26              		.global	WWDG_DeInit
  27              		.thumb
  28              		.thumb_func
  30              	WWDG_DeInit:
  31              	.LFB110:
  32              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @file    stm32f4xx_wwdg.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Prescaler, Refresh window and Counter configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - WWDG activation
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Interrupts and flags management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @verbatim
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *    
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                     WWDG features
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                        
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG generates a system reset on expiry of a programmed
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          time period, unless the program refreshes the counter (downcounter) 
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before to reach 0x3F value (i.e. a reset is generated when the counter
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          value rolls over from 0x40 to 0x3F). 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          An MCU reset is also generated if the counter value is refreshed
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before the counter has reached the refresh window value. This 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          implies that the counter must be refreshed in a limited window.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG cannot be disabled except by a system reset.                    
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          reset occurs.
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          The WWDG counter input clock is derived from the APB clock divided 
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          by a programmable prescaler.
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *              
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG counter clock = PCLK1 / Prescaler
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG timeout = (WWDG counter clock) * (counter value)
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                      
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Min-max timeout value @30 MHz(PCLK1): ~136.5 us / ~69.9 ms
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                            
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                 How to use this driver
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          =================================================================== 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          1. Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) functio
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          2. Configure the WWDG prescaler using WWDG_SetPrescaler() function
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                           
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          3. Configure the WWDG refresh window using WWDG_SetWindowValue() function
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          4. Set the WWDG counter value and start it using WWDG_Enable() function.
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             When the WWDG is enabled the counter value should be configured to 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             a value greater than 0x40 to prevent generating an immediate reset.     
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          5. Optionally you can enable the Early wakeup interrupt which is 
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             generated when the counter reach 0x40.
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             Once enabled this interrupt cannot be disabled except by a system reset.
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          6. Then the application program must refresh the WWDG counter at regular
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             WWDG_SetCounter() function. This operation must occur only when
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             the counter value is lower than the refresh window value, 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             programmed using WWDG_SetWindowValue().         
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @endverbatim  
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                             
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @attention
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_wwdg.h"
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_rcc.h"
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief WWDG driver modules
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private define ------------------------------------------------------------*/
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Alias word address of EWI bit */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define EWI_BitNumber     0x09
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* CFR register bit mask */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****           Prescaler, Refresh window and Counter configuration functions
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_DeInit(void)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  33              		.loc 1 135 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 14, -4
  42              		.cfi_offset 7, -8
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  45              		.loc 1 136 0
  46 0004 4FF40060 		mov	r0, #2048
  47 0008 4FF00101 		mov	r1, #1
  48 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  49              		.loc 1 137 0
  50 0010 4FF40060 		mov	r0, #2048
  51 0014 4FF00001 		mov	r1, #0
  52 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  53              		.loc 1 138 0
  54 001c 80BD     		pop	{r7, pc}
  55              		.cfi_endproc
  56              	.LFE110:
  58 001e 00BF     		.section	.text.WWDG_SetPrescaler,"ax",%progbits
  59              		.align	2
  60              		.global	WWDG_SetPrescaler
  61              		.thumb
  62              		.thumb_func
  64              	WWDG_SetPrescaler:
  65              	.LFB111:
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  66              		.loc 1 151 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 16
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 0000 80B4     		push	{r7}
  72              	.LCFI2:
  73              		.cfi_def_cfa_offset 4
  74 0002 85B0     		sub	sp, sp, #20
  75              	.LCFI3:
  76              		.cfi_def_cfa_offset 24
  77 0004 00AF     		add	r7, sp, #0
  78              		.cfi_offset 7, -4
  79              	.LCFI4:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
  82              		.loc 1 152 0
  83 0008 4FF00003 		mov	r3, #0
  84 000c FB60     		str	r3, [r7, #12]
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
  85              		.loc 1 156 0
  86 000e 094B     		ldr	r3, .L3
  87 0010 5B68     		ldr	r3, [r3, #4]
  88 0012 23F4C073 		bic	r3, r3, #384
  89 0016 FB60     		str	r3, [r7, #12]
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
  90              		.loc 1 158 0
  91 0018 FA68     		ldr	r2, [r7, #12]
  92 001a 7B68     		ldr	r3, [r7, #4]
  93 001c 42EA0303 		orr	r3, r2, r3
  94 0020 FB60     		str	r3, [r7, #12]
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
  95              		.loc 1 160 0
  96 0022 044B     		ldr	r3, .L3
  97 0024 FA68     		ldr	r2, [r7, #12]
  98 0026 5A60     		str	r2, [r3, #4]
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  99              		.loc 1 161 0
 100 0028 07F11407 		add	r7, r7, #20
 101 002c BD46     		mov	sp, r7
 102 002e 80BC     		pop	{r7}
 103 0030 7047     		bx	lr
 104              	.L4:
 105 0032 00BF     		.align	2
 106              	.L3:
 107 0034 002C0040 		.word	1073753088
 108              		.cfi_endproc
 109              	.LFE111:
 111              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
 112              		.align	2
 113              		.global	WWDG_SetWindowValue
 114              		.thumb
 115              		.thumb_func
 117              	WWDG_SetWindowValue:
 118              	.LFB112:
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 119              		.loc 1 170 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 16
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 80B4     		push	{r7}
 125              	.LCFI5:
 126              		.cfi_def_cfa_offset 4
 127 0002 85B0     		sub	sp, sp, #20
 128              	.LCFI6:
 129              		.cfi_def_cfa_offset 24
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_offset 7, -4
 132              	.LCFI7:
 133              		.cfi_def_cfa_register 7
 134 0006 0346     		mov	r3, r0
 135 0008 FB71     		strb	r3, [r7, #7]
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 136              		.loc 1 171 0
 137 000a 4FF00003 		mov	r3, #0
 138 000e FB60     		str	r3, [r7, #12]
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
 139              		.loc 1 177 0
 140 0010 094B     		ldr	r3, .L6
 141 0012 5B68     		ldr	r3, [r3, #4]
 142 0014 23F07F03 		bic	r3, r3, #127
 143 0018 FB60     		str	r3, [r7, #12]
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 144              		.loc 1 180 0
 145 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 146 001c 03F07F02 		and	r2, r3, #127
 147 0020 FB68     		ldr	r3, [r7, #12]
 148 0022 42EA0303 		orr	r3, r2, r3
 149 0026 FB60     		str	r3, [r7, #12]
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 150              		.loc 1 183 0
 151 0028 034B     		ldr	r3, .L6
 152 002a FA68     		ldr	r2, [r7, #12]
 153 002c 5A60     		str	r2, [r3, #4]
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 154              		.loc 1 184 0
 155 002e 07F11407 		add	r7, r7, #20
 156 0032 BD46     		mov	sp, r7
 157 0034 80BC     		pop	{r7}
 158 0036 7047     		bx	lr
 159              	.L7:
 160              		.align	2
 161              	.L6:
 162 0038 002C0040 		.word	1073753088
 163              		.cfi_endproc
 164              	.LFE112:
 166              		.section	.text.WWDG_EnableIT,"ax",%progbits
 167              		.align	2
 168              		.global	WWDG_EnableIT
 169              		.thumb
 170              		.thumb_func
 172              	WWDG_EnableIT:
 173              	.LFB113:
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_EnableIT(void)
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 174              		.loc 1 193 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              	.LCFI8:
 181              		.cfi_def_cfa_offset 4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_offset 7, -4
 184              	.LCFI9:
 185              		.cfi_def_cfa_register 7
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 186              		.loc 1 194 0
 187 0004 034B     		ldr	r3, .L9
 188 0006 4FF00102 		mov	r2, #1
 189 000a 1A60     		str	r2, [r3, #0]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 190              		.loc 1 195 0
 191 000c BD46     		mov	sp, r7
 192 000e 80BC     		pop	{r7}
 193 0010 7047     		bx	lr
 194              	.L10:
 195 0012 00BF     		.align	2
 196              	.L9:
 197 0014 A4800542 		.word	1107656868
 198              		.cfi_endproc
 199              	.LFE113:
 201              		.section	.text.WWDG_SetCounter,"ax",%progbits
 202              		.align	2
 203              		.global	WWDG_SetCounter
 204              		.thumb
 205              		.thumb_func
 207              	WWDG_SetCounter:
 208              	.LFB114:
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset) 
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 209              		.loc 1 205 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 8
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              	.LCFI10:
 216              		.cfi_def_cfa_offset 4
 217 0002 83B0     		sub	sp, sp, #12
 218              	.LCFI11:
 219              		.cfi_def_cfa_offset 16
 220 0004 00AF     		add	r7, sp, #0
 221              		.cfi_offset 7, -4
 222              	.LCFI12:
 223              		.cfi_def_cfa_register 7
 224 0006 0346     		mov	r3, r0
 225 0008 FB71     		strb	r3, [r7, #7]
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 226              		.loc 1 210 0
 227 000a 054B     		ldr	r3, .L12
 228 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 229 000e 02F07F02 		and	r2, r2, #127
 230 0012 1A60     		str	r2, [r3, #0]
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 231              		.loc 1 211 0
 232 0014 07F10C07 		add	r7, r7, #12
 233 0018 BD46     		mov	sp, r7
 234 001a 80BC     		pop	{r7}
 235 001c 7047     		bx	lr
 236              	.L13:
 237 001e 00BF     		.align	2
 238              	.L12:
 239 0020 002C0040 		.word	1073753088
 240              		.cfi_endproc
 241              	.LFE114:
 243              		.section	.text.WWDG_Enable,"ax",%progbits
 244              		.align	2
 245              		.global	WWDG_Enable
 246              		.thumb
 247              		.thumb_func
 249              	WWDG_Enable:
 250              	.LFB115:
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   WWDG activation functions 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                        WWDG activation function
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset)
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 251              		.loc 1 236 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256 0000 80B4     		push	{r7}
 257              	.LCFI13:
 258              		.cfi_def_cfa_offset 4
 259 0002 83B0     		sub	sp, sp, #12
 260              	.LCFI14:
 261              		.cfi_def_cfa_offset 16
 262 0004 00AF     		add	r7, sp, #0
 263              		.cfi_offset 7, -4
 264              	.LCFI15:
 265              		.cfi_def_cfa_register 7
 266 0006 0346     		mov	r3, r0
 267 0008 FB71     		strb	r3, [r7, #7]
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 268              		.loc 1 239 0
 269 000a 054B     		ldr	r3, .L15
 270 000c FA79     		ldrb	r2, [r7, #7]
 271 000e 62F07F02 		orn	r2, r2, #127
 272 0012 D2B2     		uxtb	r2, r2
 273 0014 1A60     		str	r2, [r3, #0]
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 274              		.loc 1 240 0
 275 0016 07F10C07 		add	r7, r7, #12
 276 001a BD46     		mov	sp, r7
 277 001c 80BC     		pop	{r7}
 278 001e 7047     		bx	lr
 279              	.L16:
 280              		.align	2
 281              	.L15:
 282 0020 002C0040 		.word	1073753088
 283              		.cfi_endproc
 284              	.LFE115:
 286              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 287              		.align	2
 288              		.global	WWDG_GetFlagStatus
 289              		.thumb
 290              		.thumb_func
 292              	WWDG_GetFlagStatus:
 293              	.LFB116:
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                  Interrupts and flags management functions
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 294              		.loc 1 263 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 8
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299 0000 80B4     		push	{r7}
 300              	.LCFI16:
 301              		.cfi_def_cfa_offset 4
 302 0002 83B0     		sub	sp, sp, #12
 303              	.LCFI17:
 304              		.cfi_def_cfa_offset 16
 305 0004 00AF     		add	r7, sp, #0
 306              		.cfi_offset 7, -4
 307              	.LCFI18:
 308              		.cfi_def_cfa_register 7
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   FlagStatus bitstatus = RESET;
 309              		.loc 1 264 0
 310 0006 4FF00003 		mov	r3, #0
 311 000a FB71     		strb	r3, [r7, #7]
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
 312              		.loc 1 266 0
 313 000c 084B     		ldr	r3, .L20
 314 000e 9B68     		ldr	r3, [r3, #8]
 315 0010 002B     		cmp	r3, #0
 316 0012 03D0     		beq	.L18
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = SET;
 317              		.loc 1 268 0
 318 0014 4FF00103 		mov	r3, #1
 319 0018 FB71     		strb	r3, [r7, #7]
 320 001a 02E0     		b	.L19
 321              	.L18:
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   else
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = RESET;
 322              		.loc 1 272 0
 323 001c 4FF00003 		mov	r3, #0
 324 0020 FB71     		strb	r3, [r7, #7]
 325              	.L19:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   return bitstatus;
 326              		.loc 1 274 0
 327 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 328              		.loc 1 275 0
 329 0024 1846     		mov	r0, r3
 330 0026 07F10C07 		add	r7, r7, #12
 331 002a BD46     		mov	sp, r7
 332 002c 80BC     		pop	{r7}
 333 002e 7047     		bx	lr
 334              	.L21:
 335              		.align	2
 336              	.L20:
 337 0030 002C0040 		.word	1073753088
 338              		.cfi_endproc
 339              	.LFE116:
 341              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 342              		.align	2
 343              		.global	WWDG_ClearFlag
 344              		.thumb
 345              		.thumb_func
 347              	WWDG_ClearFlag:
 348              	.LFB117:
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 349              		.loc 1 283 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              	.LCFI19:
 356              		.cfi_def_cfa_offset 4
 357 0002 00AF     		add	r7, sp, #0
 358              		.cfi_offset 7, -4
 359              	.LCFI20:
 360              		.cfi_def_cfa_register 7
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 361              		.loc 1 284 0
 362 0004 034B     		ldr	r3, .L23
 363 0006 4FF00002 		mov	r2, #0
 364 000a 9A60     		str	r2, [r3, #8]
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 365              		.loc 1 285 0
 366 000c BD46     		mov	sp, r7
 367 000e 80BC     		pop	{r7}
 368 0010 7047     		bx	lr
 369              	.L24:
 370 0012 00BF     		.align	2
 371              	.L23:
 372 0014 002C0040 		.word	1073753088
 373              		.cfi_endproc
 374              	.LFE117:
 376              		.text
 377              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_wwdg.c
     /tmp/ccZ0zBSd.s:25     .text.WWDG_DeInit:00000000 $t
     /tmp/ccZ0zBSd.s:30     .text.WWDG_DeInit:00000000 WWDG_DeInit
     /tmp/ccZ0zBSd.s:59     .text.WWDG_SetPrescaler:00000000 $t
     /tmp/ccZ0zBSd.s:64     .text.WWDG_SetPrescaler:00000000 WWDG_SetPrescaler
     /tmp/ccZ0zBSd.s:107    .text.WWDG_SetPrescaler:00000034 $d
     /tmp/ccZ0zBSd.s:112    .text.WWDG_SetWindowValue:00000000 $t
     /tmp/ccZ0zBSd.s:117    .text.WWDG_SetWindowValue:00000000 WWDG_SetWindowValue
     /tmp/ccZ0zBSd.s:162    .text.WWDG_SetWindowValue:00000038 $d
     /tmp/ccZ0zBSd.s:167    .text.WWDG_EnableIT:00000000 $t
     /tmp/ccZ0zBSd.s:172    .text.WWDG_EnableIT:00000000 WWDG_EnableIT
     /tmp/ccZ0zBSd.s:197    .text.WWDG_EnableIT:00000014 $d
     /tmp/ccZ0zBSd.s:202    .text.WWDG_SetCounter:00000000 $t
     /tmp/ccZ0zBSd.s:207    .text.WWDG_SetCounter:00000000 WWDG_SetCounter
     /tmp/ccZ0zBSd.s:239    .text.WWDG_SetCounter:00000020 $d
     /tmp/ccZ0zBSd.s:244    .text.WWDG_Enable:00000000 $t
     /tmp/ccZ0zBSd.s:249    .text.WWDG_Enable:00000000 WWDG_Enable
     /tmp/ccZ0zBSd.s:282    .text.WWDG_Enable:00000020 $d
     /tmp/ccZ0zBSd.s:287    .text.WWDG_GetFlagStatus:00000000 $t
     /tmp/ccZ0zBSd.s:292    .text.WWDG_GetFlagStatus:00000000 WWDG_GetFlagStatus
     /tmp/ccZ0zBSd.s:337    .text.WWDG_GetFlagStatus:00000030 $d
     /tmp/ccZ0zBSd.s:342    .text.WWDG_ClearFlag:00000000 $t
     /tmp/ccZ0zBSd.s:347    .text.WWDG_ClearFlag:00000000 WWDG_ClearFlag
     /tmp/ccZ0zBSd.s:372    .text.WWDG_ClearFlag:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
