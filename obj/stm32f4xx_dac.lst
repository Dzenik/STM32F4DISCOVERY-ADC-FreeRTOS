   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_dac.c"
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.DAC_DeInit,"ax",%progbits
  25              		.align	2
  26              		.global	DAC_DeInit
  27              		.thumb
  28              		.thumb_func
  30              	DAC_DeInit:
  31              	.LFB110:
  32              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  33              		.loc 1 175 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 14, -4
  42              		.cfi_offset 7, -8
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  45              		.loc 1 177 0
  46 0004 4FF00050 		mov	r0, #536870912
  47 0008 4FF00101 		mov	r1, #1
  48 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  49              		.loc 1 179 0
  50 0010 4FF00050 		mov	r0, #536870912
  51 0014 4FF00001 		mov	r1, #0
  52 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  53              		.loc 1 180 0
  54 001c 80BD     		pop	{r7, pc}
  55              		.cfi_endproc
  56              	.LFE110:
  58 001e 00BF     		.section	.text.DAC_Init,"ax",%progbits
  59              		.align	2
  60              		.global	DAC_Init
  61              		.thumb
  62              		.thumb_func
  64              	DAC_Init:
  65              	.LFB111:
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  66              		.loc 1 194 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 16
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 0000 80B4     		push	{r7}
  72              	.LCFI2:
  73              		.cfi_def_cfa_offset 4
  74 0002 85B0     		sub	sp, sp, #20
  75              	.LCFI3:
  76              		.cfi_def_cfa_offset 24
  77 0004 00AF     		add	r7, sp, #0
  78              		.cfi_offset 7, -4
  79              	.LCFI4:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
  82 0008 3960     		str	r1, [r7, #0]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  83              		.loc 1 195 0
  84 000a 4FF00003 		mov	r3, #0
  85 000e FB60     		str	r3, [r7, #12]
  86 0010 4FF00003 		mov	r3, #0
  87 0014 BB60     		str	r3, [r7, #8]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  88              		.loc 1 205 0
  89 0016 154B     		ldr	r3, .L3
  90 0018 1B68     		ldr	r3, [r3, #0]
  91 001a FB60     		str	r3, [r7, #12]
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  92              		.loc 1 207 0
  93 001c 7B68     		ldr	r3, [r7, #4]
  94 001e 40F6FE72 		movw	r2, #4094
  95 0022 02FA03F3 		lsl	r3, r2, r3
  96 0026 6FEA0303 		mvn	r3, r3
  97 002a FA68     		ldr	r2, [r7, #12]
  98 002c 02EA0303 		and	r3, r2, r3
  99 0030 FB60     		str	r3, [r7, #12]
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 100              		.loc 1 214 0
 101 0032 3B68     		ldr	r3, [r7, #0]
 102 0034 1A68     		ldr	r2, [r3, #0]
 103 0036 3B68     		ldr	r3, [r7, #0]
 104 0038 5B68     		ldr	r3, [r3, #4]
 105 003a 1A43     		orrs	r2, r2, r3
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 106              		.loc 1 215 0
 107 003c 3B68     		ldr	r3, [r7, #0]
 108 003e 9B68     		ldr	r3, [r3, #8]
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 109              		.loc 1 214 0
 110 0040 1A43     		orrs	r2, r2, r3
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 111              		.loc 1 216 0
 112 0042 3B68     		ldr	r3, [r7, #0]
 113 0044 DB68     		ldr	r3, [r3, #12]
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 114              		.loc 1 214 0
 115 0046 42EA0303 		orr	r3, r2, r3
 116 004a BB60     		str	r3, [r7, #8]
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 117              		.loc 1 218 0
 118 004c 7B68     		ldr	r3, [r7, #4]
 119 004e BA68     		ldr	r2, [r7, #8]
 120 0050 02FA03F3 		lsl	r3, r2, r3
 121 0054 FA68     		ldr	r2, [r7, #12]
 122 0056 42EA0303 		orr	r3, r2, r3
 123 005a FB60     		str	r3, [r7, #12]
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 124              		.loc 1 220 0
 125 005c 034B     		ldr	r3, .L3
 126 005e FA68     		ldr	r2, [r7, #12]
 127 0060 1A60     		str	r2, [r3, #0]
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 128              		.loc 1 221 0
 129 0062 07F11407 		add	r7, r7, #20
 130 0066 BD46     		mov	sp, r7
 131 0068 80BC     		pop	{r7}
 132 006a 7047     		bx	lr
 133              	.L4:
 134              		.align	2
 135              	.L3:
 136 006c 00740040 		.word	1073771520
 137              		.cfi_endproc
 138              	.LFE111:
 140              		.section	.text.DAC_StructInit,"ax",%progbits
 141              		.align	2
 142              		.global	DAC_StructInit
 143              		.thumb
 144              		.thumb_func
 146              	DAC_StructInit:
 147              	.LFB112:
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 148              		.loc 1 230 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 80B4     		push	{r7}
 154              	.LCFI5:
 155              		.cfi_def_cfa_offset 4
 156 0002 83B0     		sub	sp, sp, #12
 157              	.LCFI6:
 158              		.cfi_def_cfa_offset 16
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_offset 7, -4
 161              	.LCFI7:
 162              		.cfi_def_cfa_register 7
 163 0006 7860     		str	r0, [r7, #4]
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 164              		.loc 1 233 0
 165 0008 7B68     		ldr	r3, [r7, #4]
 166 000a 4FF00002 		mov	r2, #0
 167 000e 1A60     		str	r2, [r3, #0]
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 168              		.loc 1 235 0
 169 0010 7B68     		ldr	r3, [r7, #4]
 170 0012 4FF00002 		mov	r2, #0
 171 0016 5A60     		str	r2, [r3, #4]
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 172              		.loc 1 237 0
 173 0018 7B68     		ldr	r3, [r7, #4]
 174 001a 4FF00002 		mov	r2, #0
 175 001e 9A60     		str	r2, [r3, #8]
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 176              		.loc 1 239 0
 177 0020 7B68     		ldr	r3, [r7, #4]
 178 0022 4FF00002 		mov	r2, #0
 179 0026 DA60     		str	r2, [r3, #12]
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 180              		.loc 1 240 0
 181 0028 07F10C07 		add	r7, r7, #12
 182 002c BD46     		mov	sp, r7
 183 002e 80BC     		pop	{r7}
 184 0030 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE112:
 188 0032 00BF     		.section	.text.DAC_Cmd,"ax",%progbits
 189              		.align	2
 190              		.global	DAC_Cmd
 191              		.thumb
 192              		.thumb_func
 194              	DAC_Cmd:
 195              	.LFB113:
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 196              		.loc 1 254 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 8
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201 0000 80B4     		push	{r7}
 202              	.LCFI8:
 203              		.cfi_def_cfa_offset 4
 204 0002 83B0     		sub	sp, sp, #12
 205              	.LCFI9:
 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_offset 7, -4
 209              	.LCFI10:
 210              		.cfi_def_cfa_register 7
 211 0006 7860     		str	r0, [r7, #4]
 212 0008 0B46     		mov	r3, r1
 213 000a FB70     		strb	r3, [r7, #3]
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 214              		.loc 1 259 0
 215 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 216 000e 002B     		cmp	r3, #0
 217 0010 0BD0     		beq	.L7
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 218              		.loc 1 262 0
 219 0012 0F4B     		ldr	r3, .L9
 220 0014 0E4A     		ldr	r2, .L9
 221 0016 1168     		ldr	r1, [r2, #0]
 222 0018 7A68     		ldr	r2, [r7, #4]
 223 001a 4FF00100 		mov	r0, #1
 224 001e 00FA02F2 		lsl	r2, r0, r2
 225 0022 41EA0202 		orr	r2, r1, r2
 226 0026 1A60     		str	r2, [r3, #0]
 227 0028 0CE0     		b	.L6
 228              	.L7:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 229              		.loc 1 267 0
 230 002a 094B     		ldr	r3, .L9
 231 002c 084A     		ldr	r2, .L9
 232 002e 1168     		ldr	r1, [r2, #0]
 233 0030 7A68     		ldr	r2, [r7, #4]
 234 0032 4FF00100 		mov	r0, #1
 235 0036 00FA02F2 		lsl	r2, r0, r2
 236 003a 6FEA0202 		mvn	r2, r2
 237 003e 01EA0202 		and	r2, r1, r2
 238 0042 1A60     		str	r2, [r3, #0]
 239              	.L6:
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 240              		.loc 1 269 0
 241 0044 07F10C07 		add	r7, r7, #12
 242 0048 BD46     		mov	sp, r7
 243 004a 80BC     		pop	{r7}
 244 004c 7047     		bx	lr
 245              	.L10:
 246 004e 00BF     		.align	2
 247              	.L9:
 248 0050 00740040 		.word	1073771520
 249              		.cfi_endproc
 250              	.LFE113:
 252              		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 253              		.align	2
 254              		.global	DAC_SoftwareTriggerCmd
 255              		.thumb
 256              		.thumb_func
 258              	DAC_SoftwareTriggerCmd:
 259              	.LFB114:
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 260              		.loc 1 282 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265 0000 80B4     		push	{r7}
 266              	.LCFI11:
 267              		.cfi_def_cfa_offset 4
 268 0002 83B0     		sub	sp, sp, #12
 269              	.LCFI12:
 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_offset 7, -4
 273              	.LCFI13:
 274              		.cfi_def_cfa_register 7
 275 0006 7860     		str	r0, [r7, #4]
 276 0008 0B46     		mov	r3, r1
 277 000a FB70     		strb	r3, [r7, #3]
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 278              		.loc 1 287 0
 279 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 280 000e 002B     		cmp	r3, #0
 281 0010 0DD0     		beq	.L12
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 282              		.loc 1 290 0
 283 0012 114B     		ldr	r3, .L14
 284 0014 104A     		ldr	r2, .L14
 285 0016 5168     		ldr	r1, [r2, #4]
 286 0018 7A68     		ldr	r2, [r7, #4]
 287 001a 4FEA1212 		lsr	r2, r2, #4
 288 001e 4FF00100 		mov	r0, #1
 289 0022 00FA02F2 		lsl	r2, r0, r2
 290 0026 41EA0202 		orr	r2, r1, r2
 291 002a 5A60     		str	r2, [r3, #4]
 292 002c 0EE0     		b	.L11
 293              	.L12:
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 294              		.loc 1 295 0
 295 002e 0A4B     		ldr	r3, .L14
 296 0030 094A     		ldr	r2, .L14
 297 0032 5168     		ldr	r1, [r2, #4]
 298 0034 7A68     		ldr	r2, [r7, #4]
 299 0036 4FEA1212 		lsr	r2, r2, #4
 300 003a 4FF00100 		mov	r0, #1
 301 003e 00FA02F2 		lsl	r2, r0, r2
 302 0042 6FEA0202 		mvn	r2, r2
 303 0046 01EA0202 		and	r2, r1, r2
 304 004a 5A60     		str	r2, [r3, #4]
 305              	.L11:
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 306              		.loc 1 297 0
 307 004c 07F10C07 		add	r7, r7, #12
 308 0050 BD46     		mov	sp, r7
 309 0052 80BC     		pop	{r7}
 310 0054 7047     		bx	lr
 311              	.L15:
 312 0056 00BF     		.align	2
 313              	.L14:
 314 0058 00740040 		.word	1073771520
 315              		.cfi_endproc
 316              	.LFE114:
 318              		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 319              		.align	2
 320              		.global	DAC_DualSoftwareTriggerCmd
 321              		.thumb
 322              		.thumb_func
 324              	DAC_DualSoftwareTriggerCmd:
 325              	.LFB115:
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 326              		.loc 1 306 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331 0000 80B4     		push	{r7}
 332              	.LCFI14:
 333              		.cfi_def_cfa_offset 4
 334 0002 83B0     		sub	sp, sp, #12
 335              	.LCFI15:
 336              		.cfi_def_cfa_offset 16
 337 0004 00AF     		add	r7, sp, #0
 338              		.cfi_offset 7, -4
 339              	.LCFI16:
 340              		.cfi_def_cfa_register 7
 341 0006 0346     		mov	r3, r0
 342 0008 FB71     		strb	r3, [r7, #7]
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 343              		.loc 1 310 0
 344 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 345 000c 002B     		cmp	r3, #0
 346 000e 06D0     		beq	.L17
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 347              		.loc 1 313 0
 348 0010 084B     		ldr	r3, .L19
 349 0012 084A     		ldr	r2, .L19
 350 0014 5268     		ldr	r2, [r2, #4]
 351 0016 42F00302 		orr	r2, r2, #3
 352 001a 5A60     		str	r2, [r3, #4]
 353 001c 05E0     		b	.L16
 354              	.L17:
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 355              		.loc 1 318 0
 356 001e 054B     		ldr	r3, .L19
 357 0020 044A     		ldr	r2, .L19
 358 0022 5268     		ldr	r2, [r2, #4]
 359 0024 22F00302 		bic	r2, r2, #3
 360 0028 5A60     		str	r2, [r3, #4]
 361              	.L16:
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 362              		.loc 1 320 0
 363 002a 07F10C07 		add	r7, r7, #12
 364 002e BD46     		mov	sp, r7
 365 0030 80BC     		pop	{r7}
 366 0032 7047     		bx	lr
 367              	.L20:
 368              		.align	2
 369              	.L19:
 370 0034 00740040 		.word	1073771520
 371              		.cfi_endproc
 372              	.LFE115:
 374              		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 375              		.align	2
 376              		.global	DAC_WaveGenerationCmd
 377              		.thumb
 378              		.thumb_func
 380              	DAC_WaveGenerationCmd:
 381              	.LFB116:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 382              		.loc 1 337 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 16
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0000 80B4     		push	{r7}
 388              	.LCFI17:
 389              		.cfi_def_cfa_offset 4
 390 0002 85B0     		sub	sp, sp, #20
 391              	.LCFI18:
 392              		.cfi_def_cfa_offset 24
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_offset 7, -4
 395              	.LCFI19:
 396              		.cfi_def_cfa_register 7
 397 0006 F860     		str	r0, [r7, #12]
 398 0008 B960     		str	r1, [r7, #8]
 399 000a 1346     		mov	r3, r2
 400 000c FB71     		strb	r3, [r7, #7]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 401              		.loc 1 343 0
 402 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 403 0010 002B     		cmp	r3, #0
 404 0012 0AD0     		beq	.L22
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 405              		.loc 1 346 0
 406 0014 0D4B     		ldr	r3, .L24
 407 0016 0D4A     		ldr	r2, .L24
 408 0018 1168     		ldr	r1, [r2, #0]
 409 001a FA68     		ldr	r2, [r7, #12]
 410 001c B868     		ldr	r0, [r7, #8]
 411 001e 00FA02F2 		lsl	r2, r0, r2
 412 0022 41EA0202 		orr	r2, r1, r2
 413 0026 1A60     		str	r2, [r3, #0]
 414 0028 0BE0     		b	.L21
 415              	.L22:
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 416              		.loc 1 351 0
 417 002a 084B     		ldr	r3, .L24
 418 002c 074A     		ldr	r2, .L24
 419 002e 1168     		ldr	r1, [r2, #0]
 420 0030 FA68     		ldr	r2, [r7, #12]
 421 0032 B868     		ldr	r0, [r7, #8]
 422 0034 00FA02F2 		lsl	r2, r0, r2
 423 0038 6FEA0202 		mvn	r2, r2
 424 003c 01EA0202 		and	r2, r1, r2
 425 0040 1A60     		str	r2, [r3, #0]
 426              	.L21:
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 427              		.loc 1 353 0
 428 0042 07F11407 		add	r7, r7, #20
 429 0046 BD46     		mov	sp, r7
 430 0048 80BC     		pop	{r7}
 431 004a 7047     		bx	lr
 432              	.L25:
 433              		.align	2
 434              	.L24:
 435 004c 00740040 		.word	1073771520
 436              		.cfi_endproc
 437              	.LFE116:
 439              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 440              		.align	2
 441              		.global	DAC_SetChannel1Data
 442              		.thumb
 443              		.thumb_func
 445              	DAC_SetChannel1Data:
 446              	.LFB117:
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 447              		.loc 1 366 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 16
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452 0000 80B4     		push	{r7}
 453              	.LCFI20:
 454              		.cfi_def_cfa_offset 4
 455 0002 85B0     		sub	sp, sp, #20
 456              	.LCFI21:
 457              		.cfi_def_cfa_offset 24
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_offset 7, -4
 460              	.LCFI22:
 461              		.cfi_def_cfa_register 7
 462 0006 7860     		str	r0, [r7, #4]
 463 0008 0B46     		mov	r3, r1
 464 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 465              		.loc 1 367 0
 466 000c 4FF00003 		mov	r3, #0
 467 0010 FB60     		str	r3, [r7, #12]
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 468              		.loc 1 373 0
 469 0012 084B     		ldr	r3, .L27
 470 0014 FB60     		str	r3, [r7, #12]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 471              		.loc 1 374 0
 472 0016 FA68     		ldr	r2, [r7, #12]
 473 0018 7B68     		ldr	r3, [r7, #4]
 474 001a D318     		adds	r3, r2, r3
 475 001c 03F10803 		add	r3, r3, #8
 476 0020 FB60     		str	r3, [r7, #12]
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 477              		.loc 1 377 0
 478 0022 FB68     		ldr	r3, [r7, #12]
 479 0024 7A88     		ldrh	r2, [r7, #2]
 480 0026 1A60     		str	r2, [r3, #0]
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 481              		.loc 1 378 0
 482 0028 07F11407 		add	r7, r7, #20
 483 002c BD46     		mov	sp, r7
 484 002e 80BC     		pop	{r7}
 485 0030 7047     		bx	lr
 486              	.L28:
 487 0032 00BF     		.align	2
 488              	.L27:
 489 0034 00740040 		.word	1073771520
 490              		.cfi_endproc
 491              	.LFE117:
 493              		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 494              		.align	2
 495              		.global	DAC_SetChannel2Data
 496              		.thumb
 497              		.thumb_func
 499              	DAC_SetChannel2Data:
 500              	.LFB118:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 501              		.loc 1 391 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 16
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              	.LCFI23:
 508              		.cfi_def_cfa_offset 4
 509 0002 85B0     		sub	sp, sp, #20
 510              	.LCFI24:
 511              		.cfi_def_cfa_offset 24
 512 0004 00AF     		add	r7, sp, #0
 513              		.cfi_offset 7, -4
 514              	.LCFI25:
 515              		.cfi_def_cfa_register 7
 516 0006 7860     		str	r0, [r7, #4]
 517 0008 0B46     		mov	r3, r1
 518 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 519              		.loc 1 392 0
 520 000c 4FF00003 		mov	r3, #0
 521 0010 FB60     		str	r3, [r7, #12]
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 522              		.loc 1 398 0
 523 0012 084B     		ldr	r3, .L30
 524 0014 FB60     		str	r3, [r7, #12]
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 525              		.loc 1 399 0
 526 0016 FA68     		ldr	r2, [r7, #12]
 527 0018 7B68     		ldr	r3, [r7, #4]
 528 001a D318     		adds	r3, r2, r3
 529 001c 03F11403 		add	r3, r3, #20
 530 0020 FB60     		str	r3, [r7, #12]
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 531              		.loc 1 402 0
 532 0022 FB68     		ldr	r3, [r7, #12]
 533 0024 7A88     		ldrh	r2, [r7, #2]
 534 0026 1A60     		str	r2, [r3, #0]
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 535              		.loc 1 403 0
 536 0028 07F11407 		add	r7, r7, #20
 537 002c BD46     		mov	sp, r7
 538 002e 80BC     		pop	{r7}
 539 0030 7047     		bx	lr
 540              	.L31:
 541 0032 00BF     		.align	2
 542              	.L30:
 543 0034 00740040 		.word	1073771520
 544              		.cfi_endproc
 545              	.LFE118:
 547              		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 548              		.align	2
 549              		.global	DAC_SetDualChannelData
 550              		.thumb
 551              		.thumb_func
 553              	DAC_SetDualChannelData:
 554              	.LFB119:
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 555              		.loc 1 419 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 16
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560 0000 80B4     		push	{r7}
 561              	.LCFI26:
 562              		.cfi_def_cfa_offset 4
 563 0002 85B0     		sub	sp, sp, #20
 564              	.LCFI27:
 565              		.cfi_def_cfa_offset 24
 566 0004 00AF     		add	r7, sp, #0
 567              		.cfi_offset 7, -4
 568              	.LCFI28:
 569              		.cfi_def_cfa_register 7
 570 0006 7860     		str	r0, [r7, #4]
 571 0008 1346     		mov	r3, r2
 572 000a 0A46     		mov	r2, r1	@ movhi
 573 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 574 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 575              		.loc 1 420 0
 576 0010 4FF00003 		mov	r3, #0
 577 0014 FB60     		str	r3, [r7, #12]
 578 0016 4FF00003 		mov	r3, #0
 579 001a BB60     		str	r3, [r7, #8]
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 580              		.loc 1 428 0
 581 001c 7B68     		ldr	r3, [r7, #4]
 582 001e 082B     		cmp	r3, #8
 583 0020 07D1     		bne	.L33
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 584              		.loc 1 430 0
 585 0022 7B88     		ldrh	r3, [r7, #2]
 586 0024 4FEA0322 		lsl	r2, r3, #8
 587 0028 3B88     		ldrh	r3, [r7, #0]
 588 002a 42EA0303 		orr	r3, r2, r3
 589 002e FB60     		str	r3, [r7, #12]
 590 0030 06E0     		b	.L34
 591              	.L33:
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 592              		.loc 1 434 0
 593 0032 7B88     		ldrh	r3, [r7, #2]
 594 0034 4FEA0342 		lsl	r2, r3, #16
 595 0038 3B88     		ldrh	r3, [r7, #0]
 596 003a 42EA0303 		orr	r3, r2, r3
 597 003e FB60     		str	r3, [r7, #12]
 598              	.L34:
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 599              		.loc 1 437 0
 600 0040 074B     		ldr	r3, .L35
 601 0042 BB60     		str	r3, [r7, #8]
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 602              		.loc 1 438 0
 603 0044 7A68     		ldr	r2, [r7, #4]
 604 0046 BB68     		ldr	r3, [r7, #8]
 605 0048 D318     		adds	r3, r2, r3
 606 004a 03F12003 		add	r3, r3, #32
 607 004e BB60     		str	r3, [r7, #8]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 608              		.loc 1 441 0
 609 0050 BB68     		ldr	r3, [r7, #8]
 610 0052 FA68     		ldr	r2, [r7, #12]
 611 0054 1A60     		str	r2, [r3, #0]
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 612              		.loc 1 442 0
 613 0056 07F11407 		add	r7, r7, #20
 614 005a BD46     		mov	sp, r7
 615 005c 80BC     		pop	{r7}
 616 005e 7047     		bx	lr
 617              	.L36:
 618              		.align	2
 619              	.L35:
 620 0060 00740040 		.word	1073771520
 621              		.cfi_endproc
 622              	.LFE119:
 624              		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 625              		.align	2
 626              		.global	DAC_GetDataOutputValue
 627              		.thumb
 628              		.thumb_func
 630              	DAC_GetDataOutputValue:
 631              	.LFB120:
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 632              		.loc 1 453 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 16
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637 0000 80B4     		push	{r7}
 638              	.LCFI29:
 639              		.cfi_def_cfa_offset 4
 640 0002 85B0     		sub	sp, sp, #20
 641              	.LCFI30:
 642              		.cfi_def_cfa_offset 24
 643 0004 00AF     		add	r7, sp, #0
 644              		.cfi_offset 7, -4
 645              	.LCFI31:
 646              		.cfi_def_cfa_register 7
 647 0006 7860     		str	r0, [r7, #4]
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 648              		.loc 1 454 0
 649 0008 4FF00003 		mov	r3, #0
 650 000c FB60     		str	r3, [r7, #12]
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 651              		.loc 1 459 0
 652 000e 094B     		ldr	r3, .L38
 653 0010 FB60     		str	r3, [r7, #12]
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 654              		.loc 1 460 0
 655 0012 7B68     		ldr	r3, [r7, #4]
 656 0014 4FEA9302 		lsr	r2, r3, #2
 657 0018 FB68     		ldr	r3, [r7, #12]
 658 001a D318     		adds	r3, r2, r3
 659 001c 03F12C03 		add	r3, r3, #44
 660 0020 FB60     		str	r3, [r7, #12]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 661              		.loc 1 463 0
 662 0022 FB68     		ldr	r3, [r7, #12]
 663 0024 1B68     		ldr	r3, [r3, #0]
 664 0026 9BB2     		uxth	r3, r3
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 665              		.loc 1 464 0
 666 0028 1846     		mov	r0, r3
 667 002a 07F11407 		add	r7, r7, #20
 668 002e BD46     		mov	sp, r7
 669 0030 80BC     		pop	{r7}
 670 0032 7047     		bx	lr
 671              	.L39:
 672              		.align	2
 673              	.L38:
 674 0034 00740040 		.word	1073771520
 675              		.cfi_endproc
 676              	.LFE120:
 678              		.section	.text.DAC_DMACmd,"ax",%progbits
 679              		.align	2
 680              		.global	DAC_DMACmd
 681              		.thumb
 682              		.thumb_func
 684              	DAC_DMACmd:
 685              	.LFB121:
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 686              		.loc 1 498 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 8
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691 0000 80B4     		push	{r7}
 692              	.LCFI32:
 693              		.cfi_def_cfa_offset 4
 694 0002 83B0     		sub	sp, sp, #12
 695              	.LCFI33:
 696              		.cfi_def_cfa_offset 16
 697 0004 00AF     		add	r7, sp, #0
 698              		.cfi_offset 7, -4
 699              	.LCFI34:
 700              		.cfi_def_cfa_register 7
 701 0006 7860     		str	r0, [r7, #4]
 702 0008 0B46     		mov	r3, r1
 703 000a FB70     		strb	r3, [r7, #3]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 704              		.loc 1 503 0
 705 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 706 000e 002B     		cmp	r3, #0
 707 0010 0BD0     		beq	.L41
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 708              		.loc 1 506 0
 709 0012 0F4B     		ldr	r3, .L43
 710 0014 0E4A     		ldr	r2, .L43
 711 0016 1168     		ldr	r1, [r2, #0]
 712 0018 7A68     		ldr	r2, [r7, #4]
 713 001a 4FF48050 		mov	r0, #4096
 714 001e 00FA02F2 		lsl	r2, r0, r2
 715 0022 41EA0202 		orr	r2, r1, r2
 716 0026 1A60     		str	r2, [r3, #0]
 717 0028 0CE0     		b	.L40
 718              	.L41:
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 719              		.loc 1 511 0
 720 002a 094B     		ldr	r3, .L43
 721 002c 084A     		ldr	r2, .L43
 722 002e 1168     		ldr	r1, [r2, #0]
 723 0030 7A68     		ldr	r2, [r7, #4]
 724 0032 4FF48050 		mov	r0, #4096
 725 0036 00FA02F2 		lsl	r2, r0, r2
 726 003a 6FEA0202 		mvn	r2, r2
 727 003e 01EA0202 		and	r2, r1, r2
 728 0042 1A60     		str	r2, [r3, #0]
 729              	.L40:
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 730              		.loc 1 513 0
 731 0044 07F10C07 		add	r7, r7, #12
 732 0048 BD46     		mov	sp, r7
 733 004a 80BC     		pop	{r7}
 734 004c 7047     		bx	lr
 735              	.L44:
 736 004e 00BF     		.align	2
 737              	.L43:
 738 0050 00740040 		.word	1073771520
 739              		.cfi_endproc
 740              	.LFE121:
 742              		.section	.text.DAC_ITConfig,"ax",%progbits
 743              		.align	2
 744              		.global	DAC_ITConfig
 745              		.thumb
 746              		.thumb_func
 748              	DAC_ITConfig:
 749              	.LFB122:
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 750              		.loc 1 546 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 16
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754              		@ link register save eliminated.
 755 0000 80B4     		push	{r7}
 756              	.LCFI35:
 757              		.cfi_def_cfa_offset 4
 758 0002 85B0     		sub	sp, sp, #20
 759              	.LCFI36:
 760              		.cfi_def_cfa_offset 24
 761 0004 00AF     		add	r7, sp, #0
 762              		.cfi_offset 7, -4
 763              	.LCFI37:
 764              		.cfi_def_cfa_register 7
 765 0006 F860     		str	r0, [r7, #12]
 766 0008 B960     		str	r1, [r7, #8]
 767 000a 1346     		mov	r3, r2
 768 000c FB71     		strb	r3, [r7, #7]
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 769              		.loc 1 552 0
 770 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 771 0010 002B     		cmp	r3, #0
 772 0012 0AD0     		beq	.L46
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 773              		.loc 1 555 0
 774 0014 0D4B     		ldr	r3, .L48
 775 0016 0D4A     		ldr	r2, .L48
 776 0018 1168     		ldr	r1, [r2, #0]
 777 001a FA68     		ldr	r2, [r7, #12]
 778 001c B868     		ldr	r0, [r7, #8]
 779 001e 00FA02F2 		lsl	r2, r0, r2
 780 0022 41EA0202 		orr	r2, r1, r2
 781 0026 1A60     		str	r2, [r3, #0]
 782 0028 0BE0     		b	.L45
 783              	.L46:
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 784              		.loc 1 560 0
 785 002a 084B     		ldr	r3, .L48
 786 002c 074A     		ldr	r2, .L48
 787 002e 1168     		ldr	r1, [r2, #0]
 788 0030 FA68     		ldr	r2, [r7, #12]
 789 0032 B868     		ldr	r0, [r7, #8]
 790 0034 00FA02F2 		lsl	r2, r0, r2
 791 0038 6FEA0202 		mvn	r2, r2
 792 003c 01EA0202 		and	r2, r1, r2
 793 0040 1A60     		str	r2, [r3, #0]
 794              	.L45:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 795              		.loc 1 562 0
 796 0042 07F11407 		add	r7, r7, #20
 797 0046 BD46     		mov	sp, r7
 798 0048 80BC     		pop	{r7}
 799 004a 7047     		bx	lr
 800              	.L49:
 801              		.align	2
 802              	.L48:
 803 004c 00740040 		.word	1073771520
 804              		.cfi_endproc
 805              	.LFE122:
 807              		.section	.text.DAC_GetFlagStatus,"ax",%progbits
 808              		.align	2
 809              		.global	DAC_GetFlagStatus
 810              		.thumb
 811              		.thumb_func
 813              	DAC_GetFlagStatus:
 814              	.LFB123:
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 815              		.loc 1 578 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 16
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 820 0000 80B4     		push	{r7}
 821              	.LCFI38:
 822              		.cfi_def_cfa_offset 4
 823 0002 85B0     		sub	sp, sp, #20
 824              	.LCFI39:
 825              		.cfi_def_cfa_offset 24
 826 0004 00AF     		add	r7, sp, #0
 827              		.cfi_offset 7, -4
 828              	.LCFI40:
 829              		.cfi_def_cfa_register 7
 830 0006 7860     		str	r0, [r7, #4]
 831 0008 3960     		str	r1, [r7, #0]
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 832              		.loc 1 579 0
 833 000a 4FF00003 		mov	r3, #0
 834 000e FB73     		strb	r3, [r7, #15]
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 835              		.loc 1 585 0
 836 0010 0B4B     		ldr	r3, .L53
 837 0012 5A6B     		ldr	r2, [r3, #52]
 838 0014 7B68     		ldr	r3, [r7, #4]
 839 0016 3968     		ldr	r1, [r7, #0]
 840 0018 01FA03F3 		lsl	r3, r1, r3
 841 001c 02EA0303 		and	r3, r2, r3
 842 0020 002B     		cmp	r3, #0
 843 0022 03D0     		beq	.L51
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 844              		.loc 1 588 0
 845 0024 4FF00103 		mov	r3, #1
 846 0028 FB73     		strb	r3, [r7, #15]
 847 002a 02E0     		b	.L52
 848              	.L51:
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 849              		.loc 1 593 0
 850 002c 4FF00003 		mov	r3, #0
 851 0030 FB73     		strb	r3, [r7, #15]
 852              	.L52:
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 853              		.loc 1 596 0
 854 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 855              		.loc 1 597 0
 856 0034 1846     		mov	r0, r3
 857 0036 07F11407 		add	r7, r7, #20
 858 003a BD46     		mov	sp, r7
 859 003c 80BC     		pop	{r7}
 860 003e 7047     		bx	lr
 861              	.L54:
 862              		.align	2
 863              	.L53:
 864 0040 00740040 		.word	1073771520
 865              		.cfi_endproc
 866              	.LFE123:
 868              		.section	.text.DAC_ClearFlag,"ax",%progbits
 869              		.align	2
 870              		.global	DAC_ClearFlag
 871              		.thumb
 872              		.thumb_func
 874              	DAC_ClearFlag:
 875              	.LFB124:
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 876              		.loc 1 613 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 8
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880              		@ link register save eliminated.
 881 0000 80B4     		push	{r7}
 882              	.LCFI41:
 883              		.cfi_def_cfa_offset 4
 884 0002 83B0     		sub	sp, sp, #12
 885              	.LCFI42:
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_offset 7, -4
 889              	.LCFI43:
 890              		.cfi_def_cfa_register 7
 891 0006 7860     		str	r0, [r7, #4]
 892 0008 3960     		str	r1, [r7, #0]
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 893              		.loc 1 619 0
 894 000a 054B     		ldr	r3, .L56
 895 000c 7A68     		ldr	r2, [r7, #4]
 896 000e 3968     		ldr	r1, [r7, #0]
 897 0010 01FA02F2 		lsl	r2, r1, r2
 898 0014 5A63     		str	r2, [r3, #52]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 899              		.loc 1 620 0
 900 0016 07F10C07 		add	r7, r7, #12
 901 001a BD46     		mov	sp, r7
 902 001c 80BC     		pop	{r7}
 903 001e 7047     		bx	lr
 904              	.L57:
 905              		.align	2
 906              	.L56:
 907 0020 00740040 		.word	1073771520
 908              		.cfi_endproc
 909              	.LFE124:
 911              		.section	.text.DAC_GetITStatus,"ax",%progbits
 912              		.align	2
 913              		.global	DAC_GetITStatus
 914              		.thumb
 915              		.thumb_func
 917              	DAC_GetITStatus:
 918              	.LFB125:
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 919              		.loc 1 636 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 16
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923              		@ link register save eliminated.
 924 0000 80B4     		push	{r7}
 925              	.LCFI44:
 926              		.cfi_def_cfa_offset 4
 927 0002 85B0     		sub	sp, sp, #20
 928              	.LCFI45:
 929              		.cfi_def_cfa_offset 24
 930 0004 00AF     		add	r7, sp, #0
 931              		.cfi_offset 7, -4
 932              	.LCFI46:
 933              		.cfi_def_cfa_register 7
 934 0006 7860     		str	r0, [r7, #4]
 935 0008 3960     		str	r1, [r7, #0]
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 936              		.loc 1 637 0
 937 000a 4FF00003 		mov	r3, #0
 938 000e FB73     		strb	r3, [r7, #15]
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 939              		.loc 1 638 0
 940 0010 4FF00003 		mov	r3, #0
 941 0014 BB60     		str	r3, [r7, #8]
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 942              		.loc 1 645 0
 943 0016 124B     		ldr	r3, .L61
 944 0018 1A68     		ldr	r2, [r3, #0]
 945 001a 7B68     		ldr	r3, [r7, #4]
 946 001c 3968     		ldr	r1, [r7, #0]
 947 001e 01FA03F3 		lsl	r3, r1, r3
 948 0022 02EA0303 		and	r3, r2, r3
 949 0026 BB60     		str	r3, [r7, #8]
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 950              		.loc 1 648 0
 951 0028 0D4B     		ldr	r3, .L61
 952 002a 5A6B     		ldr	r2, [r3, #52]
 953 002c 7B68     		ldr	r3, [r7, #4]
 954 002e 3968     		ldr	r1, [r7, #0]
 955 0030 01FA03F3 		lsl	r3, r1, r3
 956 0034 02EA0303 		and	r3, r2, r3
 957 0038 002B     		cmp	r3, #0
 958 003a 06D0     		beq	.L59
 959              		.loc 1 648 0 is_stmt 0 discriminator 1
 960 003c BB68     		ldr	r3, [r7, #8]
 961 003e 002B     		cmp	r3, #0
 962 0040 03D0     		beq	.L59
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 963              		.loc 1 651 0 is_stmt 1
 964 0042 4FF00103 		mov	r3, #1
 965 0046 FB73     		strb	r3, [r7, #15]
 966 0048 02E0     		b	.L60
 967              	.L59:
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 968              		.loc 1 656 0
 969 004a 4FF00003 		mov	r3, #0
 970 004e FB73     		strb	r3, [r7, #15]
 971              	.L60:
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 972              		.loc 1 659 0
 973 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 974              		.loc 1 660 0
 975 0052 1846     		mov	r0, r3
 976 0054 07F11407 		add	r7, r7, #20
 977 0058 BD46     		mov	sp, r7
 978 005a 80BC     		pop	{r7}
 979 005c 7047     		bx	lr
 980              	.L62:
 981 005e 00BF     		.align	2
 982              	.L61:
 983 0060 00740040 		.word	1073771520
 984              		.cfi_endproc
 985              	.LFE125:
 987              		.section	.text.DAC_ClearITPendingBit,"ax",%progbits
 988              		.align	2
 989              		.global	DAC_ClearITPendingBit
 990              		.thumb
 991              		.thumb_func
 993              	DAC_ClearITPendingBit:
 994              	.LFB126:
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 995              		.loc 1 676 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 8
 998              		@ frame_needed = 1, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 1000 0000 80B4     		push	{r7}
 1001              	.LCFI47:
 1002              		.cfi_def_cfa_offset 4
 1003 0002 83B0     		sub	sp, sp, #12
 1004              	.LCFI48:
 1005              		.cfi_def_cfa_offset 16
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_offset 7, -4
 1008              	.LCFI49:
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
 1011 0008 3960     		str	r1, [r7, #0]
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 1012              		.loc 1 682 0
 1013 000a 054B     		ldr	r3, .L64
 1014 000c 7A68     		ldr	r2, [r7, #4]
 1015 000e 3968     		ldr	r1, [r7, #0]
 1016 0010 01FA02F2 		lsl	r2, r1, r2
 1017 0014 5A63     		str	r2, [r3, #52]
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 1018              		.loc 1 683 0
 1019 0016 07F10C07 		add	r7, r7, #12
 1020 001a BD46     		mov	sp, r7
 1021 001c 80BC     		pop	{r7}
 1022 001e 7047     		bx	lr
 1023              	.L65:
 1024              		.align	2
 1025              	.L64:
 1026 0020 00740040 		.word	1073771520
 1027              		.cfi_endproc
 1028              	.LFE126:
 1030              		.text
 1031              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
     /tmp/ccYuRzhV.s:25     .text.DAC_DeInit:00000000 $t
     /tmp/ccYuRzhV.s:30     .text.DAC_DeInit:00000000 DAC_DeInit
     /tmp/ccYuRzhV.s:59     .text.DAC_Init:00000000 $t
     /tmp/ccYuRzhV.s:64     .text.DAC_Init:00000000 DAC_Init
     /tmp/ccYuRzhV.s:136    .text.DAC_Init:0000006c $d
     /tmp/ccYuRzhV.s:141    .text.DAC_StructInit:00000000 $t
     /tmp/ccYuRzhV.s:146    .text.DAC_StructInit:00000000 DAC_StructInit
     /tmp/ccYuRzhV.s:189    .text.DAC_Cmd:00000000 $t
     /tmp/ccYuRzhV.s:194    .text.DAC_Cmd:00000000 DAC_Cmd
     /tmp/ccYuRzhV.s:248    .text.DAC_Cmd:00000050 $d
     /tmp/ccYuRzhV.s:253    .text.DAC_SoftwareTriggerCmd:00000000 $t
     /tmp/ccYuRzhV.s:258    .text.DAC_SoftwareTriggerCmd:00000000 DAC_SoftwareTriggerCmd
     /tmp/ccYuRzhV.s:314    .text.DAC_SoftwareTriggerCmd:00000058 $d
     /tmp/ccYuRzhV.s:319    .text.DAC_DualSoftwareTriggerCmd:00000000 $t
     /tmp/ccYuRzhV.s:324    .text.DAC_DualSoftwareTriggerCmd:00000000 DAC_DualSoftwareTriggerCmd
     /tmp/ccYuRzhV.s:370    .text.DAC_DualSoftwareTriggerCmd:00000034 $d
     /tmp/ccYuRzhV.s:375    .text.DAC_WaveGenerationCmd:00000000 $t
     /tmp/ccYuRzhV.s:380    .text.DAC_WaveGenerationCmd:00000000 DAC_WaveGenerationCmd
     /tmp/ccYuRzhV.s:435    .text.DAC_WaveGenerationCmd:0000004c $d
     /tmp/ccYuRzhV.s:440    .text.DAC_SetChannel1Data:00000000 $t
     /tmp/ccYuRzhV.s:445    .text.DAC_SetChannel1Data:00000000 DAC_SetChannel1Data
     /tmp/ccYuRzhV.s:489    .text.DAC_SetChannel1Data:00000034 $d
     /tmp/ccYuRzhV.s:494    .text.DAC_SetChannel2Data:00000000 $t
     /tmp/ccYuRzhV.s:499    .text.DAC_SetChannel2Data:00000000 DAC_SetChannel2Data
     /tmp/ccYuRzhV.s:543    .text.DAC_SetChannel2Data:00000034 $d
     /tmp/ccYuRzhV.s:548    .text.DAC_SetDualChannelData:00000000 $t
     /tmp/ccYuRzhV.s:553    .text.DAC_SetDualChannelData:00000000 DAC_SetDualChannelData
     /tmp/ccYuRzhV.s:620    .text.DAC_SetDualChannelData:00000060 $d
     /tmp/ccYuRzhV.s:625    .text.DAC_GetDataOutputValue:00000000 $t
     /tmp/ccYuRzhV.s:630    .text.DAC_GetDataOutputValue:00000000 DAC_GetDataOutputValue
     /tmp/ccYuRzhV.s:674    .text.DAC_GetDataOutputValue:00000034 $d
     /tmp/ccYuRzhV.s:679    .text.DAC_DMACmd:00000000 $t
     /tmp/ccYuRzhV.s:684    .text.DAC_DMACmd:00000000 DAC_DMACmd
     /tmp/ccYuRzhV.s:738    .text.DAC_DMACmd:00000050 $d
     /tmp/ccYuRzhV.s:743    .text.DAC_ITConfig:00000000 $t
     /tmp/ccYuRzhV.s:748    .text.DAC_ITConfig:00000000 DAC_ITConfig
     /tmp/ccYuRzhV.s:803    .text.DAC_ITConfig:0000004c $d
     /tmp/ccYuRzhV.s:808    .text.DAC_GetFlagStatus:00000000 $t
     /tmp/ccYuRzhV.s:813    .text.DAC_GetFlagStatus:00000000 DAC_GetFlagStatus
     /tmp/ccYuRzhV.s:864    .text.DAC_GetFlagStatus:00000040 $d
     /tmp/ccYuRzhV.s:869    .text.DAC_ClearFlag:00000000 $t
     /tmp/ccYuRzhV.s:874    .text.DAC_ClearFlag:00000000 DAC_ClearFlag
     /tmp/ccYuRzhV.s:907    .text.DAC_ClearFlag:00000020 $d
     /tmp/ccYuRzhV.s:912    .text.DAC_GetITStatus:00000000 $t
     /tmp/ccYuRzhV.s:917    .text.DAC_GetITStatus:00000000 DAC_GetITStatus
     /tmp/ccYuRzhV.s:983    .text.DAC_GetITStatus:00000060 $d
     /tmp/ccYuRzhV.s:988    .text.DAC_ClearITPendingBit:00000000 $t
     /tmp/ccYuRzhV.s:993    .text.DAC_ClearITPendingBit:00000000 DAC_ClearITPendingBit
     /tmp/ccYuRzhV.s:1026   .text.DAC_ClearITPendingBit:00000020 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
