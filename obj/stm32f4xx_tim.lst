   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_tim.c"
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.TIM_DeInit,"ax",%progbits
  25              		.align	2
  26              		.global	TIM_DeInit
  27              		.thumb
  28              		.thumb_func
  30              	TIM_DeInit:
  31              	.LFB110:
  32              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  33              		.loc 1 195 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40 0002 82B0     		sub	sp, sp, #8
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_offset 14, -4
  45              		.cfi_offset 7, -8
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
  49              		.loc 1 199 0
  50 0008 7A68     		ldr	r2, [r7, #4]
  51 000a 784B     		ldr	r3, .L16
  52 000c 9A42     		cmp	r2, r3
  53 000e 0CD1     		bne	.L2
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  54              		.loc 1 201 0
  55 0010 4FF00100 		mov	r0, #1
  56 0014 4FF00101 		mov	r1, #1
  57 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  58              		.loc 1 202 0
  59 001c 4FF00100 		mov	r0, #1
  60 0020 4FF00001 		mov	r1, #0
  61 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  62 0028 DBE0     		b	.L1
  63              	.L2:
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
  64              		.loc 1 204 0
  65 002a 7B68     		ldr	r3, [r7, #4]
  66 002c B3F1804F 		cmp	r3, #1073741824
  67 0030 0CD1     		bne	.L4
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  68              		.loc 1 206 0
  69 0032 4FF00100 		mov	r0, #1
  70 0036 4FF00101 		mov	r1, #1
  71 003a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  72              		.loc 1 207 0
  73 003e 4FF00100 		mov	r0, #1
  74 0042 4FF00001 		mov	r1, #0
  75 0046 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  76 004a CAE0     		b	.L1
  77              	.L4:
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
  78              		.loc 1 209 0
  79 004c 7A68     		ldr	r2, [r7, #4]
  80 004e 684B     		ldr	r3, .L16+4
  81 0050 9A42     		cmp	r2, r3
  82 0052 0CD1     		bne	.L5
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  83              		.loc 1 211 0
  84 0054 4FF00200 		mov	r0, #2
  85 0058 4FF00101 		mov	r1, #1
  86 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  87              		.loc 1 212 0
  88 0060 4FF00200 		mov	r0, #2
  89 0064 4FF00001 		mov	r1, #0
  90 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  91 006c B9E0     		b	.L1
  92              	.L5:
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
  93              		.loc 1 214 0
  94 006e 7A68     		ldr	r2, [r7, #4]
  95 0070 604B     		ldr	r3, .L16+8
  96 0072 9A42     		cmp	r2, r3
  97 0074 0CD1     		bne	.L6
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  98              		.loc 1 216 0
  99 0076 4FF00400 		mov	r0, #4
 100 007a 4FF00101 		mov	r1, #1
 101 007e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 102              		.loc 1 217 0
 103 0082 4FF00400 		mov	r0, #4
 104 0086 4FF00001 		mov	r1, #0
 105 008a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 106 008e A8E0     		b	.L1
 107              	.L6:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 108              		.loc 1 219 0
 109 0090 7A68     		ldr	r2, [r7, #4]
 110 0092 594B     		ldr	r3, .L16+12
 111 0094 9A42     		cmp	r2, r3
 112 0096 0CD1     		bne	.L7
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 113              		.loc 1 221 0
 114 0098 4FF00800 		mov	r0, #8
 115 009c 4FF00101 		mov	r1, #1
 116 00a0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 117              		.loc 1 222 0
 118 00a4 4FF00800 		mov	r0, #8
 119 00a8 4FF00001 		mov	r1, #0
 120 00ac FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 121 00b0 97E0     		b	.L1
 122              	.L7:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 123              		.loc 1 224 0
 124 00b2 7A68     		ldr	r2, [r7, #4]
 125 00b4 514B     		ldr	r3, .L16+16
 126 00b6 9A42     		cmp	r2, r3
 127 00b8 0CD1     		bne	.L8
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 128              		.loc 1 226 0
 129 00ba 4FF01000 		mov	r0, #16
 130 00be 4FF00101 		mov	r1, #1
 131 00c2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 132              		.loc 1 227 0
 133 00c6 4FF01000 		mov	r0, #16
 134 00ca 4FF00001 		mov	r1, #0
 135 00ce FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 136 00d2 86E0     		b	.L1
 137              	.L8:
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 138              		.loc 1 229 0
 139 00d4 7A68     		ldr	r2, [r7, #4]
 140 00d6 4A4B     		ldr	r3, .L16+20
 141 00d8 9A42     		cmp	r2, r3
 142 00da 0CD1     		bne	.L9
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 143              		.loc 1 231 0
 144 00dc 4FF02000 		mov	r0, #32
 145 00e0 4FF00101 		mov	r1, #1
 146 00e4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 147              		.loc 1 232 0
 148 00e8 4FF02000 		mov	r0, #32
 149 00ec 4FF00001 		mov	r1, #0
 150 00f0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 151 00f4 75E0     		b	.L1
 152              	.L9:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 153              		.loc 1 234 0
 154 00f6 7A68     		ldr	r2, [r7, #4]
 155 00f8 424B     		ldr	r3, .L16+24
 156 00fa 9A42     		cmp	r2, r3
 157 00fc 0CD1     		bne	.L10
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 158              		.loc 1 236 0
 159 00fe 4FF00200 		mov	r0, #2
 160 0102 4FF00101 		mov	r1, #1
 161 0106 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 162              		.loc 1 237 0
 163 010a 4FF00200 		mov	r0, #2
 164 010e 4FF00001 		mov	r1, #0
 165 0112 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 166 0116 64E0     		b	.L1
 167              	.L10:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 168              		.loc 1 239 0
 169 0118 7A68     		ldr	r2, [r7, #4]
 170 011a 3B4B     		ldr	r3, .L16+28
 171 011c 9A42     		cmp	r2, r3
 172 011e 0CD1     		bne	.L11
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 173              		.loc 1 241 0
 174 0120 4FF48030 		mov	r0, #65536
 175 0124 4FF00101 		mov	r1, #1
 176 0128 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 177              		.loc 1 242 0
 178 012c 4FF48030 		mov	r0, #65536
 179 0130 4FF00001 		mov	r1, #0
 180 0134 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 181 0138 53E0     		b	.L1
 182              	.L11:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 183              		.loc 1 244 0
 184 013a 7A68     		ldr	r2, [r7, #4]
 185 013c 334B     		ldr	r3, .L16+32
 186 013e 9A42     		cmp	r2, r3
 187 0140 0CD1     		bne	.L12
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 188              		.loc 1 246 0
 189 0142 4FF40030 		mov	r0, #131072
 190 0146 4FF00101 		mov	r1, #1
 191 014a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 192              		.loc 1 247 0
 193 014e 4FF40030 		mov	r0, #131072
 194 0152 4FF00001 		mov	r1, #0
 195 0156 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 196 015a 42E0     		b	.L1
 197              	.L12:
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 198              		.loc 1 249 0
 199 015c 7A68     		ldr	r2, [r7, #4]
 200 015e 2C4B     		ldr	r3, .L16+36
 201 0160 9A42     		cmp	r2, r3
 202 0162 0CD1     		bne	.L13
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 203              		.loc 1 251 0
 204 0164 4FF48020 		mov	r0, #262144
 205 0168 4FF00101 		mov	r1, #1
 206 016c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 207              		.loc 1 252 0
 208 0170 4FF48020 		mov	r0, #262144
 209 0174 4FF00001 		mov	r1, #0
 210 0178 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 211 017c 31E0     		b	.L1
 212              	.L13:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 213              		.loc 1 254 0
 214 017e 7A68     		ldr	r2, [r7, #4]
 215 0180 244B     		ldr	r3, .L16+40
 216 0182 9A42     		cmp	r2, r3
 217 0184 0CD1     		bne	.L14
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 218              		.loc 1 256 0
 219 0186 4FF04000 		mov	r0, #64
 220 018a 4FF00101 		mov	r1, #1
 221 018e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 222              		.loc 1 257 0
 223 0192 4FF04000 		mov	r0, #64
 224 0196 4FF00001 		mov	r1, #0
 225 019a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 226 019e 20E0     		b	.L1
 227              	.L14:
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 228              		.loc 1 259 0
 229 01a0 7A68     		ldr	r2, [r7, #4]
 230 01a2 1D4B     		ldr	r3, .L16+44
 231 01a4 9A42     		cmp	r2, r3
 232 01a6 0CD1     		bne	.L15
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 233              		.loc 1 261 0
 234 01a8 4FF08000 		mov	r0, #128
 235 01ac 4FF00101 		mov	r1, #1
 236 01b0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 237              		.loc 1 262 0
 238 01b4 4FF08000 		mov	r0, #128
 239 01b8 4FF00001 		mov	r1, #0
 240 01bc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 241 01c0 0FE0     		b	.L1
 242              	.L15:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 243              		.loc 1 266 0
 244 01c2 7A68     		ldr	r2, [r7, #4]
 245 01c4 154B     		ldr	r3, .L16+48
 246 01c6 9A42     		cmp	r2, r3
 247 01c8 0BD1     		bne	.L1
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 248              		.loc 1 268 0
 249 01ca 4FF48070 		mov	r0, #256
 250 01ce 4FF00101 		mov	r1, #1
 251 01d2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 252              		.loc 1 269 0
 253 01d6 4FF48070 		mov	r0, #256
 254 01da 4FF00001 		mov	r1, #0
 255 01de FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 256              	.L1:
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 257              		.loc 1 272 0
 258 01e2 07F10807 		add	r7, r7, #8
 259 01e6 BD46     		mov	sp, r7
 260 01e8 80BD     		pop	{r7, pc}
 261              	.L17:
 262 01ea 00BF     		.align	2
 263              	.L16:
 264 01ec 00000140 		.word	1073807360
 265 01f0 00040040 		.word	1073742848
 266 01f4 00080040 		.word	1073743872
 267 01f8 000C0040 		.word	1073744896
 268 01fc 00100040 		.word	1073745920
 269 0200 00140040 		.word	1073746944
 270 0204 00040140 		.word	1073808384
 271 0208 00400140 		.word	1073823744
 272 020c 00440140 		.word	1073824768
 273 0210 00480140 		.word	1073825792
 274 0214 00180040 		.word	1073747968
 275 0218 001C0040 		.word	1073748992
 276 021c 00200040 		.word	1073750016
 277              		.cfi_endproc
 278              	.LFE110:
 280              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 281              		.align	2
 282              		.global	TIM_TimeBaseInit
 283              		.thumb
 284              		.thumb_func
 286              	TIM_TimeBaseInit:
 287              	.LFB111:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 288              		.loc 1 283 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 16
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293 0000 80B4     		push	{r7}
 294              	.LCFI3:
 295              		.cfi_def_cfa_offset 4
 296 0002 85B0     		sub	sp, sp, #20
 297              	.LCFI4:
 298              		.cfi_def_cfa_offset 24
 299 0004 00AF     		add	r7, sp, #0
 300              		.cfi_offset 7, -4
 301              	.LCFI5:
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
 304 0008 3960     		str	r1, [r7, #0]
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 305              		.loc 1 284 0
 306 000a 4FF00003 		mov	r3, #0
 307 000e FB81     		strh	r3, [r7, #14]	@ movhi
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 308              		.loc 1 291 0
 309 0010 7B68     		ldr	r3, [r7, #4]
 310 0012 1B88     		ldrh	r3, [r3, #0]	@ movhi
 311 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 312              		.loc 1 293 0
 313 0016 7A68     		ldr	r2, [r7, #4]
 314 0018 294B     		ldr	r3, .L24
 315 001a 9A42     		cmp	r2, r3
 316 001c 13D0     		beq	.L19
 317              		.loc 1 293 0 is_stmt 0 discriminator 1
 318 001e 7A68     		ldr	r2, [r7, #4]
 319 0020 284B     		ldr	r3, .L24+4
 320 0022 9A42     		cmp	r2, r3
 321 0024 0FD0     		beq	.L19
 322 0026 7B68     		ldr	r3, [r7, #4]
 323 0028 B3F1804F 		cmp	r3, #1073741824
 324 002c 0BD0     		beq	.L19
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 325              		.loc 1 294 0 is_stmt 1
 326 002e 7A68     		ldr	r2, [r7, #4]
 327 0030 254B     		ldr	r3, .L24+8
 328 0032 9A42     		cmp	r2, r3
 329 0034 07D0     		beq	.L19
 330              		.loc 1 294 0 is_stmt 0 discriminator 1
 331 0036 7A68     		ldr	r2, [r7, #4]
 332 0038 244B     		ldr	r3, .L24+12
 333 003a 9A42     		cmp	r2, r3
 334 003c 03D0     		beq	.L19
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 335              		.loc 1 295 0 is_stmt 1
 336 003e 7A68     		ldr	r2, [r7, #4]
 337 0040 234B     		ldr	r3, .L24+16
 338 0042 9A42     		cmp	r2, r3
 339 0044 09D1     		bne	.L20
 340              	.L19:
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 341              		.loc 1 298 0
 342 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 343 0048 23F07003 		bic	r3, r3, #112
 344 004c FB81     		strh	r3, [r7, #14]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 345              		.loc 1 299 0
 346 004e 3B68     		ldr	r3, [r7, #0]
 347 0050 5A88     		ldrh	r2, [r3, #2]
 348 0052 FB89     		ldrh	r3, [r7, #14]	@ movhi
 349 0054 42EA0303 		orr	r3, r2, r3
 350 0058 FB81     		strh	r3, [r7, #14]	@ movhi
 351              	.L20:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 352              		.loc 1 302 0
 353 005a 7A68     		ldr	r2, [r7, #4]
 354 005c 1D4B     		ldr	r3, .L24+20
 355 005e 9A42     		cmp	r2, r3
 356 0060 0DD0     		beq	.L21
 357              		.loc 1 302 0 is_stmt 0 discriminator 1
 358 0062 7A68     		ldr	r2, [r7, #4]
 359 0064 1C4B     		ldr	r3, .L24+24
 360 0066 9A42     		cmp	r2, r3
 361 0068 09D0     		beq	.L21
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 362              		.loc 1 305 0 is_stmt 1
 363 006a FB89     		ldrh	r3, [r7, #14]	@ movhi
 364 006c 23F44073 		bic	r3, r3, #768
 365 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 366              		.loc 1 306 0
 367 0072 3B68     		ldr	r3, [r7, #0]
 368 0074 1A89     		ldrh	r2, [r3, #8]
 369 0076 FB89     		ldrh	r3, [r7, #14]	@ movhi
 370 0078 42EA0303 		orr	r3, r2, r3
 371 007c FB81     		strh	r3, [r7, #14]	@ movhi
 372              	.L21:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 373              		.loc 1 309 0
 374 007e 7B68     		ldr	r3, [r7, #4]
 375 0080 FA89     		ldrh	r2, [r7, #14]	@ movhi
 376 0082 1A80     		strh	r2, [r3, #0]	@ movhi
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 377              		.loc 1 312 0
 378 0084 3B68     		ldr	r3, [r7, #0]
 379 0086 5A68     		ldr	r2, [r3, #4]
 380 0088 7B68     		ldr	r3, [r7, #4]
 381 008a DA62     		str	r2, [r3, #44]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 382              		.loc 1 315 0
 383 008c 3B68     		ldr	r3, [r7, #0]
 384 008e 1A88     		ldrh	r2, [r3, #0]
 385 0090 7B68     		ldr	r3, [r7, #4]
 386 0092 1A85     		strh	r2, [r3, #40]	@ movhi
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 387              		.loc 1 317 0
 388 0094 7A68     		ldr	r2, [r7, #4]
 389 0096 0A4B     		ldr	r3, .L24
 390 0098 9A42     		cmp	r2, r3
 391 009a 03D0     		beq	.L22
 392              		.loc 1 317 0 is_stmt 0 discriminator 1
 393 009c 7A68     		ldr	r2, [r7, #4]
 394 009e 094B     		ldr	r3, .L24+4
 395 00a0 9A42     		cmp	r2, r3
 396 00a2 04D1     		bne	.L23
 397              	.L22:
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 398              		.loc 1 320 0 is_stmt 1
 399 00a4 3B68     		ldr	r3, [r7, #0]
 400 00a6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 401 00a8 1A46     		mov	r2, r3
 402 00aa 7B68     		ldr	r3, [r7, #4]
 403 00ac 1A86     		strh	r2, [r3, #48]	@ movhi
 404              	.L23:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 405              		.loc 1 325 0
 406 00ae 7B68     		ldr	r3, [r7, #4]
 407 00b0 4FF00102 		mov	r2, #1
 408 00b4 9A82     		strh	r2, [r3, #20]	@ movhi
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 409              		.loc 1 326 0
 410 00b6 07F11407 		add	r7, r7, #20
 411 00ba BD46     		mov	sp, r7
 412 00bc 80BC     		pop	{r7}
 413 00be 7047     		bx	lr
 414              	.L25:
 415              		.align	2
 416              	.L24:
 417 00c0 00000140 		.word	1073807360
 418 00c4 00040140 		.word	1073808384
 419 00c8 00040040 		.word	1073742848
 420 00cc 00080040 		.word	1073743872
 421 00d0 000C0040 		.word	1073744896
 422 00d4 00100040 		.word	1073745920
 423 00d8 00140040 		.word	1073746944
 424              		.cfi_endproc
 425              	.LFE111:
 427              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 428              		.align	2
 429              		.global	TIM_TimeBaseStructInit
 430              		.thumb
 431              		.thumb_func
 433              	TIM_TimeBaseStructInit:
 434              	.LFB112:
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 435              		.loc 1 335 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440 0000 80B4     		push	{r7}
 441              	.LCFI6:
 442              		.cfi_def_cfa_offset 4
 443 0002 83B0     		sub	sp, sp, #12
 444              	.LCFI7:
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_offset 7, -4
 448              	.LCFI8:
 449              		.cfi_def_cfa_register 7
 450 0006 7860     		str	r0, [r7, #4]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 451              		.loc 1 337 0
 452 0008 7B68     		ldr	r3, [r7, #4]
 453 000a 4FF0FF32 		mov	r2, #-1
 454 000e 5A60     		str	r2, [r3, #4]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 455              		.loc 1 338 0
 456 0010 7B68     		ldr	r3, [r7, #4]
 457 0012 4FF00002 		mov	r2, #0
 458 0016 1A80     		strh	r2, [r3, #0]	@ movhi
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 459              		.loc 1 339 0
 460 0018 7B68     		ldr	r3, [r7, #4]
 461 001a 4FF00002 		mov	r2, #0
 462 001e 1A81     		strh	r2, [r3, #8]	@ movhi
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 463              		.loc 1 340 0
 464 0020 7B68     		ldr	r3, [r7, #4]
 465 0022 4FF00002 		mov	r2, #0
 466 0026 5A80     		strh	r2, [r3, #2]	@ movhi
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 467              		.loc 1 341 0
 468 0028 7B68     		ldr	r3, [r7, #4]
 469 002a 4FF00002 		mov	r2, #0
 470 002e 9A72     		strb	r2, [r3, #10]
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 471              		.loc 1 342 0
 472 0030 07F10C07 		add	r7, r7, #12
 473 0034 BD46     		mov	sp, r7
 474 0036 80BC     		pop	{r7}
 475 0038 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE112:
 479 003a 00BF     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 480              		.align	2
 481              		.global	TIM_PrescalerConfig
 482              		.thumb
 483              		.thumb_func
 485              	TIM_PrescalerConfig:
 486              	.LFB113:
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 487              		.loc 1 355 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 8
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
 493              	.LCFI9:
 494              		.cfi_def_cfa_offset 4
 495 0002 83B0     		sub	sp, sp, #12
 496              	.LCFI10:
 497              		.cfi_def_cfa_offset 16
 498 0004 00AF     		add	r7, sp, #0
 499              		.cfi_offset 7, -4
 500              	.LCFI11:
 501              		.cfi_def_cfa_register 7
 502 0006 7860     		str	r0, [r7, #4]
 503 0008 1346     		mov	r3, r2
 504 000a 0A46     		mov	r2, r1	@ movhi
 505 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 506 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 507              		.loc 1 360 0
 508 0010 7B68     		ldr	r3, [r7, #4]
 509 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 510 0014 1A85     		strh	r2, [r3, #40]	@ movhi
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 511              		.loc 1 362 0
 512 0016 7B68     		ldr	r3, [r7, #4]
 513 0018 3A88     		ldrh	r2, [r7, #0]	@ movhi
 514 001a 9A82     		strh	r2, [r3, #20]	@ movhi
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 515              		.loc 1 363 0
 516 001c 07F10C07 		add	r7, r7, #12
 517 0020 BD46     		mov	sp, r7
 518 0022 80BC     		pop	{r7}
 519 0024 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE113:
 523 0026 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 524              		.align	2
 525              		.global	TIM_CounterModeConfig
 526              		.thumb
 527              		.thumb_func
 529              	TIM_CounterModeConfig:
 530              	.LFB114:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 531              		.loc 1 378 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 16
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              	.LCFI12:
 538              		.cfi_def_cfa_offset 4
 539 0002 85B0     		sub	sp, sp, #20
 540              	.LCFI13:
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_offset 7, -4
 544              	.LCFI14:
 545              		.cfi_def_cfa_register 7
 546 0006 7860     		str	r0, [r7, #4]
 547 0008 0B46     		mov	r3, r1
 548 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 549              		.loc 1 379 0
 550 000c 4FF00003 		mov	r3, #0
 551 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 552              		.loc 1 385 0
 553 0012 7B68     		ldr	r3, [r7, #4]
 554 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 555 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 556              		.loc 1 388 0
 557 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 558 001a 23F07003 		bic	r3, r3, #112
 559 001e FB81     		strh	r3, [r7, #14]	@ movhi
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 560              		.loc 1 391 0
 561 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 562 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 563 0024 42EA0303 		orr	r3, r2, r3
 564 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 565              		.loc 1 394 0
 566 002a 7B68     		ldr	r3, [r7, #4]
 567 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 568 002e 1A80     		strh	r2, [r3, #0]	@ movhi
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 569              		.loc 1 395 0
 570 0030 07F11407 		add	r7, r7, #20
 571 0034 BD46     		mov	sp, r7
 572 0036 80BC     		pop	{r7}
 573 0038 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE114:
 577 003a 00BF     		.section	.text.TIM_SetCounter,"ax",%progbits
 578              		.align	2
 579              		.global	TIM_SetCounter
 580              		.thumb
 581              		.thumb_func
 583              	TIM_SetCounter:
 584              	.LFB115:
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 585              		.loc 1 404 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 8
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 590 0000 80B4     		push	{r7}
 591              	.LCFI15:
 592              		.cfi_def_cfa_offset 4
 593 0002 83B0     		sub	sp, sp, #12
 594              	.LCFI16:
 595              		.cfi_def_cfa_offset 16
 596 0004 00AF     		add	r7, sp, #0
 597              		.cfi_offset 7, -4
 598              	.LCFI17:
 599              		.cfi_def_cfa_register 7
 600 0006 7860     		str	r0, [r7, #4]
 601 0008 3960     		str	r1, [r7, #0]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 602              		.loc 1 409 0
 603 000a 7B68     		ldr	r3, [r7, #4]
 604 000c 3A68     		ldr	r2, [r7, #0]
 605 000e 5A62     		str	r2, [r3, #36]
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 606              		.loc 1 410 0
 607 0010 07F10C07 		add	r7, r7, #12
 608 0014 BD46     		mov	sp, r7
 609 0016 80BC     		pop	{r7}
 610 0018 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE115:
 614 001a 00BF     		.section	.text.TIM_SetAutoreload,"ax",%progbits
 615              		.align	2
 616              		.global	TIM_SetAutoreload
 617              		.thumb
 618              		.thumb_func
 620              	TIM_SetAutoreload:
 621              	.LFB116:
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 622              		.loc 1 419 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 8
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              	.LCFI18:
 629              		.cfi_def_cfa_offset 4
 630 0002 83B0     		sub	sp, sp, #12
 631              	.LCFI19:
 632              		.cfi_def_cfa_offset 16
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_offset 7, -4
 635              	.LCFI20:
 636              		.cfi_def_cfa_register 7
 637 0006 7860     		str	r0, [r7, #4]
 638 0008 3960     		str	r1, [r7, #0]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 639              		.loc 1 424 0
 640 000a 7B68     		ldr	r3, [r7, #4]
 641 000c 3A68     		ldr	r2, [r7, #0]
 642 000e DA62     		str	r2, [r3, #44]
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 643              		.loc 1 425 0
 644 0010 07F10C07 		add	r7, r7, #12
 645 0014 BD46     		mov	sp, r7
 646 0016 80BC     		pop	{r7}
 647 0018 7047     		bx	lr
 648              		.cfi_endproc
 649              	.LFE116:
 651 001a 00BF     		.section	.text.TIM_GetCounter,"ax",%progbits
 652              		.align	2
 653              		.global	TIM_GetCounter
 654              		.thumb
 655              		.thumb_func
 657              	TIM_GetCounter:
 658              	.LFB117:
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 659              		.loc 1 433 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 8
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 0000 80B4     		push	{r7}
 665              	.LCFI21:
 666              		.cfi_def_cfa_offset 4
 667 0002 83B0     		sub	sp, sp, #12
 668              	.LCFI22:
 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_offset 7, -4
 672              	.LCFI23:
 673              		.cfi_def_cfa_register 7
 674 0006 7860     		str	r0, [r7, #4]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 675              		.loc 1 438 0
 676 0008 7B68     		ldr	r3, [r7, #4]
 677 000a 5B6A     		ldr	r3, [r3, #36]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 678              		.loc 1 439 0
 679 000c 1846     		mov	r0, r3
 680 000e 07F10C07 		add	r7, r7, #12
 681 0012 BD46     		mov	sp, r7
 682 0014 80BC     		pop	{r7}
 683 0016 7047     		bx	lr
 684              		.cfi_endproc
 685              	.LFE117:
 687              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 688              		.align	2
 689              		.global	TIM_GetPrescaler
 690              		.thumb
 691              		.thumb_func
 693              	TIM_GetPrescaler:
 694              	.LFB118:
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 695              		.loc 1 447 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 8
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700 0000 80B4     		push	{r7}
 701              	.LCFI24:
 702              		.cfi_def_cfa_offset 4
 703 0002 83B0     		sub	sp, sp, #12
 704              	.LCFI25:
 705              		.cfi_def_cfa_offset 16
 706 0004 00AF     		add	r7, sp, #0
 707              		.cfi_offset 7, -4
 708              	.LCFI26:
 709              		.cfi_def_cfa_register 7
 710 0006 7860     		str	r0, [r7, #4]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 711              		.loc 1 452 0
 712 0008 7B68     		ldr	r3, [r7, #4]
 713 000a 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 714 000c 9BB2     		uxth	r3, r3
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 715              		.loc 1 453 0
 716 000e 1846     		mov	r0, r3
 717 0010 07F10C07 		add	r7, r7, #12
 718 0014 BD46     		mov	sp, r7
 719 0016 80BC     		pop	{r7}
 720 0018 7047     		bx	lr
 721              		.cfi_endproc
 722              	.LFE118:
 724 001a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 725              		.align	2
 726              		.global	TIM_UpdateDisableConfig
 727              		.thumb
 728              		.thumb_func
 730              	TIM_UpdateDisableConfig:
 731              	.LFB119:
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 732              		.loc 1 463 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 8
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737 0000 80B4     		push	{r7}
 738              	.LCFI27:
 739              		.cfi_def_cfa_offset 4
 740 0002 83B0     		sub	sp, sp, #12
 741              	.LCFI28:
 742              		.cfi_def_cfa_offset 16
 743 0004 00AF     		add	r7, sp, #0
 744              		.cfi_offset 7, -4
 745              	.LCFI29:
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
 748 0008 0B46     		mov	r3, r1
 749 000a FB70     		strb	r3, [r7, #3]
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 750              		.loc 1 468 0
 751 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 752 000e 002B     		cmp	r3, #0
 753 0010 08D0     		beq	.L34
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 754              		.loc 1 471 0
 755 0012 7B68     		ldr	r3, [r7, #4]
 756 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 757 0016 9BB2     		uxth	r3, r3
 758 0018 43F00203 		orr	r3, r3, #2
 759 001c 9AB2     		uxth	r2, r3
 760 001e 7B68     		ldr	r3, [r7, #4]
 761 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 762 0022 07E0     		b	.L33
 763              	.L34:
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 764              		.loc 1 476 0
 765 0024 7B68     		ldr	r3, [r7, #4]
 766 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 767 0028 9BB2     		uxth	r3, r3
 768 002a 23F00203 		bic	r3, r3, #2
 769 002e 9AB2     		uxth	r2, r3
 770 0030 7B68     		ldr	r3, [r7, #4]
 771 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 772              	.L33:
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 773              		.loc 1 478 0
 774 0034 07F10C07 		add	r7, r7, #12
 775 0038 BD46     		mov	sp, r7
 776 003a 80BC     		pop	{r7}
 777 003c 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE119:
 781 003e 00BF     		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 782              		.align	2
 783              		.global	TIM_UpdateRequestConfig
 784              		.thumb
 785              		.thumb_func
 787              	TIM_UpdateRequestConfig:
 788              	.LFB120:
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 789              		.loc 1 492 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 8
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              	.LCFI30:
 796              		.cfi_def_cfa_offset 4
 797 0002 83B0     		sub	sp, sp, #12
 798              	.LCFI31:
 799              		.cfi_def_cfa_offset 16
 800 0004 00AF     		add	r7, sp, #0
 801              		.cfi_offset 7, -4
 802              	.LCFI32:
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 805 0008 0B46     		mov	r3, r1
 806 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 807              		.loc 1 497 0
 808 000c 7B88     		ldrh	r3, [r7, #2]
 809 000e 002B     		cmp	r3, #0
 810 0010 08D0     		beq	.L37
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 811              		.loc 1 500 0
 812 0012 7B68     		ldr	r3, [r7, #4]
 813 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 814 0016 9BB2     		uxth	r3, r3
 815 0018 43F00403 		orr	r3, r3, #4
 816 001c 9AB2     		uxth	r2, r3
 817 001e 7B68     		ldr	r3, [r7, #4]
 818 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 819 0022 07E0     		b	.L36
 820              	.L37:
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 821              		.loc 1 505 0
 822 0024 7B68     		ldr	r3, [r7, #4]
 823 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 824 0028 9BB2     		uxth	r3, r3
 825 002a 23F00403 		bic	r3, r3, #4
 826 002e 9AB2     		uxth	r2, r3
 827 0030 7B68     		ldr	r3, [r7, #4]
 828 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 829              	.L36:
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 830              		.loc 1 507 0
 831 0034 07F10C07 		add	r7, r7, #12
 832 0038 BD46     		mov	sp, r7
 833 003a 80BC     		pop	{r7}
 834 003c 7047     		bx	lr
 835              		.cfi_endproc
 836              	.LFE120:
 838 003e 00BF     		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 839              		.align	2
 840              		.global	TIM_ARRPreloadConfig
 841              		.thumb
 842              		.thumb_func
 844              	TIM_ARRPreloadConfig:
 845              	.LFB121:
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 846              		.loc 1 517 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 8
 849              		@ frame_needed = 1, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851 0000 80B4     		push	{r7}
 852              	.LCFI33:
 853              		.cfi_def_cfa_offset 4
 854 0002 83B0     		sub	sp, sp, #12
 855              	.LCFI34:
 856              		.cfi_def_cfa_offset 16
 857 0004 00AF     		add	r7, sp, #0
 858              		.cfi_offset 7, -4
 859              	.LCFI35:
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 862 0008 0B46     		mov	r3, r1
 863 000a FB70     		strb	r3, [r7, #3]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 864              		.loc 1 522 0
 865 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 866 000e 002B     		cmp	r3, #0
 867 0010 08D0     		beq	.L40
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 868              		.loc 1 525 0
 869 0012 7B68     		ldr	r3, [r7, #4]
 870 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 871 0016 9BB2     		uxth	r3, r3
 872 0018 43F08003 		orr	r3, r3, #128
 873 001c 9AB2     		uxth	r2, r3
 874 001e 7B68     		ldr	r3, [r7, #4]
 875 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 876 0022 07E0     		b	.L39
 877              	.L40:
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 878              		.loc 1 530 0
 879 0024 7B68     		ldr	r3, [r7, #4]
 880 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 881 0028 9BB2     		uxth	r3, r3
 882 002a 23F08003 		bic	r3, r3, #128
 883 002e 9AB2     		uxth	r2, r3
 884 0030 7B68     		ldr	r3, [r7, #4]
 885 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 886              	.L39:
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 887              		.loc 1 532 0
 888 0034 07F10C07 		add	r7, r7, #12
 889 0038 BD46     		mov	sp, r7
 890 003a 80BC     		pop	{r7}
 891 003c 7047     		bx	lr
 892              		.cfi_endproc
 893              	.LFE121:
 895 003e 00BF     		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 896              		.align	2
 897              		.global	TIM_SelectOnePulseMode
 898              		.thumb
 899              		.thumb_func
 901              	TIM_SelectOnePulseMode:
 902              	.LFB122:
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 903              		.loc 1 544 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908 0000 80B4     		push	{r7}
 909              	.LCFI36:
 910              		.cfi_def_cfa_offset 4
 911 0002 83B0     		sub	sp, sp, #12
 912              	.LCFI37:
 913              		.cfi_def_cfa_offset 16
 914 0004 00AF     		add	r7, sp, #0
 915              		.cfi_offset 7, -4
 916              	.LCFI38:
 917              		.cfi_def_cfa_register 7
 918 0006 7860     		str	r0, [r7, #4]
 919 0008 0B46     		mov	r3, r1
 920 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 921              		.loc 1 550 0
 922 000c 7B68     		ldr	r3, [r7, #4]
 923 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 924 0010 9BB2     		uxth	r3, r3
 925 0012 23F00803 		bic	r3, r3, #8
 926 0016 9AB2     		uxth	r2, r3
 927 0018 7B68     		ldr	r3, [r7, #4]
 928 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 929              		.loc 1 553 0
 930 001c 7B68     		ldr	r3, [r7, #4]
 931 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 932 0020 9AB2     		uxth	r2, r3
 933 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 934 0024 42EA0303 		orr	r3, r2, r3
 935 0028 9AB2     		uxth	r2, r3
 936 002a 7B68     		ldr	r3, [r7, #4]
 937 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 938              		.loc 1 554 0
 939 002e 07F10C07 		add	r7, r7, #12
 940 0032 BD46     		mov	sp, r7
 941 0034 80BC     		pop	{r7}
 942 0036 7047     		bx	lr
 943              		.cfi_endproc
 944              	.LFE122:
 946              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 947              		.align	2
 948              		.global	TIM_SetClockDivision
 949              		.thumb
 950              		.thumb_func
 952              	TIM_SetClockDivision:
 953              	.LFB123:
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 954              		.loc 1 567 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 8
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 959 0000 80B4     		push	{r7}
 960              	.LCFI39:
 961              		.cfi_def_cfa_offset 4
 962 0002 83B0     		sub	sp, sp, #12
 963              	.LCFI40:
 964              		.cfi_def_cfa_offset 16
 965 0004 00AF     		add	r7, sp, #0
 966              		.cfi_offset 7, -4
 967              	.LCFI41:
 968              		.cfi_def_cfa_register 7
 969 0006 7860     		str	r0, [r7, #4]
 970 0008 0B46     		mov	r3, r1
 971 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 972              		.loc 1 573 0
 973 000c 7B68     		ldr	r3, [r7, #4]
 974 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 975 0010 9BB2     		uxth	r3, r3
 976 0012 23F44073 		bic	r3, r3, #768
 977 0016 9AB2     		uxth	r2, r3
 978 0018 7B68     		ldr	r3, [r7, #4]
 979 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 980              		.loc 1 576 0
 981 001c 7B68     		ldr	r3, [r7, #4]
 982 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 983 0020 9AB2     		uxth	r2, r3
 984 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 985 0024 42EA0303 		orr	r3, r2, r3
 986 0028 9AB2     		uxth	r2, r3
 987 002a 7B68     		ldr	r3, [r7, #4]
 988 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 989              		.loc 1 577 0
 990 002e 07F10C07 		add	r7, r7, #12
 991 0032 BD46     		mov	sp, r7
 992 0034 80BC     		pop	{r7}
 993 0036 7047     		bx	lr
 994              		.cfi_endproc
 995              	.LFE123:
 997              		.section	.text.TIM_Cmd,"ax",%progbits
 998              		.align	2
 999              		.global	TIM_Cmd
 1000              		.thumb
 1001              		.thumb_func
 1003              	TIM_Cmd:
 1004              	.LFB124:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1005              		.loc 1 587 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 8
 1008              		@ frame_needed = 1, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
 1010 0000 80B4     		push	{r7}
 1011              	.LCFI42:
 1012              		.cfi_def_cfa_offset 4
 1013 0002 83B0     		sub	sp, sp, #12
 1014              	.LCFI43:
 1015              		.cfi_def_cfa_offset 16
 1016 0004 00AF     		add	r7, sp, #0
 1017              		.cfi_offset 7, -4
 1018              	.LCFI44:
 1019              		.cfi_def_cfa_register 7
 1020 0006 7860     		str	r0, [r7, #4]
 1021 0008 0B46     		mov	r3, r1
 1022 000a FB70     		strb	r3, [r7, #3]
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 1023              		.loc 1 592 0
 1024 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1025 000e 002B     		cmp	r3, #0
 1026 0010 08D0     		beq	.L45
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1027              		.loc 1 595 0
 1028 0012 7B68     		ldr	r3, [r7, #4]
 1029 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1030 0016 9BB2     		uxth	r3, r3
 1031 0018 43F00103 		orr	r3, r3, #1
 1032 001c 9AB2     		uxth	r2, r3
 1033 001e 7B68     		ldr	r3, [r7, #4]
 1034 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 1035 0022 07E0     		b	.L44
 1036              	.L45:
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1037              		.loc 1 600 0
 1038 0024 7B68     		ldr	r3, [r7, #4]
 1039 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1040 0028 9BB2     		uxth	r3, r3
 1041 002a 23F00103 		bic	r3, r3, #1
 1042 002e 9AB2     		uxth	r2, r3
 1043 0030 7B68     		ldr	r3, [r7, #4]
 1044 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 1045              	.L44:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1046              		.loc 1 602 0
 1047 0034 07F10C07 		add	r7, r7, #12
 1048 0038 BD46     		mov	sp, r7
 1049 003a 80BC     		pop	{r7}
 1050 003c 7047     		bx	lr
 1051              		.cfi_endproc
 1052              	.LFE124:
 1054 003e 00BF     		.section	.text.TIM_OC1Init,"ax",%progbits
 1055              		.align	2
 1056              		.global	TIM_OC1Init
 1057              		.thumb
 1058              		.thumb_func
 1060              	TIM_OC1Init:
 1061              	.LFB125:
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1062              		.loc 1 666 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 16
 1065              		@ frame_needed = 1, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
 1067 0000 80B4     		push	{r7}
 1068              	.LCFI45:
 1069              		.cfi_def_cfa_offset 4
 1070 0002 85B0     		sub	sp, sp, #20
 1071              	.LCFI46:
 1072              		.cfi_def_cfa_offset 24
 1073 0004 00AF     		add	r7, sp, #0
 1074              		.cfi_offset 7, -4
 1075              	.LCFI47:
 1076              		.cfi_def_cfa_register 7
 1077 0006 7860     		str	r0, [r7, #4]
 1078 0008 3960     		str	r1, [r7, #0]
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1079              		.loc 1 667 0
 1080 000a 4FF00003 		mov	r3, #0
 1081 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1082 0010 4FF00003 		mov	r3, #0
 1083 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1084 0016 4FF00003 		mov	r3, #0
 1085 001a BB81     		strh	r3, [r7, #12]	@ movhi
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1086              		.loc 1 676 0
 1087 001c 7B68     		ldr	r3, [r7, #4]
 1088 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1089 0020 9BB2     		uxth	r3, r3
 1090 0022 23F00103 		bic	r3, r3, #1
 1091 0026 9AB2     		uxth	r2, r3
 1092 0028 7B68     		ldr	r3, [r7, #4]
 1093 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1094              		.loc 1 679 0
 1095 002c 7B68     		ldr	r3, [r7, #4]
 1096 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1097 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1098              		.loc 1 681 0
 1099 0032 7B68     		ldr	r3, [r7, #4]
 1100 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1101 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1102              		.loc 1 684 0
 1103 0038 7B68     		ldr	r3, [r7, #4]
 1104 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1105 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1106              		.loc 1 687 0
 1107 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1108 0040 23F07003 		bic	r3, r3, #112
 1109 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1110              		.loc 1 688 0
 1111 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1112 0048 23F00303 		bic	r3, r3, #3
 1113 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1114              		.loc 1 690 0
 1115 004e 3B68     		ldr	r3, [r7, #0]
 1116 0050 1A88     		ldrh	r2, [r3, #0]
 1117 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1118 0054 42EA0303 		orr	r3, r2, r3
 1119 0058 7B81     		strh	r3, [r7, #10]	@ movhi
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1120              		.loc 1 693 0
 1121 005a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1122 005c 23F00203 		bic	r3, r3, #2
 1123 0060 FB81     		strh	r3, [r7, #14]	@ movhi
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1124              		.loc 1 695 0
 1125 0062 3B68     		ldr	r3, [r7, #0]
 1126 0064 9A89     		ldrh	r2, [r3, #12]
 1127 0066 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1128 0068 42EA0303 		orr	r3, r2, r3
 1129 006c FB81     		strh	r3, [r7, #14]	@ movhi
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1130              		.loc 1 698 0
 1131 006e 3B68     		ldr	r3, [r7, #0]
 1132 0070 5A88     		ldrh	r2, [r3, #2]
 1133 0072 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1134 0074 42EA0303 		orr	r3, r2, r3
 1135 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1136              		.loc 1 700 0
 1137 007a 7A68     		ldr	r2, [r7, #4]
 1138 007c 204B     		ldr	r3, .L50
 1139 007e 9A42     		cmp	r2, r3
 1140 0080 03D0     		beq	.L48
 1141              		.loc 1 700 0 is_stmt 0 discriminator 1
 1142 0082 7A68     		ldr	r2, [r7, #4]
 1143 0084 1F4B     		ldr	r3, .L50+4
 1144 0086 9A42     		cmp	r2, r3
 1145 0088 27D1     		bne	.L49
 1146              	.L48:
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1147              		.loc 1 708 0 is_stmt 1
 1148 008a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1149 008c 23F00803 		bic	r3, r3, #8
 1150 0090 FB81     		strh	r3, [r7, #14]	@ movhi
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1151              		.loc 1 710 0
 1152 0092 3B68     		ldr	r3, [r7, #0]
 1153 0094 DA89     		ldrh	r2, [r3, #14]
 1154 0096 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1155 0098 42EA0303 		orr	r3, r2, r3
 1156 009c FB81     		strh	r3, [r7, #14]	@ movhi
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1157              		.loc 1 712 0
 1158 009e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1159 00a0 23F00403 		bic	r3, r3, #4
 1160 00a4 FB81     		strh	r3, [r7, #14]	@ movhi
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1161              		.loc 1 715 0
 1162 00a6 3B68     		ldr	r3, [r7, #0]
 1163 00a8 9A88     		ldrh	r2, [r3, #4]
 1164 00aa FB89     		ldrh	r3, [r7, #14]	@ movhi
 1165 00ac 42EA0303 		orr	r3, r2, r3
 1166 00b0 FB81     		strh	r3, [r7, #14]	@ movhi
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1167              		.loc 1 717 0
 1168 00b2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1169 00b4 23F48073 		bic	r3, r3, #256
 1170 00b8 BB81     		strh	r3, [r7, #12]	@ movhi
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1171              		.loc 1 718 0
 1172 00ba BB89     		ldrh	r3, [r7, #12]	@ movhi
 1173 00bc 23F40073 		bic	r3, r3, #512
 1174 00c0 BB81     		strh	r3, [r7, #12]	@ movhi
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1175              		.loc 1 720 0
 1176 00c2 3B68     		ldr	r3, [r7, #0]
 1177 00c4 1A8A     		ldrh	r2, [r3, #16]
 1178 00c6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1179 00c8 42EA0303 		orr	r3, r2, r3
 1180 00cc BB81     		strh	r3, [r7, #12]	@ movhi
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1181              		.loc 1 722 0
 1182 00ce 3B68     		ldr	r3, [r7, #0]
 1183 00d0 5A8A     		ldrh	r2, [r3, #18]
 1184 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1185 00d4 42EA0303 		orr	r3, r2, r3
 1186 00d8 BB81     		strh	r3, [r7, #12]	@ movhi
 1187              	.L49:
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1188              		.loc 1 725 0
 1189 00da 7B68     		ldr	r3, [r7, #4]
 1190 00dc BA89     		ldrh	r2, [r7, #12]	@ movhi
 1191 00de 9A80     		strh	r2, [r3, #4]	@ movhi
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1192              		.loc 1 728 0
 1193 00e0 7B68     		ldr	r3, [r7, #4]
 1194 00e2 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1195 00e4 1A83     		strh	r2, [r3, #24]	@ movhi
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1196              		.loc 1 731 0
 1197 00e6 3B68     		ldr	r3, [r7, #0]
 1198 00e8 9A68     		ldr	r2, [r3, #8]
 1199 00ea 7B68     		ldr	r3, [r7, #4]
 1200 00ec 5A63     		str	r2, [r3, #52]
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1201              		.loc 1 734 0
 1202 00ee 7B68     		ldr	r3, [r7, #4]
 1203 00f0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1204 00f2 1A84     		strh	r2, [r3, #32]	@ movhi
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1205              		.loc 1 735 0
 1206 00f4 07F11407 		add	r7, r7, #20
 1207 00f8 BD46     		mov	sp, r7
 1208 00fa 80BC     		pop	{r7}
 1209 00fc 7047     		bx	lr
 1210              	.L51:
 1211 00fe 00BF     		.align	2
 1212              	.L50:
 1213 0100 00000140 		.word	1073807360
 1214 0104 00040140 		.word	1073808384
 1215              		.cfi_endproc
 1216              	.LFE125:
 1218              		.section	.text.TIM_OC2Init,"ax",%progbits
 1219              		.align	2
 1220              		.global	TIM_OC2Init
 1221              		.thumb
 1222              		.thumb_func
 1224              	TIM_OC2Init:
 1225              	.LFB126:
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1226              		.loc 1 747 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 16
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231 0000 80B4     		push	{r7}
 1232              	.LCFI48:
 1233              		.cfi_def_cfa_offset 4
 1234 0002 85B0     		sub	sp, sp, #20
 1235              	.LCFI49:
 1236              		.cfi_def_cfa_offset 24
 1237 0004 00AF     		add	r7, sp, #0
 1238              		.cfi_offset 7, -4
 1239              	.LCFI50:
 1240              		.cfi_def_cfa_register 7
 1241 0006 7860     		str	r0, [r7, #4]
 1242 0008 3960     		str	r1, [r7, #0]
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1243              		.loc 1 748 0
 1244 000a 4FF00003 		mov	r3, #0
 1245 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1246 0010 4FF00003 		mov	r3, #0
 1247 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1248 0016 4FF00003 		mov	r3, #0
 1249 001a BB81     		strh	r3, [r7, #12]	@ movhi
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1250              		.loc 1 757 0
 1251 001c 7B68     		ldr	r3, [r7, #4]
 1252 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1253 0020 9BB2     		uxth	r3, r3
 1254 0022 23F01003 		bic	r3, r3, #16
 1255 0026 9AB2     		uxth	r2, r3
 1256 0028 7B68     		ldr	r3, [r7, #4]
 1257 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1258              		.loc 1 760 0
 1259 002c 7B68     		ldr	r3, [r7, #4]
 1260 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1261 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1262              		.loc 1 762 0
 1263 0032 7B68     		ldr	r3, [r7, #4]
 1264 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1265 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1266              		.loc 1 765 0
 1267 0038 7B68     		ldr	r3, [r7, #4]
 1268 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1269 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1270              		.loc 1 768 0
 1271 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1272 0040 23F4E043 		bic	r3, r3, #28672
 1273 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1274              		.loc 1 769 0
 1275 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1276 0048 23F44073 		bic	r3, r3, #768
 1277 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1278              		.loc 1 772 0
 1279 004e 3B68     		ldr	r3, [r7, #0]
 1280 0050 1B88     		ldrh	r3, [r3, #0]
 1281 0052 4FEA0323 		lsl	r3, r3, #8
 1282 0056 9AB2     		uxth	r2, r3
 1283 0058 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1284 005a 42EA0303 		orr	r3, r2, r3
 1285 005e 7B81     		strh	r3, [r7, #10]	@ movhi
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1286              		.loc 1 775 0
 1287 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1288 0062 23F02003 		bic	r3, r3, #32
 1289 0066 FB81     		strh	r3, [r7, #14]	@ movhi
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1290              		.loc 1 777 0
 1291 0068 3B68     		ldr	r3, [r7, #0]
 1292 006a 9B89     		ldrh	r3, [r3, #12]
 1293 006c 4FEA0313 		lsl	r3, r3, #4
 1294 0070 9AB2     		uxth	r2, r3
 1295 0072 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1296 0074 42EA0303 		orr	r3, r2, r3
 1297 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1298              		.loc 1 780 0
 1299 007a 3B68     		ldr	r3, [r7, #0]
 1300 007c 5B88     		ldrh	r3, [r3, #2]
 1301 007e 4FEA0313 		lsl	r3, r3, #4
 1302 0082 9AB2     		uxth	r2, r3
 1303 0084 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1304 0086 42EA0303 		orr	r3, r2, r3
 1305 008a FB81     		strh	r3, [r7, #14]	@ movhi
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1306              		.loc 1 782 0
 1307 008c 7A68     		ldr	r2, [r7, #4]
 1308 008e 264B     		ldr	r3, .L55
 1309 0090 9A42     		cmp	r2, r3
 1310 0092 03D0     		beq	.L53
 1311              		.loc 1 782 0 is_stmt 0 discriminator 1
 1312 0094 7A68     		ldr	r2, [r7, #4]
 1313 0096 254B     		ldr	r3, .L55+4
 1314 0098 9A42     		cmp	r2, r3
 1315 009a 33D1     		bne	.L54
 1316              	.L53:
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1317              		.loc 1 790 0 is_stmt 1
 1318 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1319 009e 23F08003 		bic	r3, r3, #128
 1320 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1321              		.loc 1 792 0
 1322 00a4 3B68     		ldr	r3, [r7, #0]
 1323 00a6 DB89     		ldrh	r3, [r3, #14]
 1324 00a8 4FEA0313 		lsl	r3, r3, #4
 1325 00ac 9AB2     		uxth	r2, r3
 1326 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 1327 00b0 42EA0303 		orr	r3, r2, r3
 1328 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1329              		.loc 1 794 0
 1330 00b6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1331 00b8 23F04003 		bic	r3, r3, #64
 1332 00bc FB81     		strh	r3, [r7, #14]	@ movhi
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1333              		.loc 1 797 0
 1334 00be 3B68     		ldr	r3, [r7, #0]
 1335 00c0 9B88     		ldrh	r3, [r3, #4]
 1336 00c2 4FEA0313 		lsl	r3, r3, #4
 1337 00c6 9AB2     		uxth	r2, r3
 1338 00c8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1339 00ca 42EA0303 		orr	r3, r2, r3
 1340 00ce FB81     		strh	r3, [r7, #14]	@ movhi
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1341              		.loc 1 799 0
 1342 00d0 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1343 00d2 23F48063 		bic	r3, r3, #1024
 1344 00d6 BB81     		strh	r3, [r7, #12]	@ movhi
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1345              		.loc 1 800 0
 1346 00d8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1347 00da 23F40063 		bic	r3, r3, #2048
 1348 00de BB81     		strh	r3, [r7, #12]	@ movhi
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1349              		.loc 1 802 0
 1350 00e0 3B68     		ldr	r3, [r7, #0]
 1351 00e2 1B8A     		ldrh	r3, [r3, #16]
 1352 00e4 4FEA8303 		lsl	r3, r3, #2
 1353 00e8 9AB2     		uxth	r2, r3
 1354 00ea BB89     		ldrh	r3, [r7, #12]	@ movhi
 1355 00ec 42EA0303 		orr	r3, r2, r3
 1356 00f0 BB81     		strh	r3, [r7, #12]	@ movhi
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1357              		.loc 1 804 0
 1358 00f2 3B68     		ldr	r3, [r7, #0]
 1359 00f4 5B8A     		ldrh	r3, [r3, #18]
 1360 00f6 4FEA8303 		lsl	r3, r3, #2
 1361 00fa 9AB2     		uxth	r2, r3
 1362 00fc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1363 00fe 42EA0303 		orr	r3, r2, r3
 1364 0102 BB81     		strh	r3, [r7, #12]	@ movhi
 1365              	.L54:
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1366              		.loc 1 807 0
 1367 0104 7B68     		ldr	r3, [r7, #4]
 1368 0106 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1369 0108 9A80     		strh	r2, [r3, #4]	@ movhi
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1370              		.loc 1 810 0
 1371 010a 7B68     		ldr	r3, [r7, #4]
 1372 010c 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1373 010e 1A83     		strh	r2, [r3, #24]	@ movhi
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1374              		.loc 1 813 0
 1375 0110 3B68     		ldr	r3, [r7, #0]
 1376 0112 9A68     		ldr	r2, [r3, #8]
 1377 0114 7B68     		ldr	r3, [r7, #4]
 1378 0116 9A63     		str	r2, [r3, #56]
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1379              		.loc 1 816 0
 1380 0118 7B68     		ldr	r3, [r7, #4]
 1381 011a FA89     		ldrh	r2, [r7, #14]	@ movhi
 1382 011c 1A84     		strh	r2, [r3, #32]	@ movhi
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1383              		.loc 1 817 0
 1384 011e 07F11407 		add	r7, r7, #20
 1385 0122 BD46     		mov	sp, r7
 1386 0124 80BC     		pop	{r7}
 1387 0126 7047     		bx	lr
 1388              	.L56:
 1389              		.align	2
 1390              	.L55:
 1391 0128 00000140 		.word	1073807360
 1392 012c 00040140 		.word	1073808384
 1393              		.cfi_endproc
 1394              	.LFE126:
 1396              		.section	.text.TIM_OC3Init,"ax",%progbits
 1397              		.align	2
 1398              		.global	TIM_OC3Init
 1399              		.thumb
 1400              		.thumb_func
 1402              	TIM_OC3Init:
 1403              	.LFB127:
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1404              		.loc 1 828 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 16
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408              		@ link register save eliminated.
 1409 0000 80B4     		push	{r7}
 1410              	.LCFI51:
 1411              		.cfi_def_cfa_offset 4
 1412 0002 85B0     		sub	sp, sp, #20
 1413              	.LCFI52:
 1414              		.cfi_def_cfa_offset 24
 1415 0004 00AF     		add	r7, sp, #0
 1416              		.cfi_offset 7, -4
 1417              	.LCFI53:
 1418              		.cfi_def_cfa_register 7
 1419 0006 7860     		str	r0, [r7, #4]
 1420 0008 3960     		str	r1, [r7, #0]
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1421              		.loc 1 829 0
 1422 000a 4FF00003 		mov	r3, #0
 1423 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1424 0010 4FF00003 		mov	r3, #0
 1425 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1426 0016 4FF00003 		mov	r3, #0
 1427 001a BB81     		strh	r3, [r7, #12]	@ movhi
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1428              		.loc 1 838 0
 1429 001c 7B68     		ldr	r3, [r7, #4]
 1430 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1431 0020 9BB2     		uxth	r3, r3
 1432 0022 23F48073 		bic	r3, r3, #256
 1433 0026 9AB2     		uxth	r2, r3
 1434 0028 7B68     		ldr	r3, [r7, #4]
 1435 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1436              		.loc 1 841 0
 1437 002c 7B68     		ldr	r3, [r7, #4]
 1438 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1439 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1440              		.loc 1 843 0
 1441 0032 7B68     		ldr	r3, [r7, #4]
 1442 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1443 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1444              		.loc 1 846 0
 1445 0038 7B68     		ldr	r3, [r7, #4]
 1446 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1447 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1448              		.loc 1 849 0
 1449 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1450 0040 23F07003 		bic	r3, r3, #112
 1451 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1452              		.loc 1 850 0
 1453 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1454 0048 23F00303 		bic	r3, r3, #3
 1455 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1456              		.loc 1 852 0
 1457 004e 3B68     		ldr	r3, [r7, #0]
 1458 0050 1A88     		ldrh	r2, [r3, #0]
 1459 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1460 0054 42EA0303 		orr	r3, r2, r3
 1461 0058 7B81     		strh	r3, [r7, #10]	@ movhi
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1462              		.loc 1 855 0
 1463 005a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1464 005c 23F40073 		bic	r3, r3, #512
 1465 0060 FB81     		strh	r3, [r7, #14]	@ movhi
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1466              		.loc 1 857 0
 1467 0062 3B68     		ldr	r3, [r7, #0]
 1468 0064 9B89     		ldrh	r3, [r3, #12]
 1469 0066 4FEA0323 		lsl	r3, r3, #8
 1470 006a 9AB2     		uxth	r2, r3
 1471 006c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1472 006e 42EA0303 		orr	r3, r2, r3
 1473 0072 FB81     		strh	r3, [r7, #14]	@ movhi
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1474              		.loc 1 860 0
 1475 0074 3B68     		ldr	r3, [r7, #0]
 1476 0076 5B88     		ldrh	r3, [r3, #2]
 1477 0078 4FEA0323 		lsl	r3, r3, #8
 1478 007c 9AB2     		uxth	r2, r3
 1479 007e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1480 0080 42EA0303 		orr	r3, r2, r3
 1481 0084 FB81     		strh	r3, [r7, #14]	@ movhi
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1482              		.loc 1 862 0
 1483 0086 7A68     		ldr	r2, [r7, #4]
 1484 0088 264B     		ldr	r3, .L60
 1485 008a 9A42     		cmp	r2, r3
 1486 008c 03D0     		beq	.L58
 1487              		.loc 1 862 0 is_stmt 0 discriminator 1
 1488 008e 7A68     		ldr	r2, [r7, #4]
 1489 0090 254B     		ldr	r3, .L60+4
 1490 0092 9A42     		cmp	r2, r3
 1491 0094 33D1     		bne	.L59
 1492              	.L58:
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1493              		.loc 1 870 0 is_stmt 1
 1494 0096 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1495 0098 23F40063 		bic	r3, r3, #2048
 1496 009c FB81     		strh	r3, [r7, #14]	@ movhi
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1497              		.loc 1 872 0
 1498 009e 3B68     		ldr	r3, [r7, #0]
 1499 00a0 DB89     		ldrh	r3, [r3, #14]
 1500 00a2 4FEA0323 		lsl	r3, r3, #8
 1501 00a6 9AB2     		uxth	r2, r3
 1502 00a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1503 00aa 42EA0303 		orr	r3, r2, r3
 1504 00ae FB81     		strh	r3, [r7, #14]	@ movhi
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1505              		.loc 1 874 0
 1506 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1507 00b2 23F48063 		bic	r3, r3, #1024
 1508 00b6 FB81     		strh	r3, [r7, #14]	@ movhi
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1509              		.loc 1 877 0
 1510 00b8 3B68     		ldr	r3, [r7, #0]
 1511 00ba 9B88     		ldrh	r3, [r3, #4]
 1512 00bc 4FEA0323 		lsl	r3, r3, #8
 1513 00c0 9AB2     		uxth	r2, r3
 1514 00c2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1515 00c4 42EA0303 		orr	r3, r2, r3
 1516 00c8 FB81     		strh	r3, [r7, #14]	@ movhi
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1517              		.loc 1 879 0
 1518 00ca BB89     		ldrh	r3, [r7, #12]	@ movhi
 1519 00cc 23F48053 		bic	r3, r3, #4096
 1520 00d0 BB81     		strh	r3, [r7, #12]	@ movhi
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1521              		.loc 1 880 0
 1522 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1523 00d4 23F40053 		bic	r3, r3, #8192
 1524 00d8 BB81     		strh	r3, [r7, #12]	@ movhi
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1525              		.loc 1 882 0
 1526 00da 3B68     		ldr	r3, [r7, #0]
 1527 00dc 1B8A     		ldrh	r3, [r3, #16]
 1528 00de 4FEA0313 		lsl	r3, r3, #4
 1529 00e2 9AB2     		uxth	r2, r3
 1530 00e4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1531 00e6 42EA0303 		orr	r3, r2, r3
 1532 00ea BB81     		strh	r3, [r7, #12]	@ movhi
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1533              		.loc 1 884 0
 1534 00ec 3B68     		ldr	r3, [r7, #0]
 1535 00ee 5B8A     		ldrh	r3, [r3, #18]
 1536 00f0 4FEA0313 		lsl	r3, r3, #4
 1537 00f4 9AB2     		uxth	r2, r3
 1538 00f6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1539 00f8 42EA0303 		orr	r3, r2, r3
 1540 00fc BB81     		strh	r3, [r7, #12]	@ movhi
 1541              	.L59:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1542              		.loc 1 887 0
 1543 00fe 7B68     		ldr	r3, [r7, #4]
 1544 0100 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1545 0102 9A80     		strh	r2, [r3, #4]	@ movhi
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1546              		.loc 1 890 0
 1547 0104 7B68     		ldr	r3, [r7, #4]
 1548 0106 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1549 0108 9A83     		strh	r2, [r3, #28]	@ movhi
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1550              		.loc 1 893 0
 1551 010a 3B68     		ldr	r3, [r7, #0]
 1552 010c 9A68     		ldr	r2, [r3, #8]
 1553 010e 7B68     		ldr	r3, [r7, #4]
 1554 0110 DA63     		str	r2, [r3, #60]
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1555              		.loc 1 896 0
 1556 0112 7B68     		ldr	r3, [r7, #4]
 1557 0114 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1558 0116 1A84     		strh	r2, [r3, #32]	@ movhi
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1559              		.loc 1 897 0
 1560 0118 07F11407 		add	r7, r7, #20
 1561 011c BD46     		mov	sp, r7
 1562 011e 80BC     		pop	{r7}
 1563 0120 7047     		bx	lr
 1564              	.L61:
 1565 0122 00BF     		.align	2
 1566              	.L60:
 1567 0124 00000140 		.word	1073807360
 1568 0128 00040140 		.word	1073808384
 1569              		.cfi_endproc
 1570              	.LFE127:
 1572              		.section	.text.TIM_OC4Init,"ax",%progbits
 1573              		.align	2
 1574              		.global	TIM_OC4Init
 1575              		.thumb
 1576              		.thumb_func
 1578              	TIM_OC4Init:
 1579              	.LFB128:
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1580              		.loc 1 908 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 16
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584              		@ link register save eliminated.
 1585 0000 80B4     		push	{r7}
 1586              	.LCFI54:
 1587              		.cfi_def_cfa_offset 4
 1588 0002 85B0     		sub	sp, sp, #20
 1589              	.LCFI55:
 1590              		.cfi_def_cfa_offset 24
 1591 0004 00AF     		add	r7, sp, #0
 1592              		.cfi_offset 7, -4
 1593              	.LCFI56:
 1594              		.cfi_def_cfa_register 7
 1595 0006 7860     		str	r0, [r7, #4]
 1596 0008 3960     		str	r1, [r7, #0]
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1597              		.loc 1 909 0
 1598 000a 4FF00003 		mov	r3, #0
 1599 000e BB81     		strh	r3, [r7, #12]	@ movhi
 1600 0010 4FF00003 		mov	r3, #0
 1601 0014 7B81     		strh	r3, [r7, #10]	@ movhi
 1602 0016 4FF00003 		mov	r3, #0
 1603 001a FB81     		strh	r3, [r7, #14]	@ movhi
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1604              		.loc 1 918 0
 1605 001c 7B68     		ldr	r3, [r7, #4]
 1606 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1607 0020 9BB2     		uxth	r3, r3
 1608 0022 23F48053 		bic	r3, r3, #4096
 1609 0026 9AB2     		uxth	r2, r3
 1610 0028 7B68     		ldr	r3, [r7, #4]
 1611 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1612              		.loc 1 921 0
 1613 002c 7B68     		ldr	r3, [r7, #4]
 1614 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1615 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1616              		.loc 1 923 0
 1617 0032 7B68     		ldr	r3, [r7, #4]
 1618 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1619 0036 FB81     		strh	r3, [r7, #14]	@ movhi
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1620              		.loc 1 926 0
 1621 0038 7B68     		ldr	r3, [r7, #4]
 1622 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1623 003c BB81     		strh	r3, [r7, #12]	@ movhi
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1624              		.loc 1 929 0
 1625 003e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1626 0040 23F4E043 		bic	r3, r3, #28672
 1627 0044 BB81     		strh	r3, [r7, #12]	@ movhi
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1628              		.loc 1 930 0
 1629 0046 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1630 0048 23F44073 		bic	r3, r3, #768
 1631 004c BB81     		strh	r3, [r7, #12]	@ movhi
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1632              		.loc 1 933 0
 1633 004e 3B68     		ldr	r3, [r7, #0]
 1634 0050 1B88     		ldrh	r3, [r3, #0]
 1635 0052 4FEA0323 		lsl	r3, r3, #8
 1636 0056 9AB2     		uxth	r2, r3
 1637 0058 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1638 005a 42EA0303 		orr	r3, r2, r3
 1639 005e BB81     		strh	r3, [r7, #12]	@ movhi
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1640              		.loc 1 936 0
 1641 0060 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1642 0062 23F40053 		bic	r3, r3, #8192
 1643 0066 7B81     		strh	r3, [r7, #10]	@ movhi
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1644              		.loc 1 938 0
 1645 0068 3B68     		ldr	r3, [r7, #0]
 1646 006a 9B89     		ldrh	r3, [r3, #12]
 1647 006c 4FEA0333 		lsl	r3, r3, #12
 1648 0070 9AB2     		uxth	r2, r3
 1649 0072 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1650 0074 42EA0303 		orr	r3, r2, r3
 1651 0078 7B81     		strh	r3, [r7, #10]	@ movhi
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1652              		.loc 1 941 0
 1653 007a 3B68     		ldr	r3, [r7, #0]
 1654 007c 5B88     		ldrh	r3, [r3, #2]
 1655 007e 4FEA0333 		lsl	r3, r3, #12
 1656 0082 9AB2     		uxth	r2, r3
 1657 0084 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1658 0086 42EA0303 		orr	r3, r2, r3
 1659 008a 7B81     		strh	r3, [r7, #10]	@ movhi
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1660              		.loc 1 943 0
 1661 008c 7A68     		ldr	r2, [r7, #4]
 1662 008e 134B     		ldr	r3, .L65
 1663 0090 9A42     		cmp	r2, r3
 1664 0092 03D0     		beq	.L63
 1665              		.loc 1 943 0 is_stmt 0 discriminator 1
 1666 0094 7A68     		ldr	r2, [r7, #4]
 1667 0096 124B     		ldr	r3, .L65+4
 1668 0098 9A42     		cmp	r2, r3
 1669 009a 0CD1     		bne	.L64
 1670              	.L63:
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1671              		.loc 1 947 0 is_stmt 1
 1672 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1673 009e 23F48043 		bic	r3, r3, #16384
 1674 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1675              		.loc 1 949 0
 1676 00a4 3B68     		ldr	r3, [r7, #0]
 1677 00a6 1B8A     		ldrh	r3, [r3, #16]
 1678 00a8 4FEA8313 		lsl	r3, r3, #6
 1679 00ac 9AB2     		uxth	r2, r3
 1680 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 1681 00b0 42EA0303 		orr	r3, r2, r3
 1682 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1683              	.L64:
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1684              		.loc 1 952 0
 1685 00b6 7B68     		ldr	r3, [r7, #4]
 1686 00b8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1687 00ba 9A80     		strh	r2, [r3, #4]	@ movhi
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1688              		.loc 1 955 0
 1689 00bc 7B68     		ldr	r3, [r7, #4]
 1690 00be BA89     		ldrh	r2, [r7, #12]	@ movhi
 1691 00c0 9A83     		strh	r2, [r3, #28]	@ movhi
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1692              		.loc 1 958 0
 1693 00c2 3B68     		ldr	r3, [r7, #0]
 1694 00c4 9A68     		ldr	r2, [r3, #8]
 1695 00c6 7B68     		ldr	r3, [r7, #4]
 1696 00c8 1A64     		str	r2, [r3, #64]
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1697              		.loc 1 961 0
 1698 00ca 7B68     		ldr	r3, [r7, #4]
 1699 00cc 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1700 00ce 1A84     		strh	r2, [r3, #32]	@ movhi
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1701              		.loc 1 962 0
 1702 00d0 07F11407 		add	r7, r7, #20
 1703 00d4 BD46     		mov	sp, r7
 1704 00d6 80BC     		pop	{r7}
 1705 00d8 7047     		bx	lr
 1706              	.L66:
 1707 00da 00BF     		.align	2
 1708              	.L65:
 1709 00dc 00000140 		.word	1073807360
 1710 00e0 00040140 		.word	1073808384
 1711              		.cfi_endproc
 1712              	.LFE128:
 1714              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1715              		.align	2
 1716              		.global	TIM_OCStructInit
 1717              		.thumb
 1718              		.thumb_func
 1720              	TIM_OCStructInit:
 1721              	.LFB129:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1722              		.loc 1 971 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 8
 1725              		@ frame_needed = 1, uses_anonymous_args = 0
 1726              		@ link register save eliminated.
 1727 0000 80B4     		push	{r7}
 1728              	.LCFI57:
 1729              		.cfi_def_cfa_offset 4
 1730 0002 83B0     		sub	sp, sp, #12
 1731              	.LCFI58:
 1732              		.cfi_def_cfa_offset 16
 1733 0004 00AF     		add	r7, sp, #0
 1734              		.cfi_offset 7, -4
 1735              	.LCFI59:
 1736              		.cfi_def_cfa_register 7
 1737 0006 7860     		str	r0, [r7, #4]
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1738              		.loc 1 973 0
 1739 0008 7B68     		ldr	r3, [r7, #4]
 1740 000a 4FF00002 		mov	r2, #0
 1741 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1742              		.loc 1 974 0
 1743 0010 7B68     		ldr	r3, [r7, #4]
 1744 0012 4FF00002 		mov	r2, #0
 1745 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1746              		.loc 1 975 0
 1747 0018 7B68     		ldr	r3, [r7, #4]
 1748 001a 4FF00002 		mov	r2, #0
 1749 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1750              		.loc 1 976 0
 1751 0020 7B68     		ldr	r3, [r7, #4]
 1752 0022 4FF00002 		mov	r2, #0
 1753 0026 9A60     		str	r2, [r3, #8]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1754              		.loc 1 977 0
 1755 0028 7B68     		ldr	r3, [r7, #4]
 1756 002a 4FF00002 		mov	r2, #0
 1757 002e 9A81     		strh	r2, [r3, #12]	@ movhi
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1758              		.loc 1 978 0
 1759 0030 7B68     		ldr	r3, [r7, #4]
 1760 0032 4FF00002 		mov	r2, #0
 1761 0036 DA81     		strh	r2, [r3, #14]	@ movhi
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1762              		.loc 1 979 0
 1763 0038 7B68     		ldr	r3, [r7, #4]
 1764 003a 4FF00002 		mov	r2, #0
 1765 003e 1A82     		strh	r2, [r3, #16]	@ movhi
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1766              		.loc 1 980 0
 1767 0040 7B68     		ldr	r3, [r7, #4]
 1768 0042 4FF00002 		mov	r2, #0
 1769 0046 5A82     		strh	r2, [r3, #18]	@ movhi
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1770              		.loc 1 981 0
 1771 0048 07F10C07 		add	r7, r7, #12
 1772 004c BD46     		mov	sp, r7
 1773 004e 80BC     		pop	{r7}
 1774 0050 7047     		bx	lr
 1775              		.cfi_endproc
 1776              	.LFE129:
 1778 0052 00BF     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1779              		.align	2
 1780              		.global	TIM_SelectOCxM
 1781              		.thumb
 1782              		.thumb_func
 1784              	TIM_SelectOCxM:
 1785              	.LFB130:
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1786              		.loc 1 1007 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 16
 1789              		@ frame_needed = 1, uses_anonymous_args = 0
 1790              		@ link register save eliminated.
 1791 0000 80B4     		push	{r7}
 1792              	.LCFI60:
 1793              		.cfi_def_cfa_offset 4
 1794 0002 85B0     		sub	sp, sp, #20
 1795              	.LCFI61:
 1796              		.cfi_def_cfa_offset 24
 1797 0004 00AF     		add	r7, sp, #0
 1798              		.cfi_offset 7, -4
 1799              	.LCFI62:
 1800              		.cfi_def_cfa_register 7
 1801 0006 7860     		str	r0, [r7, #4]
 1802 0008 1346     		mov	r3, r2
 1803 000a 0A46     		mov	r2, r1	@ movhi
 1804 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1805 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1806              		.loc 1 1008 0
 1807 0010 4FF00003 		mov	r3, #0
 1808 0014 FB60     		str	r3, [r7, #12]
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 1809              		.loc 1 1009 0
 1810 0016 4FF00003 		mov	r3, #0
 1811 001a 7B81     		strh	r3, [r7, #10]	@ movhi
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 1812              		.loc 1 1016 0
 1813 001c 7B68     		ldr	r3, [r7, #4]
 1814 001e FB60     		str	r3, [r7, #12]
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1815              		.loc 1 1017 0
 1816 0020 FB68     		ldr	r3, [r7, #12]
 1817 0022 03F11803 		add	r3, r3, #24
 1818 0026 FB60     		str	r3, [r7, #12]
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1819              		.loc 1 1019 0
 1820 0028 7B88     		ldrh	r3, [r7, #2]
 1821 002a 4FF00102 		mov	r2, #1
 1822 002e 02FA03F3 		lsl	r3, r2, r3
 1823 0032 7B81     		strh	r3, [r7, #10]	@ movhi
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1824              		.loc 1 1022 0
 1825 0034 7B68     		ldr	r3, [r7, #4]
 1826 0036 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1827 0038 9AB2     		uxth	r2, r3
 1828 003a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1829 003c 6FEA0303 		mvn	r3, r3
 1830 0040 9BB2     		uxth	r3, r3
 1831 0042 02EA0303 		and	r3, r2, r3
 1832 0046 9AB2     		uxth	r2, r3
 1833 0048 7B68     		ldr	r3, [r7, #4]
 1834 004a 1A84     		strh	r2, [r3, #32]	@ movhi
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1835              		.loc 1 1024 0
 1836 004c 7B88     		ldrh	r3, [r7, #2]
 1837 004e 002B     		cmp	r3, #0
 1838 0050 02D0     		beq	.L69
 1839              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1840 0052 7B88     		ldrh	r3, [r7, #2]
 1841 0054 082B     		cmp	r3, #8
 1842 0056 16D1     		bne	.L70
 1843              	.L69:
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1844              		.loc 1 1026 0 is_stmt 1
 1845 0058 7B88     		ldrh	r3, [r7, #2]
 1846 005a 4FEA5303 		lsr	r3, r3, #1
 1847 005e 9BB2     		uxth	r3, r3
 1848 0060 FA68     		ldr	r2, [r7, #12]
 1849 0062 D318     		adds	r3, r2, r3
 1850 0064 FB60     		str	r3, [r7, #12]
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1851              		.loc 1 1029 0
 1852 0066 FA68     		ldr	r2, [r7, #12]
 1853 0068 FB68     		ldr	r3, [r7, #12]
 1854 006a 1968     		ldr	r1, [r3, #0]
 1855 006c 4FF68F73 		movw	r3, #65423
 1856 0070 01EA0303 		and	r3, r1, r3
 1857 0074 1360     		str	r3, [r2, #0]
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1858              		.loc 1 1032 0
 1859 0076 FB68     		ldr	r3, [r7, #12]
 1860 0078 FA68     		ldr	r2, [r7, #12]
 1861 007a 1168     		ldr	r1, [r2, #0]
 1862 007c 3A88     		ldrh	r2, [r7, #0]
 1863 007e 41EA0202 		orr	r2, r1, r2
 1864 0082 1A60     		str	r2, [r3, #0]
 1865 0084 1BE0     		b	.L68
 1866              	.L70:
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1867              		.loc 1 1036 0
 1868 0086 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1869 0088 A3F10403 		sub	r3, r3, #4
 1870 008c 9BB2     		uxth	r3, r3
 1871 008e 4FEA5303 		lsr	r3, r3, #1
 1872 0092 9BB2     		uxth	r3, r3
 1873 0094 FA68     		ldr	r2, [r7, #12]
 1874 0096 D318     		adds	r3, r2, r3
 1875 0098 FB60     		str	r3, [r7, #12]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1876              		.loc 1 1039 0
 1877 009a FA68     		ldr	r2, [r7, #12]
 1878 009c FB68     		ldr	r3, [r7, #12]
 1879 009e 1968     		ldr	r1, [r3, #0]
 1880 00a0 48F6FF73 		movw	r3, #36863
 1881 00a4 01EA0303 		and	r3, r1, r3
 1882 00a8 1360     		str	r3, [r2, #0]
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1883              		.loc 1 1042 0
 1884 00aa FB68     		ldr	r3, [r7, #12]
 1885 00ac FA68     		ldr	r2, [r7, #12]
 1886 00ae 1168     		ldr	r1, [r2, #0]
 1887 00b0 3A88     		ldrh	r2, [r7, #0]	@ movhi
 1888 00b2 4FEA0222 		lsl	r2, r2, #8
 1889 00b6 92B2     		uxth	r2, r2
 1890 00b8 41EA0202 		orr	r2, r1, r2
 1891 00bc 1A60     		str	r2, [r3, #0]
 1892              	.L68:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1893              		.loc 1 1044 0
 1894 00be 07F11407 		add	r7, r7, #20
 1895 00c2 BD46     		mov	sp, r7
 1896 00c4 80BC     		pop	{r7}
 1897 00c6 7047     		bx	lr
 1898              		.cfi_endproc
 1899              	.LFE130:
 1901              		.section	.text.TIM_SetCompare1,"ax",%progbits
 1902              		.align	2
 1903              		.global	TIM_SetCompare1
 1904              		.thumb
 1905              		.thumb_func
 1907              	TIM_SetCompare1:
 1908              	.LFB131:
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1909              		.loc 1 1053 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 8
 1912              		@ frame_needed = 1, uses_anonymous_args = 0
 1913              		@ link register save eliminated.
 1914 0000 80B4     		push	{r7}
 1915              	.LCFI63:
 1916              		.cfi_def_cfa_offset 4
 1917 0002 83B0     		sub	sp, sp, #12
 1918              	.LCFI64:
 1919              		.cfi_def_cfa_offset 16
 1920 0004 00AF     		add	r7, sp, #0
 1921              		.cfi_offset 7, -4
 1922              	.LCFI65:
 1923              		.cfi_def_cfa_register 7
 1924 0006 7860     		str	r0, [r7, #4]
 1925 0008 3960     		str	r1, [r7, #0]
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1926              		.loc 1 1058 0
 1927 000a 7B68     		ldr	r3, [r7, #4]
 1928 000c 3A68     		ldr	r2, [r7, #0]
 1929 000e 5A63     		str	r2, [r3, #52]
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1930              		.loc 1 1059 0
 1931 0010 07F10C07 		add	r7, r7, #12
 1932 0014 BD46     		mov	sp, r7
 1933 0016 80BC     		pop	{r7}
 1934 0018 7047     		bx	lr
 1935              		.cfi_endproc
 1936              	.LFE131:
 1938 001a 00BF     		.section	.text.TIM_SetCompare2,"ax",%progbits
 1939              		.align	2
 1940              		.global	TIM_SetCompare2
 1941              		.thumb
 1942              		.thumb_func
 1944              	TIM_SetCompare2:
 1945              	.LFB132:
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1946              		.loc 1 1069 0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 8
 1949              		@ frame_needed = 1, uses_anonymous_args = 0
 1950              		@ link register save eliminated.
 1951 0000 80B4     		push	{r7}
 1952              	.LCFI66:
 1953              		.cfi_def_cfa_offset 4
 1954 0002 83B0     		sub	sp, sp, #12
 1955              	.LCFI67:
 1956              		.cfi_def_cfa_offset 16
 1957 0004 00AF     		add	r7, sp, #0
 1958              		.cfi_offset 7, -4
 1959              	.LCFI68:
 1960              		.cfi_def_cfa_register 7
 1961 0006 7860     		str	r0, [r7, #4]
 1962 0008 3960     		str	r1, [r7, #0]
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1963              		.loc 1 1074 0
 1964 000a 7B68     		ldr	r3, [r7, #4]
 1965 000c 3A68     		ldr	r2, [r7, #0]
 1966 000e 9A63     		str	r2, [r3, #56]
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1967              		.loc 1 1075 0
 1968 0010 07F10C07 		add	r7, r7, #12
 1969 0014 BD46     		mov	sp, r7
 1970 0016 80BC     		pop	{r7}
 1971 0018 7047     		bx	lr
 1972              		.cfi_endproc
 1973              	.LFE132:
 1975 001a 00BF     		.section	.text.TIM_SetCompare3,"ax",%progbits
 1976              		.align	2
 1977              		.global	TIM_SetCompare3
 1978              		.thumb
 1979              		.thumb_func
 1981              	TIM_SetCompare3:
 1982              	.LFB133:
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1983              		.loc 1 1084 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 8
 1986              		@ frame_needed = 1, uses_anonymous_args = 0
 1987              		@ link register save eliminated.
 1988 0000 80B4     		push	{r7}
 1989              	.LCFI69:
 1990              		.cfi_def_cfa_offset 4
 1991 0002 83B0     		sub	sp, sp, #12
 1992              	.LCFI70:
 1993              		.cfi_def_cfa_offset 16
 1994 0004 00AF     		add	r7, sp, #0
 1995              		.cfi_offset 7, -4
 1996              	.LCFI71:
 1997              		.cfi_def_cfa_register 7
 1998 0006 7860     		str	r0, [r7, #4]
 1999 0008 3960     		str	r1, [r7, #0]
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 2000              		.loc 1 1089 0
 2001 000a 7B68     		ldr	r3, [r7, #4]
 2002 000c 3A68     		ldr	r2, [r7, #0]
 2003 000e DA63     		str	r2, [r3, #60]
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2004              		.loc 1 1090 0
 2005 0010 07F10C07 		add	r7, r7, #12
 2006 0014 BD46     		mov	sp, r7
 2007 0016 80BC     		pop	{r7}
 2008 0018 7047     		bx	lr
 2009              		.cfi_endproc
 2010              	.LFE133:
 2012 001a 00BF     		.section	.text.TIM_SetCompare4,"ax",%progbits
 2013              		.align	2
 2014              		.global	TIM_SetCompare4
 2015              		.thumb
 2016              		.thumb_func
 2018              	TIM_SetCompare4:
 2019              	.LFB134:
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2020              		.loc 1 1099 0
 2021              		.cfi_startproc
 2022              		@ args = 0, pretend = 0, frame = 8
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024              		@ link register save eliminated.
 2025 0000 80B4     		push	{r7}
 2026              	.LCFI72:
 2027              		.cfi_def_cfa_offset 4
 2028 0002 83B0     		sub	sp, sp, #12
 2029              	.LCFI73:
 2030              		.cfi_def_cfa_offset 16
 2031 0004 00AF     		add	r7, sp, #0
 2032              		.cfi_offset 7, -4
 2033              	.LCFI74:
 2034              		.cfi_def_cfa_register 7
 2035 0006 7860     		str	r0, [r7, #4]
 2036 0008 3960     		str	r1, [r7, #0]
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 2037              		.loc 1 1104 0
 2038 000a 7B68     		ldr	r3, [r7, #4]
 2039 000c 3A68     		ldr	r2, [r7, #0]
 2040 000e 1A64     		str	r2, [r3, #64]
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2041              		.loc 1 1105 0
 2042 0010 07F10C07 		add	r7, r7, #12
 2043 0014 BD46     		mov	sp, r7
 2044 0016 80BC     		pop	{r7}
 2045 0018 7047     		bx	lr
 2046              		.cfi_endproc
 2047              	.LFE134:
 2049 001a 00BF     		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2050              		.align	2
 2051              		.global	TIM_ForcedOC1Config
 2052              		.thumb
 2053              		.thumb_func
 2055              	TIM_ForcedOC1Config:
 2056              	.LFB135:
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2057              		.loc 1 1117 0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 16
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061              		@ link register save eliminated.
 2062 0000 80B4     		push	{r7}
 2063              	.LCFI75:
 2064              		.cfi_def_cfa_offset 4
 2065 0002 85B0     		sub	sp, sp, #20
 2066              	.LCFI76:
 2067              		.cfi_def_cfa_offset 24
 2068 0004 00AF     		add	r7, sp, #0
 2069              		.cfi_offset 7, -4
 2070              	.LCFI77:
 2071              		.cfi_def_cfa_register 7
 2072 0006 7860     		str	r0, [r7, #4]
 2073 0008 0B46     		mov	r3, r1
 2074 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2075              		.loc 1 1118 0
 2076 000c 4FF00003 		mov	r3, #0
 2077 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2078              		.loc 1 1123 0
 2079 0012 7B68     		ldr	r3, [r7, #4]
 2080 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2081 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2082              		.loc 1 1126 0
 2083 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2084 001a 23F07003 		bic	r3, r3, #112
 2085 001e FB81     		strh	r3, [r7, #14]	@ movhi
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2086              		.loc 1 1129 0
 2087 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2088 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2089 0024 42EA0303 		orr	r3, r2, r3
 2090 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2091              		.loc 1 1132 0
 2092 002a 7B68     		ldr	r3, [r7, #4]
 2093 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2094 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2095              		.loc 1 1133 0
 2096 0030 07F11407 		add	r7, r7, #20
 2097 0034 BD46     		mov	sp, r7
 2098 0036 80BC     		pop	{r7}
 2099 0038 7047     		bx	lr
 2100              		.cfi_endproc
 2101              	.LFE135:
 2103 003a 00BF     		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2104              		.align	2
 2105              		.global	TIM_ForcedOC2Config
 2106              		.thumb
 2107              		.thumb_func
 2109              	TIM_ForcedOC2Config:
 2110              	.LFB136:
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2111              		.loc 1 1146 0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 16
 2114              		@ frame_needed = 1, uses_anonymous_args = 0
 2115              		@ link register save eliminated.
 2116 0000 80B4     		push	{r7}
 2117              	.LCFI78:
 2118              		.cfi_def_cfa_offset 4
 2119 0002 85B0     		sub	sp, sp, #20
 2120              	.LCFI79:
 2121              		.cfi_def_cfa_offset 24
 2122 0004 00AF     		add	r7, sp, #0
 2123              		.cfi_offset 7, -4
 2124              	.LCFI80:
 2125              		.cfi_def_cfa_register 7
 2126 0006 7860     		str	r0, [r7, #4]
 2127 0008 0B46     		mov	r3, r1
 2128 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2129              		.loc 1 1147 0
 2130 000c 4FF00003 		mov	r3, #0
 2131 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2132              		.loc 1 1152 0
 2133 0012 7B68     		ldr	r3, [r7, #4]
 2134 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2135 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2136              		.loc 1 1155 0
 2137 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2138 001a 23F4E043 		bic	r3, r3, #28672
 2139 001e FB81     		strh	r3, [r7, #14]	@ movhi
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2140              		.loc 1 1158 0
 2141 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2142 0022 4FEA0323 		lsl	r3, r3, #8
 2143 0026 9AB2     		uxth	r2, r3
 2144 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2145 002a 42EA0303 		orr	r3, r2, r3
 2146 002e FB81     		strh	r3, [r7, #14]	@ movhi
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2147              		.loc 1 1161 0
 2148 0030 7B68     		ldr	r3, [r7, #4]
 2149 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2150 0034 1A83     		strh	r2, [r3, #24]	@ movhi
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2151              		.loc 1 1162 0
 2152 0036 07F11407 		add	r7, r7, #20
 2153 003a BD46     		mov	sp, r7
 2154 003c 80BC     		pop	{r7}
 2155 003e 7047     		bx	lr
 2156              		.cfi_endproc
 2157              	.LFE136:
 2159              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2160              		.align	2
 2161              		.global	TIM_ForcedOC3Config
 2162              		.thumb
 2163              		.thumb_func
 2165              	TIM_ForcedOC3Config:
 2166              	.LFB137:
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2167              		.loc 1 1174 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 16
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171              		@ link register save eliminated.
 2172 0000 80B4     		push	{r7}
 2173              	.LCFI81:
 2174              		.cfi_def_cfa_offset 4
 2175 0002 85B0     		sub	sp, sp, #20
 2176              	.LCFI82:
 2177              		.cfi_def_cfa_offset 24
 2178 0004 00AF     		add	r7, sp, #0
 2179              		.cfi_offset 7, -4
 2180              	.LCFI83:
 2181              		.cfi_def_cfa_register 7
 2182 0006 7860     		str	r0, [r7, #4]
 2183 0008 0B46     		mov	r3, r1
 2184 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2185              		.loc 1 1175 0
 2186 000c 4FF00003 		mov	r3, #0
 2187 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2188              		.loc 1 1181 0
 2189 0012 7B68     		ldr	r3, [r7, #4]
 2190 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2191 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2192              		.loc 1 1184 0
 2193 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2194 001a 23F07003 		bic	r3, r3, #112
 2195 001e FB81     		strh	r3, [r7, #14]	@ movhi
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2196              		.loc 1 1187 0
 2197 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2198 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2199 0024 42EA0303 		orr	r3, r2, r3
 2200 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2201              		.loc 1 1190 0
 2202 002a 7B68     		ldr	r3, [r7, #4]
 2203 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2204 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2205              		.loc 1 1191 0
 2206 0030 07F11407 		add	r7, r7, #20
 2207 0034 BD46     		mov	sp, r7
 2208 0036 80BC     		pop	{r7}
 2209 0038 7047     		bx	lr
 2210              		.cfi_endproc
 2211              	.LFE137:
 2213 003a 00BF     		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2214              		.align	2
 2215              		.global	TIM_ForcedOC4Config
 2216              		.thumb
 2217              		.thumb_func
 2219              	TIM_ForcedOC4Config:
 2220              	.LFB138:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2221              		.loc 1 1203 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 16
 2224              		@ frame_needed = 1, uses_anonymous_args = 0
 2225              		@ link register save eliminated.
 2226 0000 80B4     		push	{r7}
 2227              	.LCFI84:
 2228              		.cfi_def_cfa_offset 4
 2229 0002 85B0     		sub	sp, sp, #20
 2230              	.LCFI85:
 2231              		.cfi_def_cfa_offset 24
 2232 0004 00AF     		add	r7, sp, #0
 2233              		.cfi_offset 7, -4
 2234              	.LCFI86:
 2235              		.cfi_def_cfa_register 7
 2236 0006 7860     		str	r0, [r7, #4]
 2237 0008 0B46     		mov	r3, r1
 2238 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2239              		.loc 1 1204 0
 2240 000c 4FF00003 		mov	r3, #0
 2241 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2242              		.loc 1 1209 0
 2243 0012 7B68     		ldr	r3, [r7, #4]
 2244 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2245 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2246              		.loc 1 1212 0
 2247 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2248 001a 23F4E043 		bic	r3, r3, #28672
 2249 001e FB81     		strh	r3, [r7, #14]	@ movhi
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2250              		.loc 1 1215 0
 2251 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2252 0022 4FEA0323 		lsl	r3, r3, #8
 2253 0026 9AB2     		uxth	r2, r3
 2254 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2255 002a 42EA0303 		orr	r3, r2, r3
 2256 002e FB81     		strh	r3, [r7, #14]	@ movhi
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2257              		.loc 1 1218 0
 2258 0030 7B68     		ldr	r3, [r7, #4]
 2259 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2260 0034 9A83     		strh	r2, [r3, #28]	@ movhi
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2261              		.loc 1 1219 0
 2262 0036 07F11407 		add	r7, r7, #20
 2263 003a BD46     		mov	sp, r7
 2264 003c 80BC     		pop	{r7}
 2265 003e 7047     		bx	lr
 2266              		.cfi_endproc
 2267              	.LFE138:
 2269              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2270              		.align	2
 2271              		.global	TIM_OC1PreloadConfig
 2272              		.thumb
 2273              		.thumb_func
 2275              	TIM_OC1PreloadConfig:
 2276              	.LFB139:
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2277              		.loc 1 1231 0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 16
 2280              		@ frame_needed = 1, uses_anonymous_args = 0
 2281              		@ link register save eliminated.
 2282 0000 80B4     		push	{r7}
 2283              	.LCFI87:
 2284              		.cfi_def_cfa_offset 4
 2285 0002 85B0     		sub	sp, sp, #20
 2286              	.LCFI88:
 2287              		.cfi_def_cfa_offset 24
 2288 0004 00AF     		add	r7, sp, #0
 2289              		.cfi_offset 7, -4
 2290              	.LCFI89:
 2291              		.cfi_def_cfa_register 7
 2292 0006 7860     		str	r0, [r7, #4]
 2293 0008 0B46     		mov	r3, r1
 2294 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2295              		.loc 1 1232 0
 2296 000c 4FF00003 		mov	r3, #0
 2297 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2298              		.loc 1 1238 0
 2299 0012 7B68     		ldr	r3, [r7, #4]
 2300 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2301 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2302              		.loc 1 1241 0
 2303 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2304 001a 23F00803 		bic	r3, r3, #8
 2305 001e FB81     		strh	r3, [r7, #14]	@ movhi
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2306              		.loc 1 1244 0
 2307 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2308 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2309 0024 42EA0303 		orr	r3, r2, r3
 2310 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2311              		.loc 1 1247 0
 2312 002a 7B68     		ldr	r3, [r7, #4]
 2313 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2314 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2315              		.loc 1 1248 0
 2316 0030 07F11407 		add	r7, r7, #20
 2317 0034 BD46     		mov	sp, r7
 2318 0036 80BC     		pop	{r7}
 2319 0038 7047     		bx	lr
 2320              		.cfi_endproc
 2321              	.LFE139:
 2323 003a 00BF     		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2324              		.align	2
 2325              		.global	TIM_OC2PreloadConfig
 2326              		.thumb
 2327              		.thumb_func
 2329              	TIM_OC2PreloadConfig:
 2330              	.LFB140:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2331              		.loc 1 1261 0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 16
 2334              		@ frame_needed = 1, uses_anonymous_args = 0
 2335              		@ link register save eliminated.
 2336 0000 80B4     		push	{r7}
 2337              	.LCFI90:
 2338              		.cfi_def_cfa_offset 4
 2339 0002 85B0     		sub	sp, sp, #20
 2340              	.LCFI91:
 2341              		.cfi_def_cfa_offset 24
 2342 0004 00AF     		add	r7, sp, #0
 2343              		.cfi_offset 7, -4
 2344              	.LCFI92:
 2345              		.cfi_def_cfa_register 7
 2346 0006 7860     		str	r0, [r7, #4]
 2347 0008 0B46     		mov	r3, r1
 2348 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2349              		.loc 1 1262 0
 2350 000c 4FF00003 		mov	r3, #0
 2351 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2352              		.loc 1 1268 0
 2353 0012 7B68     		ldr	r3, [r7, #4]
 2354 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2355 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2356              		.loc 1 1271 0
 2357 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2358 001a 23F40063 		bic	r3, r3, #2048
 2359 001e FB81     		strh	r3, [r7, #14]	@ movhi
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2360              		.loc 1 1274 0
 2361 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2362 0022 4FEA0323 		lsl	r3, r3, #8
 2363 0026 9AB2     		uxth	r2, r3
 2364 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2365 002a 42EA0303 		orr	r3, r2, r3
 2366 002e FB81     		strh	r3, [r7, #14]	@ movhi
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2367              		.loc 1 1277 0
 2368 0030 7B68     		ldr	r3, [r7, #4]
 2369 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2370 0034 1A83     		strh	r2, [r3, #24]	@ movhi
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2371              		.loc 1 1278 0
 2372 0036 07F11407 		add	r7, r7, #20
 2373 003a BD46     		mov	sp, r7
 2374 003c 80BC     		pop	{r7}
 2375 003e 7047     		bx	lr
 2376              		.cfi_endproc
 2377              	.LFE140:
 2379              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2380              		.align	2
 2381              		.global	TIM_OC3PreloadConfig
 2382              		.thumb
 2383              		.thumb_func
 2385              	TIM_OC3PreloadConfig:
 2386              	.LFB141:
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2387              		.loc 1 1290 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 16
 2390              		@ frame_needed = 1, uses_anonymous_args = 0
 2391              		@ link register save eliminated.
 2392 0000 80B4     		push	{r7}
 2393              	.LCFI93:
 2394              		.cfi_def_cfa_offset 4
 2395 0002 85B0     		sub	sp, sp, #20
 2396              	.LCFI94:
 2397              		.cfi_def_cfa_offset 24
 2398 0004 00AF     		add	r7, sp, #0
 2399              		.cfi_offset 7, -4
 2400              	.LCFI95:
 2401              		.cfi_def_cfa_register 7
 2402 0006 7860     		str	r0, [r7, #4]
 2403 0008 0B46     		mov	r3, r1
 2404 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2405              		.loc 1 1291 0
 2406 000c 4FF00003 		mov	r3, #0
 2407 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2408              		.loc 1 1297 0
 2409 0012 7B68     		ldr	r3, [r7, #4]
 2410 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2411 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2412              		.loc 1 1300 0
 2413 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2414 001a 23F00803 		bic	r3, r3, #8
 2415 001e FB81     		strh	r3, [r7, #14]	@ movhi
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2416              		.loc 1 1303 0
 2417 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2418 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2419 0024 42EA0303 		orr	r3, r2, r3
 2420 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2421              		.loc 1 1306 0
 2422 002a 7B68     		ldr	r3, [r7, #4]
 2423 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2424 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2425              		.loc 1 1307 0
 2426 0030 07F11407 		add	r7, r7, #20
 2427 0034 BD46     		mov	sp, r7
 2428 0036 80BC     		pop	{r7}
 2429 0038 7047     		bx	lr
 2430              		.cfi_endproc
 2431              	.LFE141:
 2433 003a 00BF     		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2434              		.align	2
 2435              		.global	TIM_OC4PreloadConfig
 2436              		.thumb
 2437              		.thumb_func
 2439              	TIM_OC4PreloadConfig:
 2440              	.LFB142:
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2441              		.loc 1 1319 0
 2442              		.cfi_startproc
 2443              		@ args = 0, pretend = 0, frame = 16
 2444              		@ frame_needed = 1, uses_anonymous_args = 0
 2445              		@ link register save eliminated.
 2446 0000 80B4     		push	{r7}
 2447              	.LCFI96:
 2448              		.cfi_def_cfa_offset 4
 2449 0002 85B0     		sub	sp, sp, #20
 2450              	.LCFI97:
 2451              		.cfi_def_cfa_offset 24
 2452 0004 00AF     		add	r7, sp, #0
 2453              		.cfi_offset 7, -4
 2454              	.LCFI98:
 2455              		.cfi_def_cfa_register 7
 2456 0006 7860     		str	r0, [r7, #4]
 2457 0008 0B46     		mov	r3, r1
 2458 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2459              		.loc 1 1320 0
 2460 000c 4FF00003 		mov	r3, #0
 2461 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2462              		.loc 1 1326 0
 2463 0012 7B68     		ldr	r3, [r7, #4]
 2464 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2465 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2466              		.loc 1 1329 0
 2467 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2468 001a 23F40063 		bic	r3, r3, #2048
 2469 001e FB81     		strh	r3, [r7, #14]	@ movhi
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2470              		.loc 1 1332 0
 2471 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2472 0022 4FEA0323 		lsl	r3, r3, #8
 2473 0026 9AB2     		uxth	r2, r3
 2474 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2475 002a 42EA0303 		orr	r3, r2, r3
 2476 002e FB81     		strh	r3, [r7, #14]	@ movhi
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2477              		.loc 1 1335 0
 2478 0030 7B68     		ldr	r3, [r7, #4]
 2479 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2480 0034 9A83     		strh	r2, [r3, #28]	@ movhi
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2481              		.loc 1 1336 0
 2482 0036 07F11407 		add	r7, r7, #20
 2483 003a BD46     		mov	sp, r7
 2484 003c 80BC     		pop	{r7}
 2485 003e 7047     		bx	lr
 2486              		.cfi_endproc
 2487              	.LFE142:
 2489              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2490              		.align	2
 2491              		.global	TIM_OC1FastConfig
 2492              		.thumb
 2493              		.thumb_func
 2495              	TIM_OC1FastConfig:
 2496              	.LFB143:
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2497              		.loc 1 1348 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 16
 2500              		@ frame_needed = 1, uses_anonymous_args = 0
 2501              		@ link register save eliminated.
 2502 0000 80B4     		push	{r7}
 2503              	.LCFI99:
 2504              		.cfi_def_cfa_offset 4
 2505 0002 85B0     		sub	sp, sp, #20
 2506              	.LCFI100:
 2507              		.cfi_def_cfa_offset 24
 2508 0004 00AF     		add	r7, sp, #0
 2509              		.cfi_offset 7, -4
 2510              	.LCFI101:
 2511              		.cfi_def_cfa_register 7
 2512 0006 7860     		str	r0, [r7, #4]
 2513 0008 0B46     		mov	r3, r1
 2514 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2515              		.loc 1 1349 0
 2516 000c 4FF00003 		mov	r3, #0
 2517 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2518              		.loc 1 1356 0
 2519 0012 7B68     		ldr	r3, [r7, #4]
 2520 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2521 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2522              		.loc 1 1359 0
 2523 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2524 001a 23F00403 		bic	r3, r3, #4
 2525 001e FB81     		strh	r3, [r7, #14]	@ movhi
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2526              		.loc 1 1362 0
 2527 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2528 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2529 0024 42EA0303 		orr	r3, r2, r3
 2530 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2531              		.loc 1 1365 0
 2532 002a 7B68     		ldr	r3, [r7, #4]
 2533 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2534 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2535              		.loc 1 1366 0
 2536 0030 07F11407 		add	r7, r7, #20
 2537 0034 BD46     		mov	sp, r7
 2538 0036 80BC     		pop	{r7}
 2539 0038 7047     		bx	lr
 2540              		.cfi_endproc
 2541              	.LFE143:
 2543 003a 00BF     		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2544              		.align	2
 2545              		.global	TIM_OC2FastConfig
 2546              		.thumb
 2547              		.thumb_func
 2549              	TIM_OC2FastConfig:
 2550              	.LFB144:
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2551              		.loc 1 1379 0
 2552              		.cfi_startproc
 2553              		@ args = 0, pretend = 0, frame = 16
 2554              		@ frame_needed = 1, uses_anonymous_args = 0
 2555              		@ link register save eliminated.
 2556 0000 80B4     		push	{r7}
 2557              	.LCFI102:
 2558              		.cfi_def_cfa_offset 4
 2559 0002 85B0     		sub	sp, sp, #20
 2560              	.LCFI103:
 2561              		.cfi_def_cfa_offset 24
 2562 0004 00AF     		add	r7, sp, #0
 2563              		.cfi_offset 7, -4
 2564              	.LCFI104:
 2565              		.cfi_def_cfa_register 7
 2566 0006 7860     		str	r0, [r7, #4]
 2567 0008 0B46     		mov	r3, r1
 2568 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2569              		.loc 1 1380 0
 2570 000c 4FF00003 		mov	r3, #0
 2571 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2572              		.loc 1 1387 0
 2573 0012 7B68     		ldr	r3, [r7, #4]
 2574 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2575 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2576              		.loc 1 1390 0
 2577 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2578 001a 23F48063 		bic	r3, r3, #1024
 2579 001e FB81     		strh	r3, [r7, #14]	@ movhi
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2580              		.loc 1 1393 0
 2581 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2582 0022 4FEA0323 		lsl	r3, r3, #8
 2583 0026 9AB2     		uxth	r2, r3
 2584 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2585 002a 42EA0303 		orr	r3, r2, r3
 2586 002e FB81     		strh	r3, [r7, #14]	@ movhi
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2587              		.loc 1 1396 0
 2588 0030 7B68     		ldr	r3, [r7, #4]
 2589 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2590 0034 1A83     		strh	r2, [r3, #24]	@ movhi
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2591              		.loc 1 1397 0
 2592 0036 07F11407 		add	r7, r7, #20
 2593 003a BD46     		mov	sp, r7
 2594 003c 80BC     		pop	{r7}
 2595 003e 7047     		bx	lr
 2596              		.cfi_endproc
 2597              	.LFE144:
 2599              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2600              		.align	2
 2601              		.global	TIM_OC3FastConfig
 2602              		.thumb
 2603              		.thumb_func
 2605              	TIM_OC3FastConfig:
 2606              	.LFB145:
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2607              		.loc 1 1409 0
 2608              		.cfi_startproc
 2609              		@ args = 0, pretend = 0, frame = 16
 2610              		@ frame_needed = 1, uses_anonymous_args = 0
 2611              		@ link register save eliminated.
 2612 0000 80B4     		push	{r7}
 2613              	.LCFI105:
 2614              		.cfi_def_cfa_offset 4
 2615 0002 85B0     		sub	sp, sp, #20
 2616              	.LCFI106:
 2617              		.cfi_def_cfa_offset 24
 2618 0004 00AF     		add	r7, sp, #0
 2619              		.cfi_offset 7, -4
 2620              	.LCFI107:
 2621              		.cfi_def_cfa_register 7
 2622 0006 7860     		str	r0, [r7, #4]
 2623 0008 0B46     		mov	r3, r1
 2624 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2625              		.loc 1 1410 0
 2626 000c 4FF00003 		mov	r3, #0
 2627 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2628              		.loc 1 1417 0
 2629 0012 7B68     		ldr	r3, [r7, #4]
 2630 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2631 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2632              		.loc 1 1420 0
 2633 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2634 001a 23F00403 		bic	r3, r3, #4
 2635 001e FB81     		strh	r3, [r7, #14]	@ movhi
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2636              		.loc 1 1423 0
 2637 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2638 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2639 0024 42EA0303 		orr	r3, r2, r3
 2640 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2641              		.loc 1 1426 0
 2642 002a 7B68     		ldr	r3, [r7, #4]
 2643 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2644 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2645              		.loc 1 1427 0
 2646 0030 07F11407 		add	r7, r7, #20
 2647 0034 BD46     		mov	sp, r7
 2648 0036 80BC     		pop	{r7}
 2649 0038 7047     		bx	lr
 2650              		.cfi_endproc
 2651              	.LFE145:
 2653 003a 00BF     		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2654              		.align	2
 2655              		.global	TIM_OC4FastConfig
 2656              		.thumb
 2657              		.thumb_func
 2659              	TIM_OC4FastConfig:
 2660              	.LFB146:
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2661              		.loc 1 1439 0
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 16
 2664              		@ frame_needed = 1, uses_anonymous_args = 0
 2665              		@ link register save eliminated.
 2666 0000 80B4     		push	{r7}
 2667              	.LCFI108:
 2668              		.cfi_def_cfa_offset 4
 2669 0002 85B0     		sub	sp, sp, #20
 2670              	.LCFI109:
 2671              		.cfi_def_cfa_offset 24
 2672 0004 00AF     		add	r7, sp, #0
 2673              		.cfi_offset 7, -4
 2674              	.LCFI110:
 2675              		.cfi_def_cfa_register 7
 2676 0006 7860     		str	r0, [r7, #4]
 2677 0008 0B46     		mov	r3, r1
 2678 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2679              		.loc 1 1440 0
 2680 000c 4FF00003 		mov	r3, #0
 2681 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2682              		.loc 1 1447 0
 2683 0012 7B68     		ldr	r3, [r7, #4]
 2684 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2685 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2686              		.loc 1 1450 0
 2687 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2688 001a 23F48063 		bic	r3, r3, #1024
 2689 001e FB81     		strh	r3, [r7, #14]	@ movhi
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2690              		.loc 1 1453 0
 2691 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2692 0022 4FEA0323 		lsl	r3, r3, #8
 2693 0026 9AB2     		uxth	r2, r3
 2694 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2695 002a 42EA0303 		orr	r3, r2, r3
 2696 002e FB81     		strh	r3, [r7, #14]	@ movhi
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2697              		.loc 1 1456 0
 2698 0030 7B68     		ldr	r3, [r7, #4]
 2699 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2700 0034 9A83     		strh	r2, [r3, #28]	@ movhi
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2701              		.loc 1 1457 0
 2702 0036 07F11407 		add	r7, r7, #20
 2703 003a BD46     		mov	sp, r7
 2704 003c 80BC     		pop	{r7}
 2705 003e 7047     		bx	lr
 2706              		.cfi_endproc
 2707              	.LFE146:
 2709              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2710              		.align	2
 2711              		.global	TIM_ClearOC1Ref
 2712              		.thumb
 2713              		.thumb_func
 2715              	TIM_ClearOC1Ref:
 2716              	.LFB147:
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2717              		.loc 1 1469 0
 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 16
 2720              		@ frame_needed = 1, uses_anonymous_args = 0
 2721              		@ link register save eliminated.
 2722 0000 80B4     		push	{r7}
 2723              	.LCFI111:
 2724              		.cfi_def_cfa_offset 4
 2725 0002 85B0     		sub	sp, sp, #20
 2726              	.LCFI112:
 2727              		.cfi_def_cfa_offset 24
 2728 0004 00AF     		add	r7, sp, #0
 2729              		.cfi_offset 7, -4
 2730              	.LCFI113:
 2731              		.cfi_def_cfa_register 7
 2732 0006 7860     		str	r0, [r7, #4]
 2733 0008 0B46     		mov	r3, r1
 2734 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2735              		.loc 1 1470 0
 2736 000c 4FF00003 		mov	r3, #0
 2737 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2738              		.loc 1 1476 0
 2739 0012 7B68     		ldr	r3, [r7, #4]
 2740 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2741 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2742              		.loc 1 1479 0
 2743 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2744 001a 23F08003 		bic	r3, r3, #128
 2745 001e FB81     		strh	r3, [r7, #14]	@ movhi
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2746              		.loc 1 1482 0
 2747 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2748 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2749 0024 42EA0303 		orr	r3, r2, r3
 2750 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2751              		.loc 1 1485 0
 2752 002a 7B68     		ldr	r3, [r7, #4]
 2753 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2754 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2755              		.loc 1 1486 0
 2756 0030 07F11407 		add	r7, r7, #20
 2757 0034 BD46     		mov	sp, r7
 2758 0036 80BC     		pop	{r7}
 2759 0038 7047     		bx	lr
 2760              		.cfi_endproc
 2761              	.LFE147:
 2763 003a 00BF     		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2764              		.align	2
 2765              		.global	TIM_ClearOC2Ref
 2766              		.thumb
 2767              		.thumb_func
 2769              	TIM_ClearOC2Ref:
 2770              	.LFB148:
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2771              		.loc 1 1499 0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 16
 2774              		@ frame_needed = 1, uses_anonymous_args = 0
 2775              		@ link register save eliminated.
 2776 0000 80B4     		push	{r7}
 2777              	.LCFI114:
 2778              		.cfi_def_cfa_offset 4
 2779 0002 85B0     		sub	sp, sp, #20
 2780              	.LCFI115:
 2781              		.cfi_def_cfa_offset 24
 2782 0004 00AF     		add	r7, sp, #0
 2783              		.cfi_offset 7, -4
 2784              	.LCFI116:
 2785              		.cfi_def_cfa_register 7
 2786 0006 7860     		str	r0, [r7, #4]
 2787 0008 0B46     		mov	r3, r1
 2788 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2789              		.loc 1 1500 0
 2790 000c 4FF00003 		mov	r3, #0
 2791 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2792              		.loc 1 1506 0
 2793 0012 7B68     		ldr	r3, [r7, #4]
 2794 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2795 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2796              		.loc 1 1509 0
 2797 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2798 001a 4FEA4343 		lsl	r3, r3, #17
 2799 001e 4FEA5343 		lsr	r3, r3, #17
 2800 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2801              		.loc 1 1512 0
 2802 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2803 0026 4FEA0323 		lsl	r3, r3, #8
 2804 002a 9AB2     		uxth	r2, r3
 2805 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2806 002e 42EA0303 		orr	r3, r2, r3
 2807 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2808              		.loc 1 1515 0
 2809 0034 7B68     		ldr	r3, [r7, #4]
 2810 0036 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2811 0038 1A83     		strh	r2, [r3, #24]	@ movhi
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2812              		.loc 1 1516 0
 2813 003a 07F11407 		add	r7, r7, #20
 2814 003e BD46     		mov	sp, r7
 2815 0040 80BC     		pop	{r7}
 2816 0042 7047     		bx	lr
 2817              		.cfi_endproc
 2818              	.LFE148:
 2820              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2821              		.align	2
 2822              		.global	TIM_ClearOC3Ref
 2823              		.thumb
 2824              		.thumb_func
 2826              	TIM_ClearOC3Ref:
 2827              	.LFB149:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2828              		.loc 1 1528 0
 2829              		.cfi_startproc
 2830              		@ args = 0, pretend = 0, frame = 16
 2831              		@ frame_needed = 1, uses_anonymous_args = 0
 2832              		@ link register save eliminated.
 2833 0000 80B4     		push	{r7}
 2834              	.LCFI117:
 2835              		.cfi_def_cfa_offset 4
 2836 0002 85B0     		sub	sp, sp, #20
 2837              	.LCFI118:
 2838              		.cfi_def_cfa_offset 24
 2839 0004 00AF     		add	r7, sp, #0
 2840              		.cfi_offset 7, -4
 2841              	.LCFI119:
 2842              		.cfi_def_cfa_register 7
 2843 0006 7860     		str	r0, [r7, #4]
 2844 0008 0B46     		mov	r3, r1
 2845 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2846              		.loc 1 1529 0
 2847 000c 4FF00003 		mov	r3, #0
 2848 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2849              		.loc 1 1535 0
 2850 0012 7B68     		ldr	r3, [r7, #4]
 2851 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2852 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2853              		.loc 1 1538 0
 2854 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2855 001a 23F08003 		bic	r3, r3, #128
 2856 001e FB81     		strh	r3, [r7, #14]	@ movhi
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2857              		.loc 1 1541 0
 2858 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2859 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2860 0024 42EA0303 		orr	r3, r2, r3
 2861 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2862              		.loc 1 1544 0
 2863 002a 7B68     		ldr	r3, [r7, #4]
 2864 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2865 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2866              		.loc 1 1545 0
 2867 0030 07F11407 		add	r7, r7, #20
 2868 0034 BD46     		mov	sp, r7
 2869 0036 80BC     		pop	{r7}
 2870 0038 7047     		bx	lr
 2871              		.cfi_endproc
 2872              	.LFE149:
 2874 003a 00BF     		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2875              		.align	2
 2876              		.global	TIM_ClearOC4Ref
 2877              		.thumb
 2878              		.thumb_func
 2880              	TIM_ClearOC4Ref:
 2881              	.LFB150:
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2882              		.loc 1 1557 0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 16
 2885              		@ frame_needed = 1, uses_anonymous_args = 0
 2886              		@ link register save eliminated.
 2887 0000 80B4     		push	{r7}
 2888              	.LCFI120:
 2889              		.cfi_def_cfa_offset 4
 2890 0002 85B0     		sub	sp, sp, #20
 2891              	.LCFI121:
 2892              		.cfi_def_cfa_offset 24
 2893 0004 00AF     		add	r7, sp, #0
 2894              		.cfi_offset 7, -4
 2895              	.LCFI122:
 2896              		.cfi_def_cfa_register 7
 2897 0006 7860     		str	r0, [r7, #4]
 2898 0008 0B46     		mov	r3, r1
 2899 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2900              		.loc 1 1558 0
 2901 000c 4FF00003 		mov	r3, #0
 2902 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2903              		.loc 1 1564 0
 2904 0012 7B68     		ldr	r3, [r7, #4]
 2905 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2906 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2907              		.loc 1 1567 0
 2908 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2909 001a 4FEA4343 		lsl	r3, r3, #17
 2910 001e 4FEA5343 		lsr	r3, r3, #17
 2911 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2912              		.loc 1 1570 0
 2913 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2914 0026 4FEA0323 		lsl	r3, r3, #8
 2915 002a 9AB2     		uxth	r2, r3
 2916 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2917 002e 42EA0303 		orr	r3, r2, r3
 2918 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2919              		.loc 1 1573 0
 2920 0034 7B68     		ldr	r3, [r7, #4]
 2921 0036 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2922 0038 9A83     		strh	r2, [r3, #28]	@ movhi
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2923              		.loc 1 1574 0
 2924 003a 07F11407 		add	r7, r7, #20
 2925 003e BD46     		mov	sp, r7
 2926 0040 80BC     		pop	{r7}
 2927 0042 7047     		bx	lr
 2928              		.cfi_endproc
 2929              	.LFE150:
 2931              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2932              		.align	2
 2933              		.global	TIM_OC1PolarityConfig
 2934              		.thumb
 2935              		.thumb_func
 2937              	TIM_OC1PolarityConfig:
 2938              	.LFB151:
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2939              		.loc 1 1586 0
 2940              		.cfi_startproc
 2941              		@ args = 0, pretend = 0, frame = 16
 2942              		@ frame_needed = 1, uses_anonymous_args = 0
 2943              		@ link register save eliminated.
 2944 0000 80B4     		push	{r7}
 2945              	.LCFI123:
 2946              		.cfi_def_cfa_offset 4
 2947 0002 85B0     		sub	sp, sp, #20
 2948              	.LCFI124:
 2949              		.cfi_def_cfa_offset 24
 2950 0004 00AF     		add	r7, sp, #0
 2951              		.cfi_offset 7, -4
 2952              	.LCFI125:
 2953              		.cfi_def_cfa_register 7
 2954 0006 7860     		str	r0, [r7, #4]
 2955 0008 0B46     		mov	r3, r1
 2956 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2957              		.loc 1 1587 0
 2958 000c 4FF00003 		mov	r3, #0
 2959 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2960              		.loc 1 1593 0
 2961 0012 7B68     		ldr	r3, [r7, #4]
 2962 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2963 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2964              		.loc 1 1596 0
 2965 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2966 001a 23F00203 		bic	r3, r3, #2
 2967 001e FB81     		strh	r3, [r7, #14]	@ movhi
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2968              		.loc 1 1597 0
 2969 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2970 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2971 0024 42EA0303 		orr	r3, r2, r3
 2972 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2973              		.loc 1 1600 0
 2974 002a 7B68     		ldr	r3, [r7, #4]
 2975 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2976 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2977              		.loc 1 1601 0
 2978 0030 07F11407 		add	r7, r7, #20
 2979 0034 BD46     		mov	sp, r7
 2980 0036 80BC     		pop	{r7}
 2981 0038 7047     		bx	lr
 2982              		.cfi_endproc
 2983              	.LFE151:
 2985 003a 00BF     		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2986              		.align	2
 2987              		.global	TIM_OC1NPolarityConfig
 2988              		.thumb
 2989              		.thumb_func
 2991              	TIM_OC1NPolarityConfig:
 2992              	.LFB152:
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2993              		.loc 1 1613 0
 2994              		.cfi_startproc
 2995              		@ args = 0, pretend = 0, frame = 16
 2996              		@ frame_needed = 1, uses_anonymous_args = 0
 2997              		@ link register save eliminated.
 2998 0000 80B4     		push	{r7}
 2999              	.LCFI126:
 3000              		.cfi_def_cfa_offset 4
 3001 0002 85B0     		sub	sp, sp, #20
 3002              	.LCFI127:
 3003              		.cfi_def_cfa_offset 24
 3004 0004 00AF     		add	r7, sp, #0
 3005              		.cfi_offset 7, -4
 3006              	.LCFI128:
 3007              		.cfi_def_cfa_register 7
 3008 0006 7860     		str	r0, [r7, #4]
 3009 0008 0B46     		mov	r3, r1
 3010 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3011              		.loc 1 1614 0
 3012 000c 4FF00003 		mov	r3, #0
 3013 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3014              		.loc 1 1619 0
 3015 0012 7B68     		ldr	r3, [r7, #4]
 3016 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3017 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 3018              		.loc 1 1622 0
 3019 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3020 001a 23F00803 		bic	r3, r3, #8
 3021 001e FB81     		strh	r3, [r7, #14]	@ movhi
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3022              		.loc 1 1623 0
 3023 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3024 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3025 0024 42EA0303 		orr	r3, r2, r3
 3026 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3027              		.loc 1 1626 0
 3028 002a 7B68     		ldr	r3, [r7, #4]
 3029 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3030 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3031              		.loc 1 1627 0
 3032 0030 07F11407 		add	r7, r7, #20
 3033 0034 BD46     		mov	sp, r7
 3034 0036 80BC     		pop	{r7}
 3035 0038 7047     		bx	lr
 3036              		.cfi_endproc
 3037              	.LFE152:
 3039 003a 00BF     		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 3040              		.align	2
 3041              		.global	TIM_OC2PolarityConfig
 3042              		.thumb
 3043              		.thumb_func
 3045              	TIM_OC2PolarityConfig:
 3046              	.LFB153:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3047              		.loc 1 1640 0
 3048              		.cfi_startproc
 3049              		@ args = 0, pretend = 0, frame = 16
 3050              		@ frame_needed = 1, uses_anonymous_args = 0
 3051              		@ link register save eliminated.
 3052 0000 80B4     		push	{r7}
 3053              	.LCFI129:
 3054              		.cfi_def_cfa_offset 4
 3055 0002 85B0     		sub	sp, sp, #20
 3056              	.LCFI130:
 3057              		.cfi_def_cfa_offset 24
 3058 0004 00AF     		add	r7, sp, #0
 3059              		.cfi_offset 7, -4
 3060              	.LCFI131:
 3061              		.cfi_def_cfa_register 7
 3062 0006 7860     		str	r0, [r7, #4]
 3063 0008 0B46     		mov	r3, r1
 3064 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3065              		.loc 1 1641 0
 3066 000c 4FF00003 		mov	r3, #0
 3067 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3068              		.loc 1 1647 0
 3069 0012 7B68     		ldr	r3, [r7, #4]
 3070 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3071 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3072              		.loc 1 1650 0
 3073 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3074 001a 23F02003 		bic	r3, r3, #32
 3075 001e FB81     		strh	r3, [r7, #14]	@ movhi
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3076              		.loc 1 1651 0
 3077 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3078 0022 4FEA0313 		lsl	r3, r3, #4
 3079 0026 9AB2     		uxth	r2, r3
 3080 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3081 002a 42EA0303 		orr	r3, r2, r3
 3082 002e FB81     		strh	r3, [r7, #14]	@ movhi
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3083              		.loc 1 1654 0
 3084 0030 7B68     		ldr	r3, [r7, #4]
 3085 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3086 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3087              		.loc 1 1655 0
 3088 0036 07F11407 		add	r7, r7, #20
 3089 003a BD46     		mov	sp, r7
 3090 003c 80BC     		pop	{r7}
 3091 003e 7047     		bx	lr
 3092              		.cfi_endproc
 3093              	.LFE153:
 3095              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 3096              		.align	2
 3097              		.global	TIM_OC2NPolarityConfig
 3098              		.thumb
 3099              		.thumb_func
 3101              	TIM_OC2NPolarityConfig:
 3102              	.LFB154:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3103              		.loc 1 1667 0
 3104              		.cfi_startproc
 3105              		@ args = 0, pretend = 0, frame = 16
 3106              		@ frame_needed = 1, uses_anonymous_args = 0
 3107              		@ link register save eliminated.
 3108 0000 80B4     		push	{r7}
 3109              	.LCFI132:
 3110              		.cfi_def_cfa_offset 4
 3111 0002 85B0     		sub	sp, sp, #20
 3112              	.LCFI133:
 3113              		.cfi_def_cfa_offset 24
 3114 0004 00AF     		add	r7, sp, #0
 3115              		.cfi_offset 7, -4
 3116              	.LCFI134:
 3117              		.cfi_def_cfa_register 7
 3118 0006 7860     		str	r0, [r7, #4]
 3119 0008 0B46     		mov	r3, r1
 3120 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3121              		.loc 1 1668 0
 3122 000c 4FF00003 		mov	r3, #0
 3123 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3124              		.loc 1 1674 0
 3125 0012 7B68     		ldr	r3, [r7, #4]
 3126 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3127 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3128              		.loc 1 1677 0
 3129 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3130 001a 23F08003 		bic	r3, r3, #128
 3131 001e FB81     		strh	r3, [r7, #14]	@ movhi
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3132              		.loc 1 1678 0
 3133 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3134 0022 4FEA0313 		lsl	r3, r3, #4
 3135 0026 9AB2     		uxth	r2, r3
 3136 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3137 002a 42EA0303 		orr	r3, r2, r3
 3138 002e FB81     		strh	r3, [r7, #14]	@ movhi
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3139              		.loc 1 1681 0
 3140 0030 7B68     		ldr	r3, [r7, #4]
 3141 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3142 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3143              		.loc 1 1682 0
 3144 0036 07F11407 		add	r7, r7, #20
 3145 003a BD46     		mov	sp, r7
 3146 003c 80BC     		pop	{r7}
 3147 003e 7047     		bx	lr
 3148              		.cfi_endproc
 3149              	.LFE154:
 3151              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 3152              		.align	2
 3153              		.global	TIM_OC3PolarityConfig
 3154              		.thumb
 3155              		.thumb_func
 3157              	TIM_OC3PolarityConfig:
 3158              	.LFB155:
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3159              		.loc 1 1694 0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 16
 3162              		@ frame_needed = 1, uses_anonymous_args = 0
 3163              		@ link register save eliminated.
 3164 0000 80B4     		push	{r7}
 3165              	.LCFI135:
 3166              		.cfi_def_cfa_offset 4
 3167 0002 85B0     		sub	sp, sp, #20
 3168              	.LCFI136:
 3169              		.cfi_def_cfa_offset 24
 3170 0004 00AF     		add	r7, sp, #0
 3171              		.cfi_offset 7, -4
 3172              	.LCFI137:
 3173              		.cfi_def_cfa_register 7
 3174 0006 7860     		str	r0, [r7, #4]
 3175 0008 0B46     		mov	r3, r1
 3176 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3177              		.loc 1 1695 0
 3178 000c 4FF00003 		mov	r3, #0
 3179 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3180              		.loc 1 1701 0
 3181 0012 7B68     		ldr	r3, [r7, #4]
 3182 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3183 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3184              		.loc 1 1704 0
 3185 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3186 001a 23F40073 		bic	r3, r3, #512
 3187 001e FB81     		strh	r3, [r7, #14]	@ movhi
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3188              		.loc 1 1705 0
 3189 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3190 0022 4FEA0323 		lsl	r3, r3, #8
 3191 0026 9AB2     		uxth	r2, r3
 3192 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3193 002a 42EA0303 		orr	r3, r2, r3
 3194 002e FB81     		strh	r3, [r7, #14]	@ movhi
1706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3195              		.loc 1 1708 0
 3196 0030 7B68     		ldr	r3, [r7, #4]
 3197 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3198 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3199              		.loc 1 1709 0
 3200 0036 07F11407 		add	r7, r7, #20
 3201 003a BD46     		mov	sp, r7
 3202 003c 80BC     		pop	{r7}
 3203 003e 7047     		bx	lr
 3204              		.cfi_endproc
 3205              	.LFE155:
 3207              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 3208              		.align	2
 3209              		.global	TIM_OC3NPolarityConfig
 3210              		.thumb
 3211              		.thumb_func
 3213              	TIM_OC3NPolarityConfig:
 3214              	.LFB156:
1710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3215              		.loc 1 1721 0
 3216              		.cfi_startproc
 3217              		@ args = 0, pretend = 0, frame = 16
 3218              		@ frame_needed = 1, uses_anonymous_args = 0
 3219              		@ link register save eliminated.
 3220 0000 80B4     		push	{r7}
 3221              	.LCFI138:
 3222              		.cfi_def_cfa_offset 4
 3223 0002 85B0     		sub	sp, sp, #20
 3224              	.LCFI139:
 3225              		.cfi_def_cfa_offset 24
 3226 0004 00AF     		add	r7, sp, #0
 3227              		.cfi_offset 7, -4
 3228              	.LCFI140:
 3229              		.cfi_def_cfa_register 7
 3230 0006 7860     		str	r0, [r7, #4]
 3231 0008 0B46     		mov	r3, r1
 3232 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3233              		.loc 1 1722 0
 3234 000c 4FF00003 		mov	r3, #0
 3235 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3236              		.loc 1 1728 0
 3237 0012 7B68     		ldr	r3, [r7, #4]
 3238 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3239 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3240              		.loc 1 1731 0
 3241 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3242 001a 23F40063 		bic	r3, r3, #2048
 3243 001e FB81     		strh	r3, [r7, #14]	@ movhi
1732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3244              		.loc 1 1732 0
 3245 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3246 0022 4FEA0323 		lsl	r3, r3, #8
 3247 0026 9AB2     		uxth	r2, r3
 3248 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3249 002a 42EA0303 		orr	r3, r2, r3
 3250 002e FB81     		strh	r3, [r7, #14]	@ movhi
1733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3251              		.loc 1 1735 0
 3252 0030 7B68     		ldr	r3, [r7, #4]
 3253 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3254 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3255              		.loc 1 1736 0
 3256 0036 07F11407 		add	r7, r7, #20
 3257 003a BD46     		mov	sp, r7
 3258 003c 80BC     		pop	{r7}
 3259 003e 7047     		bx	lr
 3260              		.cfi_endproc
 3261              	.LFE156:
 3263              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 3264              		.align	2
 3265              		.global	TIM_OC4PolarityConfig
 3266              		.thumb
 3267              		.thumb_func
 3269              	TIM_OC4PolarityConfig:
 3270              	.LFB157:
1737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3271              		.loc 1 1748 0
 3272              		.cfi_startproc
 3273              		@ args = 0, pretend = 0, frame = 16
 3274              		@ frame_needed = 1, uses_anonymous_args = 0
 3275              		@ link register save eliminated.
 3276 0000 80B4     		push	{r7}
 3277              	.LCFI141:
 3278              		.cfi_def_cfa_offset 4
 3279 0002 85B0     		sub	sp, sp, #20
 3280              	.LCFI142:
 3281              		.cfi_def_cfa_offset 24
 3282 0004 00AF     		add	r7, sp, #0
 3283              		.cfi_offset 7, -4
 3284              	.LCFI143:
 3285              		.cfi_def_cfa_register 7
 3286 0006 7860     		str	r0, [r7, #4]
 3287 0008 0B46     		mov	r3, r1
 3288 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3289              		.loc 1 1749 0
 3290 000c 4FF00003 		mov	r3, #0
 3291 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3292              		.loc 1 1755 0
 3293 0012 7B68     		ldr	r3, [r7, #4]
 3294 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3295 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3296              		.loc 1 1758 0
 3297 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3298 001a 23F40053 		bic	r3, r3, #8192
 3299 001e FB81     		strh	r3, [r7, #14]	@ movhi
1759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3300              		.loc 1 1759 0
 3301 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3302 0022 4FEA0333 		lsl	r3, r3, #12
 3303 0026 9AB2     		uxth	r2, r3
 3304 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3305 002a 42EA0303 		orr	r3, r2, r3
 3306 002e FB81     		strh	r3, [r7, #14]	@ movhi
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3307              		.loc 1 1762 0
 3308 0030 7B68     		ldr	r3, [r7, #4]
 3309 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3310 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3311              		.loc 1 1763 0
 3312 0036 07F11407 		add	r7, r7, #20
 3313 003a BD46     		mov	sp, r7
 3314 003c 80BC     		pop	{r7}
 3315 003e 7047     		bx	lr
 3316              		.cfi_endproc
 3317              	.LFE157:
 3319              		.section	.text.TIM_CCxCmd,"ax",%progbits
 3320              		.align	2
 3321              		.global	TIM_CCxCmd
 3322              		.thumb
 3323              		.thumb_func
 3325              	TIM_CCxCmd:
 3326              	.LFB158:
1764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3327              		.loc 1 1779 0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 16
 3330              		@ frame_needed = 1, uses_anonymous_args = 0
 3331              		@ link register save eliminated.
 3332 0000 80B4     		push	{r7}
 3333              	.LCFI144:
 3334              		.cfi_def_cfa_offset 4
 3335 0002 85B0     		sub	sp, sp, #20
 3336              	.LCFI145:
 3337              		.cfi_def_cfa_offset 24
 3338 0004 00AF     		add	r7, sp, #0
 3339              		.cfi_offset 7, -4
 3340              	.LCFI146:
 3341              		.cfi_def_cfa_register 7
 3342 0006 7860     		str	r0, [r7, #4]
 3343 0008 1346     		mov	r3, r2
 3344 000a 0A46     		mov	r2, r1	@ movhi
 3345 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3346 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3347              		.loc 1 1780 0
 3348 0010 4FF00003 		mov	r3, #0
 3349 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3350              		.loc 1 1787 0
 3351 0016 7B88     		ldrh	r3, [r7, #2]
 3352 0018 4FF00102 		mov	r2, #1
 3353 001c 02FA03F3 		lsl	r3, r2, r3
 3354 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3355              		.loc 1 1790 0
 3356 0022 7B68     		ldr	r3, [r7, #4]
 3357 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3358 0026 9AB2     		uxth	r2, r3
 3359 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3360 002a 6FEA0303 		mvn	r3, r3
 3361 002e 9BB2     		uxth	r3, r3
 3362 0030 02EA0303 		and	r3, r2, r3
 3363 0034 9AB2     		uxth	r2, r3
 3364 0036 7B68     		ldr	r3, [r7, #4]
 3365 0038 1A84     		strh	r2, [r3, #32]	@ movhi
1791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3366              		.loc 1 1793 0
 3367 003a 7B68     		ldr	r3, [r7, #4]
 3368 003c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3369 003e 9AB2     		uxth	r2, r3
 3370 0040 3988     		ldrh	r1, [r7, #0]
 3371 0042 7B88     		ldrh	r3, [r7, #2]
 3372 0044 01FA03F3 		lsl	r3, r1, r3
 3373 0048 9BB2     		uxth	r3, r3
 3374 004a 42EA0303 		orr	r3, r2, r3
 3375 004e 9AB2     		uxth	r2, r3
 3376 0050 7B68     		ldr	r3, [r7, #4]
 3377 0052 1A84     		strh	r2, [r3, #32]	@ movhi
1794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3378              		.loc 1 1794 0
 3379 0054 07F11407 		add	r7, r7, #20
 3380 0058 BD46     		mov	sp, r7
 3381 005a 80BC     		pop	{r7}
 3382 005c 7047     		bx	lr
 3383              		.cfi_endproc
 3384              	.LFE158:
 3386 005e 00BF     		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3387              		.align	2
 3388              		.global	TIM_CCxNCmd
 3389              		.thumb
 3390              		.thumb_func
 3392              	TIM_CCxNCmd:
 3393              	.LFB159:
1795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3394              		.loc 1 1809 0
 3395              		.cfi_startproc
 3396              		@ args = 0, pretend = 0, frame = 16
 3397              		@ frame_needed = 1, uses_anonymous_args = 0
 3398              		@ link register save eliminated.
 3399 0000 80B4     		push	{r7}
 3400              	.LCFI147:
 3401              		.cfi_def_cfa_offset 4
 3402 0002 85B0     		sub	sp, sp, #20
 3403              	.LCFI148:
 3404              		.cfi_def_cfa_offset 24
 3405 0004 00AF     		add	r7, sp, #0
 3406              		.cfi_offset 7, -4
 3407              	.LCFI149:
 3408              		.cfi_def_cfa_register 7
 3409 0006 7860     		str	r0, [r7, #4]
 3410 0008 1346     		mov	r3, r2
 3411 000a 0A46     		mov	r2, r1	@ movhi
 3412 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3413 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3414              		.loc 1 1810 0
 3415 0010 4FF00003 		mov	r3, #0
 3416 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3417              		.loc 1 1817 0
 3418 0016 7B88     		ldrh	r3, [r7, #2]
 3419 0018 4FF00402 		mov	r2, #4
 3420 001c 02FA03F3 		lsl	r3, r2, r3
 3421 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3422              		.loc 1 1820 0
 3423 0022 7B68     		ldr	r3, [r7, #4]
 3424 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3425 0026 9AB2     		uxth	r2, r3
 3426 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3427 002a 6FEA0303 		mvn	r3, r3
 3428 002e 9BB2     		uxth	r3, r3
 3429 0030 02EA0303 		and	r3, r2, r3
 3430 0034 9AB2     		uxth	r2, r3
 3431 0036 7B68     		ldr	r3, [r7, #4]
 3432 0038 1A84     		strh	r2, [r3, #32]	@ movhi
1821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3433              		.loc 1 1823 0
 3434 003a 7B68     		ldr	r3, [r7, #4]
 3435 003c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3436 003e 9AB2     		uxth	r2, r3
 3437 0040 3988     		ldrh	r1, [r7, #0]
 3438 0042 7B88     		ldrh	r3, [r7, #2]
 3439 0044 01FA03F3 		lsl	r3, r1, r3
 3440 0048 9BB2     		uxth	r3, r3
 3441 004a 42EA0303 		orr	r3, r2, r3
 3442 004e 9AB2     		uxth	r2, r3
 3443 0050 7B68     		ldr	r3, [r7, #4]
 3444 0052 1A84     		strh	r2, [r3, #32]	@ movhi
1824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3445              		.loc 1 1824 0
 3446 0054 07F11407 		add	r7, r7, #20
 3447 0058 BD46     		mov	sp, r7
 3448 005a 80BC     		pop	{r7}
 3449 005c 7047     		bx	lr
 3450              		.cfi_endproc
 3451              	.LFE159:
 3453 005e 00BF     		.section	.text.TIM_ICInit,"ax",%progbits
 3454              		.align	2
 3455              		.global	TIM_ICInit
 3456              		.thumb
 3457              		.thumb_func
 3459              	TIM_ICInit:
 3460              	.LFB160:
1825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3461              		.loc 1 1891 0
 3462              		.cfi_startproc
 3463              		@ args = 0, pretend = 0, frame = 8
 3464              		@ frame_needed = 1, uses_anonymous_args = 0
 3465 0000 80B5     		push	{r7, lr}
 3466              	.LCFI150:
 3467              		.cfi_def_cfa_offset 8
 3468 0002 82B0     		sub	sp, sp, #8
 3469              	.LCFI151:
 3470              		.cfi_def_cfa_offset 16
 3471 0004 00AF     		add	r7, sp, #0
 3472              		.cfi_offset 14, -4
 3473              		.cfi_offset 7, -8
 3474              	.LCFI152:
 3475              		.cfi_def_cfa_register 7
 3476 0006 7860     		str	r0, [r7, #4]
 3477 0008 3960     		str	r1, [r7, #0]
1892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3478              		.loc 1 1899 0
 3479 000a 3B68     		ldr	r3, [r7, #0]
 3480 000c 1B88     		ldrh	r3, [r3, #0]
 3481 000e 002B     		cmp	r3, #0
 3482 0010 0FD1     		bne	.L102
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3483              		.loc 1 1902 0
 3484 0012 3B68     		ldr	r3, [r7, #0]
 3485 0014 5988     		ldrh	r1, [r3, #2]
1903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3486              		.loc 1 1903 0
 3487 0016 3B68     		ldr	r3, [r7, #0]
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3488              		.loc 1 1902 0
 3489 0018 9A88     		ldrh	r2, [r3, #4]
1904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3490              		.loc 1 1904 0
 3491 001a 3B68     		ldr	r3, [r7, #0]
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3492              		.loc 1 1902 0
 3493 001c 1B89     		ldrh	r3, [r3, #8]
 3494 001e 7868     		ldr	r0, [r7, #4]
 3495 0020 FFF7FEFF 		bl	TI1_Config
1905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3496              		.loc 1 1906 0
 3497 0024 3B68     		ldr	r3, [r7, #0]
 3498 0026 DB88     		ldrh	r3, [r3, #6]
 3499 0028 7868     		ldr	r0, [r7, #4]
 3500 002a 1946     		mov	r1, r3
 3501 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3502 0030 36E0     		b	.L101
 3503              	.L102:
1907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3504              		.loc 1 1908 0
 3505 0032 3B68     		ldr	r3, [r7, #0]
 3506 0034 1B88     		ldrh	r3, [r3, #0]
 3507 0036 042B     		cmp	r3, #4
 3508 0038 0FD1     		bne	.L104
1909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3509              		.loc 1 1911 0
 3510 003a 3B68     		ldr	r3, [r7, #0]
 3511 003c 5988     		ldrh	r1, [r3, #2]
1912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3512              		.loc 1 1912 0
 3513 003e 3B68     		ldr	r3, [r7, #0]
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3514              		.loc 1 1911 0
 3515 0040 9A88     		ldrh	r2, [r3, #4]
1913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3516              		.loc 1 1913 0
 3517 0042 3B68     		ldr	r3, [r7, #0]
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3518              		.loc 1 1911 0
 3519 0044 1B89     		ldrh	r3, [r3, #8]
 3520 0046 7868     		ldr	r0, [r7, #4]
 3521 0048 FFF7FEFF 		bl	TI2_Config
1914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3522              		.loc 1 1915 0
 3523 004c 3B68     		ldr	r3, [r7, #0]
 3524 004e DB88     		ldrh	r3, [r3, #6]
 3525 0050 7868     		ldr	r0, [r7, #4]
 3526 0052 1946     		mov	r1, r3
 3527 0054 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3528 0058 22E0     		b	.L101
 3529              	.L104:
1916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3530              		.loc 1 1917 0
 3531 005a 3B68     		ldr	r3, [r7, #0]
 3532 005c 1B88     		ldrh	r3, [r3, #0]
 3533 005e 082B     		cmp	r3, #8
 3534 0060 0FD1     		bne	.L105
1918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3535              		.loc 1 1920 0
 3536 0062 3B68     		ldr	r3, [r7, #0]
 3537 0064 5988     		ldrh	r1, [r3, #2]
1921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3538              		.loc 1 1921 0
 3539 0066 3B68     		ldr	r3, [r7, #0]
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3540              		.loc 1 1920 0
 3541 0068 9A88     		ldrh	r2, [r3, #4]
1922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3542              		.loc 1 1922 0
 3543 006a 3B68     		ldr	r3, [r7, #0]
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3544              		.loc 1 1920 0
 3545 006c 1B89     		ldrh	r3, [r3, #8]
 3546 006e 7868     		ldr	r0, [r7, #4]
 3547 0070 FFF7FEFF 		bl	TI3_Config
1923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3548              		.loc 1 1924 0
 3549 0074 3B68     		ldr	r3, [r7, #0]
 3550 0076 DB88     		ldrh	r3, [r3, #6]
 3551 0078 7868     		ldr	r0, [r7, #4]
 3552 007a 1946     		mov	r1, r3
 3553 007c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3554 0080 0EE0     		b	.L101
 3555              	.L105:
1925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3556              		.loc 1 1929 0
 3557 0082 3B68     		ldr	r3, [r7, #0]
 3558 0084 5988     		ldrh	r1, [r3, #2]
1930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3559              		.loc 1 1930 0
 3560 0086 3B68     		ldr	r3, [r7, #0]
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3561              		.loc 1 1929 0
 3562 0088 9A88     		ldrh	r2, [r3, #4]
1931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3563              		.loc 1 1931 0
 3564 008a 3B68     		ldr	r3, [r7, #0]
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3565              		.loc 1 1929 0
 3566 008c 1B89     		ldrh	r3, [r3, #8]
 3567 008e 7868     		ldr	r0, [r7, #4]
 3568 0090 FFF7FEFF 		bl	TI4_Config
1932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3569              		.loc 1 1933 0
 3570 0094 3B68     		ldr	r3, [r7, #0]
 3571 0096 DB88     		ldrh	r3, [r3, #6]
 3572 0098 7868     		ldr	r0, [r7, #4]
 3573 009a 1946     		mov	r1, r3
 3574 009c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3575              	.L101:
1934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3576              		.loc 1 1935 0
 3577 00a0 07F10807 		add	r7, r7, #8
 3578 00a4 BD46     		mov	sp, r7
 3579 00a6 80BD     		pop	{r7, pc}
 3580              		.cfi_endproc
 3581              	.LFE160:
 3583              		.section	.text.TIM_ICStructInit,"ax",%progbits
 3584              		.align	2
 3585              		.global	TIM_ICStructInit
 3586              		.thumb
 3587              		.thumb_func
 3589              	TIM_ICStructInit:
 3590              	.LFB161:
1936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3591              		.loc 1 1944 0
 3592              		.cfi_startproc
 3593              		@ args = 0, pretend = 0, frame = 8
 3594              		@ frame_needed = 1, uses_anonymous_args = 0
 3595              		@ link register save eliminated.
 3596 0000 80B4     		push	{r7}
 3597              	.LCFI153:
 3598              		.cfi_def_cfa_offset 4
 3599 0002 83B0     		sub	sp, sp, #12
 3600              	.LCFI154:
 3601              		.cfi_def_cfa_offset 16
 3602 0004 00AF     		add	r7, sp, #0
 3603              		.cfi_offset 7, -4
 3604              	.LCFI155:
 3605              		.cfi_def_cfa_register 7
 3606 0006 7860     		str	r0, [r7, #4]
1945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3607              		.loc 1 1946 0
 3608 0008 7B68     		ldr	r3, [r7, #4]
 3609 000a 4FF00002 		mov	r2, #0
 3610 000e 1A80     		strh	r2, [r3, #0]	@ movhi
1947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3611              		.loc 1 1947 0
 3612 0010 7B68     		ldr	r3, [r7, #4]
 3613 0012 4FF00002 		mov	r2, #0
 3614 0016 5A80     		strh	r2, [r3, #2]	@ movhi
1948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3615              		.loc 1 1948 0
 3616 0018 7B68     		ldr	r3, [r7, #4]
 3617 001a 4FF00102 		mov	r2, #1
 3618 001e 9A80     		strh	r2, [r3, #4]	@ movhi
1949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3619              		.loc 1 1949 0
 3620 0020 7B68     		ldr	r3, [r7, #4]
 3621 0022 4FF00002 		mov	r2, #0
 3622 0026 DA80     		strh	r2, [r3, #6]	@ movhi
1950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3623              		.loc 1 1950 0
 3624 0028 7B68     		ldr	r3, [r7, #4]
 3625 002a 4FF00002 		mov	r2, #0
 3626 002e 1A81     		strh	r2, [r3, #8]	@ movhi
1951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3627              		.loc 1 1951 0
 3628 0030 07F10C07 		add	r7, r7, #12
 3629 0034 BD46     		mov	sp, r7
 3630 0036 80BC     		pop	{r7}
 3631 0038 7047     		bx	lr
 3632              		.cfi_endproc
 3633              	.LFE161:
 3635 003a 00BF     		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3636              		.align	2
 3637              		.global	TIM_PWMIConfig
 3638              		.thumb
 3639              		.thumb_func
 3641              	TIM_PWMIConfig:
 3642              	.LFB162:
1952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3643              		.loc 1 1963 0
 3644              		.cfi_startproc
 3645              		@ args = 0, pretend = 0, frame = 16
 3646              		@ frame_needed = 1, uses_anonymous_args = 0
 3647 0000 80B5     		push	{r7, lr}
 3648              	.LCFI156:
 3649              		.cfi_def_cfa_offset 8
 3650 0002 84B0     		sub	sp, sp, #16
 3651              	.LCFI157:
 3652              		.cfi_def_cfa_offset 24
 3653 0004 00AF     		add	r7, sp, #0
 3654              		.cfi_offset 14, -4
 3655              		.cfi_offset 7, -8
 3656              	.LCFI158:
 3657              		.cfi_def_cfa_register 7
 3658 0006 7860     		str	r0, [r7, #4]
 3659 0008 3960     		str	r1, [r7, #0]
1964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3660              		.loc 1 1964 0
 3661 000a 4FF00003 		mov	r3, #0
 3662 000e FB81     		strh	r3, [r7, #14]	@ movhi
1965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3663              		.loc 1 1965 0
 3664 0010 4FF00103 		mov	r3, #1
 3665 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3666              		.loc 1 1971 0
 3667 0016 3B68     		ldr	r3, [r7, #0]
 3668 0018 5B88     		ldrh	r3, [r3, #2]
 3669 001a 002B     		cmp	r3, #0
 3670 001c 03D1     		bne	.L108
1972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3671              		.loc 1 1973 0
 3672 001e 4FF00203 		mov	r3, #2
 3673 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 3674 0024 02E0     		b	.L109
 3675              	.L108:
1974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3676              		.loc 1 1977 0
 3677 0026 4FF00003 		mov	r3, #0
 3678 002a FB81     		strh	r3, [r7, #14]	@ movhi
 3679              	.L109:
1978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3680              		.loc 1 1980 0
 3681 002c 3B68     		ldr	r3, [r7, #0]
 3682 002e 9B88     		ldrh	r3, [r3, #4]
 3683 0030 012B     		cmp	r3, #1
 3684 0032 03D1     		bne	.L110
1981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3685              		.loc 1 1982 0
 3686 0034 4FF00203 		mov	r3, #2
 3687 0038 BB81     		strh	r3, [r7, #12]	@ movhi
 3688 003a 02E0     		b	.L111
 3689              	.L110:
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3690              		.loc 1 1986 0
 3691 003c 4FF00103 		mov	r3, #1
 3692 0040 BB81     		strh	r3, [r7, #12]	@ movhi
 3693              	.L111:
1987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3694              		.loc 1 1988 0
 3695 0042 3B68     		ldr	r3, [r7, #0]
 3696 0044 1B88     		ldrh	r3, [r3, #0]
 3697 0046 002B     		cmp	r3, #0
 3698 0048 1CD1     		bne	.L112
1989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3699              		.loc 1 1991 0
 3700 004a 3B68     		ldr	r3, [r7, #0]
 3701 004c 5988     		ldrh	r1, [r3, #2]
 3702 004e 3B68     		ldr	r3, [r7, #0]
 3703 0050 9A88     		ldrh	r2, [r3, #4]
1992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3704              		.loc 1 1992 0
 3705 0052 3B68     		ldr	r3, [r7, #0]
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3706              		.loc 1 1991 0
 3707 0054 1B89     		ldrh	r3, [r3, #8]
 3708 0056 7868     		ldr	r0, [r7, #4]
 3709 0058 FFF7FEFF 		bl	TI1_Config
1993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3710              		.loc 1 1994 0
 3711 005c 3B68     		ldr	r3, [r7, #0]
 3712 005e DB88     		ldrh	r3, [r3, #6]
 3713 0060 7868     		ldr	r0, [r7, #4]
 3714 0062 1946     		mov	r1, r3
 3715 0064 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3716              		.loc 1 1996 0
 3717 0068 3B68     		ldr	r3, [r7, #0]
 3718 006a 1B89     		ldrh	r3, [r3, #8]
 3719 006c F989     		ldrh	r1, [r7, #14]
 3720 006e BA89     		ldrh	r2, [r7, #12]
 3721 0070 7868     		ldr	r0, [r7, #4]
 3722 0072 FFF7FEFF 		bl	TI2_Config
1997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3723              		.loc 1 1998 0
 3724 0076 3B68     		ldr	r3, [r7, #0]
 3725 0078 DB88     		ldrh	r3, [r3, #6]
 3726 007a 7868     		ldr	r0, [r7, #4]
 3727 007c 1946     		mov	r1, r3
 3728 007e FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3729 0082 1BE0     		b	.L107
 3730              	.L112:
1999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3731              		.loc 1 2003 0
 3732 0084 3B68     		ldr	r3, [r7, #0]
 3733 0086 5988     		ldrh	r1, [r3, #2]
 3734 0088 3B68     		ldr	r3, [r7, #0]
 3735 008a 9A88     		ldrh	r2, [r3, #4]
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3736              		.loc 1 2004 0
 3737 008c 3B68     		ldr	r3, [r7, #0]
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3738              		.loc 1 2003 0
 3739 008e 1B89     		ldrh	r3, [r3, #8]
 3740 0090 7868     		ldr	r0, [r7, #4]
 3741 0092 FFF7FEFF 		bl	TI2_Config
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3742              		.loc 1 2006 0
 3743 0096 3B68     		ldr	r3, [r7, #0]
 3744 0098 DB88     		ldrh	r3, [r3, #6]
 3745 009a 7868     		ldr	r0, [r7, #4]
 3746 009c 1946     		mov	r1, r3
 3747 009e FFF7FEFF 		bl	TIM_SetIC2Prescaler
2007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3748              		.loc 1 2008 0
 3749 00a2 3B68     		ldr	r3, [r7, #0]
 3750 00a4 1B89     		ldrh	r3, [r3, #8]
 3751 00a6 F989     		ldrh	r1, [r7, #14]
 3752 00a8 BA89     		ldrh	r2, [r7, #12]
 3753 00aa 7868     		ldr	r0, [r7, #4]
 3754 00ac FFF7FEFF 		bl	TI1_Config
2009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3755              		.loc 1 2010 0
 3756 00b0 3B68     		ldr	r3, [r7, #0]
 3757 00b2 DB88     		ldrh	r3, [r3, #6]
 3758 00b4 7868     		ldr	r0, [r7, #4]
 3759 00b6 1946     		mov	r1, r3
 3760 00b8 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3761              	.L107:
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3762              		.loc 1 2012 0
 3763 00bc 07F11007 		add	r7, r7, #16
 3764 00c0 BD46     		mov	sp, r7
 3765 00c2 80BD     		pop	{r7, pc}
 3766              		.cfi_endproc
 3767              	.LFE162:
 3769              		.section	.text.TIM_GetCapture1,"ax",%progbits
 3770              		.align	2
 3771              		.global	TIM_GetCapture1
 3772              		.thumb
 3773              		.thumb_func
 3775              	TIM_GetCapture1:
 3776              	.LFB163:
2013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3777              		.loc 1 2020 0
 3778              		.cfi_startproc
 3779              		@ args = 0, pretend = 0, frame = 8
 3780              		@ frame_needed = 1, uses_anonymous_args = 0
 3781              		@ link register save eliminated.
 3782 0000 80B4     		push	{r7}
 3783              	.LCFI159:
 3784              		.cfi_def_cfa_offset 4
 3785 0002 83B0     		sub	sp, sp, #12
 3786              	.LCFI160:
 3787              		.cfi_def_cfa_offset 16
 3788 0004 00AF     		add	r7, sp, #0
 3789              		.cfi_offset 7, -4
 3790              	.LCFI161:
 3791              		.cfi_def_cfa_register 7
 3792 0006 7860     		str	r0, [r7, #4]
2021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 3793              		.loc 1 2025 0
 3794 0008 7B68     		ldr	r3, [r7, #4]
 3795 000a 5B6B     		ldr	r3, [r3, #52]
2026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3796              		.loc 1 2026 0
 3797 000c 1846     		mov	r0, r3
 3798 000e 07F10C07 		add	r7, r7, #12
 3799 0012 BD46     		mov	sp, r7
 3800 0014 80BC     		pop	{r7}
 3801 0016 7047     		bx	lr
 3802              		.cfi_endproc
 3803              	.LFE163:
 3805              		.section	.text.TIM_GetCapture2,"ax",%progbits
 3806              		.align	2
 3807              		.global	TIM_GetCapture2
 3808              		.thumb
 3809              		.thumb_func
 3811              	TIM_GetCapture2:
 3812              	.LFB164:
2027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3813              		.loc 1 2035 0
 3814              		.cfi_startproc
 3815              		@ args = 0, pretend = 0, frame = 8
 3816              		@ frame_needed = 1, uses_anonymous_args = 0
 3817              		@ link register save eliminated.
 3818 0000 80B4     		push	{r7}
 3819              	.LCFI162:
 3820              		.cfi_def_cfa_offset 4
 3821 0002 83B0     		sub	sp, sp, #12
 3822              	.LCFI163:
 3823              		.cfi_def_cfa_offset 16
 3824 0004 00AF     		add	r7, sp, #0
 3825              		.cfi_offset 7, -4
 3826              	.LCFI164:
 3827              		.cfi_def_cfa_register 7
 3828 0006 7860     		str	r0, [r7, #4]
2036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 3829              		.loc 1 2040 0
 3830 0008 7B68     		ldr	r3, [r7, #4]
 3831 000a 9B6B     		ldr	r3, [r3, #56]
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3832              		.loc 1 2041 0
 3833 000c 1846     		mov	r0, r3
 3834 000e 07F10C07 		add	r7, r7, #12
 3835 0012 BD46     		mov	sp, r7
 3836 0014 80BC     		pop	{r7}
 3837 0016 7047     		bx	lr
 3838              		.cfi_endproc
 3839              	.LFE164:
 3841              		.section	.text.TIM_GetCapture3,"ax",%progbits
 3842              		.align	2
 3843              		.global	TIM_GetCapture3
 3844              		.thumb
 3845              		.thumb_func
 3847              	TIM_GetCapture3:
 3848              	.LFB165:
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3849              		.loc 1 2049 0
 3850              		.cfi_startproc
 3851              		@ args = 0, pretend = 0, frame = 8
 3852              		@ frame_needed = 1, uses_anonymous_args = 0
 3853              		@ link register save eliminated.
 3854 0000 80B4     		push	{r7}
 3855              	.LCFI165:
 3856              		.cfi_def_cfa_offset 4
 3857 0002 83B0     		sub	sp, sp, #12
 3858              	.LCFI166:
 3859              		.cfi_def_cfa_offset 16
 3860 0004 00AF     		add	r7, sp, #0
 3861              		.cfi_offset 7, -4
 3862              	.LCFI167:
 3863              		.cfi_def_cfa_register 7
 3864 0006 7860     		str	r0, [r7, #4]
2050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 3865              		.loc 1 2054 0
 3866 0008 7B68     		ldr	r3, [r7, #4]
 3867 000a DB6B     		ldr	r3, [r3, #60]
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3868              		.loc 1 2055 0
 3869 000c 1846     		mov	r0, r3
 3870 000e 07F10C07 		add	r7, r7, #12
 3871 0012 BD46     		mov	sp, r7
 3872 0014 80BC     		pop	{r7}
 3873 0016 7047     		bx	lr
 3874              		.cfi_endproc
 3875              	.LFE165:
 3877              		.section	.text.TIM_GetCapture4,"ax",%progbits
 3878              		.align	2
 3879              		.global	TIM_GetCapture4
 3880              		.thumb
 3881              		.thumb_func
 3883              	TIM_GetCapture4:
 3884              	.LFB166:
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3885              		.loc 1 2063 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 8
 3888              		@ frame_needed = 1, uses_anonymous_args = 0
 3889              		@ link register save eliminated.
 3890 0000 80B4     		push	{r7}
 3891              	.LCFI168:
 3892              		.cfi_def_cfa_offset 4
 3893 0002 83B0     		sub	sp, sp, #12
 3894              	.LCFI169:
 3895              		.cfi_def_cfa_offset 16
 3896 0004 00AF     		add	r7, sp, #0
 3897              		.cfi_offset 7, -4
 3898              	.LCFI170:
 3899              		.cfi_def_cfa_register 7
 3900 0006 7860     		str	r0, [r7, #4]
2064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 3901              		.loc 1 2068 0
 3902 0008 7B68     		ldr	r3, [r7, #4]
 3903 000a 1B6C     		ldr	r3, [r3, #64]
2069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3904              		.loc 1 2069 0
 3905 000c 1846     		mov	r0, r3
 3906 000e 07F10C07 		add	r7, r7, #12
 3907 0012 BD46     		mov	sp, r7
 3908 0014 80BC     		pop	{r7}
 3909 0016 7047     		bx	lr
 3910              		.cfi_endproc
 3911              	.LFE166:
 3913              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3914              		.align	2
 3915              		.global	TIM_SetIC1Prescaler
 3916              		.thumb
 3917              		.thumb_func
 3919              	TIM_SetIC1Prescaler:
 3920              	.LFB167:
2070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3921              		.loc 1 2083 0
 3922              		.cfi_startproc
 3923              		@ args = 0, pretend = 0, frame = 8
 3924              		@ frame_needed = 1, uses_anonymous_args = 0
 3925              		@ link register save eliminated.
 3926 0000 80B4     		push	{r7}
 3927              	.LCFI171:
 3928              		.cfi_def_cfa_offset 4
 3929 0002 83B0     		sub	sp, sp, #12
 3930              	.LCFI172:
 3931              		.cfi_def_cfa_offset 16
 3932 0004 00AF     		add	r7, sp, #0
 3933              		.cfi_offset 7, -4
 3934              	.LCFI173:
 3935              		.cfi_def_cfa_register 7
 3936 0006 7860     		str	r0, [r7, #4]
 3937 0008 0B46     		mov	r3, r1
 3938 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3939              		.loc 1 2089 0
 3940 000c 7B68     		ldr	r3, [r7, #4]
 3941 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3942 0010 9BB2     		uxth	r3, r3
 3943 0012 23F00C03 		bic	r3, r3, #12
 3944 0016 9AB2     		uxth	r2, r3
 3945 0018 7B68     		ldr	r3, [r7, #4]
 3946 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3947              		.loc 1 2092 0
 3948 001c 7B68     		ldr	r3, [r7, #4]
 3949 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3950 0020 9AB2     		uxth	r2, r3
 3951 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3952 0024 42EA0303 		orr	r3, r2, r3
 3953 0028 9AB2     		uxth	r2, r3
 3954 002a 7B68     		ldr	r3, [r7, #4]
 3955 002c 1A83     		strh	r2, [r3, #24]	@ movhi
2093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3956              		.loc 1 2093 0
 3957 002e 07F10C07 		add	r7, r7, #12
 3958 0032 BD46     		mov	sp, r7
 3959 0034 80BC     		pop	{r7}
 3960 0036 7047     		bx	lr
 3961              		.cfi_endproc
 3962              	.LFE167:
 3964              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3965              		.align	2
 3966              		.global	TIM_SetIC2Prescaler
 3967              		.thumb
 3968              		.thumb_func
 3970              	TIM_SetIC2Prescaler:
 3971              	.LFB168:
2094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3972              		.loc 1 2108 0
 3973              		.cfi_startproc
 3974              		@ args = 0, pretend = 0, frame = 8
 3975              		@ frame_needed = 1, uses_anonymous_args = 0
 3976              		@ link register save eliminated.
 3977 0000 80B4     		push	{r7}
 3978              	.LCFI174:
 3979              		.cfi_def_cfa_offset 4
 3980 0002 83B0     		sub	sp, sp, #12
 3981              	.LCFI175:
 3982              		.cfi_def_cfa_offset 16
 3983 0004 00AF     		add	r7, sp, #0
 3984              		.cfi_offset 7, -4
 3985              	.LCFI176:
 3986              		.cfi_def_cfa_register 7
 3987 0006 7860     		str	r0, [r7, #4]
 3988 0008 0B46     		mov	r3, r1
 3989 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 3990              		.loc 1 2114 0
 3991 000c 7B68     		ldr	r3, [r7, #4]
 3992 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3993 0010 9BB2     		uxth	r3, r3
 3994 0012 23F44063 		bic	r3, r3, #3072
 3995 0016 9AB2     		uxth	r2, r3
 3996 0018 7B68     		ldr	r3, [r7, #4]
 3997 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 3998              		.loc 1 2117 0
 3999 001c 7B68     		ldr	r3, [r7, #4]
 4000 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4001 0020 9AB2     		uxth	r2, r3
 4002 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4003 0024 4FEA0323 		lsl	r3, r3, #8
 4004 0028 9BB2     		uxth	r3, r3
 4005 002a 42EA0303 		orr	r3, r2, r3
 4006 002e 9AB2     		uxth	r2, r3
 4007 0030 7B68     		ldr	r3, [r7, #4]
 4008 0032 1A83     		strh	r2, [r3, #24]	@ movhi
2118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4009              		.loc 1 2118 0
 4010 0034 07F10C07 		add	r7, r7, #12
 4011 0038 BD46     		mov	sp, r7
 4012 003a 80BC     		pop	{r7}
 4013 003c 7047     		bx	lr
 4014              		.cfi_endproc
 4015              	.LFE168:
 4017 003e 00BF     		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 4018              		.align	2
 4019              		.global	TIM_SetIC3Prescaler
 4020              		.thumb
 4021              		.thumb_func
 4023              	TIM_SetIC3Prescaler:
 4024              	.LFB169:
2119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4025              		.loc 1 2132 0
 4026              		.cfi_startproc
 4027              		@ args = 0, pretend = 0, frame = 8
 4028              		@ frame_needed = 1, uses_anonymous_args = 0
 4029              		@ link register save eliminated.
 4030 0000 80B4     		push	{r7}
 4031              	.LCFI177:
 4032              		.cfi_def_cfa_offset 4
 4033 0002 83B0     		sub	sp, sp, #12
 4034              	.LCFI178:
 4035              		.cfi_def_cfa_offset 16
 4036 0004 00AF     		add	r7, sp, #0
 4037              		.cfi_offset 7, -4
 4038              	.LCFI179:
 4039              		.cfi_def_cfa_register 7
 4040 0006 7860     		str	r0, [r7, #4]
 4041 0008 0B46     		mov	r3, r1
 4042 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 4043              		.loc 1 2138 0
 4044 000c 7B68     		ldr	r3, [r7, #4]
 4045 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4046 0010 9BB2     		uxth	r3, r3
 4047 0012 23F00C03 		bic	r3, r3, #12
 4048 0016 9AB2     		uxth	r2, r3
 4049 0018 7B68     		ldr	r3, [r7, #4]
 4050 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 4051              		.loc 1 2141 0
 4052 001c 7B68     		ldr	r3, [r7, #4]
 4053 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4054 0020 9AB2     		uxth	r2, r3
 4055 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4056 0024 42EA0303 		orr	r3, r2, r3
 4057 0028 9AB2     		uxth	r2, r3
 4058 002a 7B68     		ldr	r3, [r7, #4]
 4059 002c 9A83     		strh	r2, [r3, #28]	@ movhi
2142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4060              		.loc 1 2142 0
 4061 002e 07F10C07 		add	r7, r7, #12
 4062 0032 BD46     		mov	sp, r7
 4063 0034 80BC     		pop	{r7}
 4064 0036 7047     		bx	lr
 4065              		.cfi_endproc
 4066              	.LFE169:
 4068              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 4069              		.align	2
 4070              		.global	TIM_SetIC4Prescaler
 4071              		.thumb
 4072              		.thumb_func
 4074              	TIM_SetIC4Prescaler:
 4075              	.LFB170:
2143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4076              		.loc 1 2156 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 8
 4079              		@ frame_needed = 1, uses_anonymous_args = 0
 4080              		@ link register save eliminated.
 4081 0000 80B4     		push	{r7}
 4082              	.LCFI180:
 4083              		.cfi_def_cfa_offset 4
 4084 0002 83B0     		sub	sp, sp, #12
 4085              	.LCFI181:
 4086              		.cfi_def_cfa_offset 16
 4087 0004 00AF     		add	r7, sp, #0
 4088              		.cfi_offset 7, -4
 4089              	.LCFI182:
 4090              		.cfi_def_cfa_register 7
 4091 0006 7860     		str	r0, [r7, #4]
 4092 0008 0B46     		mov	r3, r1
 4093 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4094              		.loc 1 2162 0
 4095 000c 7B68     		ldr	r3, [r7, #4]
 4096 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4097 0010 9BB2     		uxth	r3, r3
 4098 0012 23F44063 		bic	r3, r3, #3072
 4099 0016 9AB2     		uxth	r2, r3
 4100 0018 7B68     		ldr	r3, [r7, #4]
 4101 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4102              		.loc 1 2165 0
 4103 001c 7B68     		ldr	r3, [r7, #4]
 4104 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4105 0020 9AB2     		uxth	r2, r3
 4106 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4107 0024 4FEA0323 		lsl	r3, r3, #8
 4108 0028 9BB2     		uxth	r3, r3
 4109 002a 42EA0303 		orr	r3, r2, r3
 4110 002e 9AB2     		uxth	r2, r3
 4111 0030 7B68     		ldr	r3, [r7, #4]
 4112 0032 9A83     		strh	r2, [r3, #28]	@ movhi
2166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4113              		.loc 1 2166 0
 4114 0034 07F10C07 		add	r7, r7, #12
 4115 0038 BD46     		mov	sp, r7
 4116 003a 80BC     		pop	{r7}
 4117 003c 7047     		bx	lr
 4118              		.cfi_endproc
 4119              	.LFE170:
 4121 003e 00BF     		.section	.text.TIM_BDTRConfig,"ax",%progbits
 4122              		.align	2
 4123              		.global	TIM_BDTRConfig
 4124              		.thumb
 4125              		.thumb_func
 4127              	TIM_BDTRConfig:
 4128              	.LFB171:
2167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4129              		.loc 1 2209 0
 4130              		.cfi_startproc
 4131              		@ args = 0, pretend = 0, frame = 8
 4132              		@ frame_needed = 1, uses_anonymous_args = 0
 4133              		@ link register save eliminated.
 4134 0000 80B4     		push	{r7}
 4135              	.LCFI183:
 4136              		.cfi_def_cfa_offset 4
 4137 0002 83B0     		sub	sp, sp, #12
 4138              	.LCFI184:
 4139              		.cfi_def_cfa_offset 16
 4140 0004 00AF     		add	r7, sp, #0
 4141              		.cfi_offset 7, -4
 4142              	.LCFI185:
 4143              		.cfi_def_cfa_register 7
 4144 0006 7860     		str	r0, [r7, #4]
 4145 0008 3960     		str	r1, [r7, #0]
2210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4146              		.loc 1 2221 0
 4147 000a 3B68     		ldr	r3, [r7, #0]
 4148 000c 1A88     		ldrh	r2, [r3, #0]
 4149 000e 3B68     		ldr	r3, [r7, #0]
 4150 0010 5B88     		ldrh	r3, [r3, #2]
 4151 0012 42EA0303 		orr	r3, r2, r3
 4152 0016 9AB2     		uxth	r2, r3
2222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4153              		.loc 1 2222 0
 4154 0018 3B68     		ldr	r3, [r7, #0]
 4155 001a 9B88     		ldrh	r3, [r3, #4]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4156              		.loc 1 2221 0
 4157 001c 42EA0303 		orr	r3, r2, r3
 4158 0020 9AB2     		uxth	r2, r3
 4159              		.loc 1 2222 0
 4160 0022 3B68     		ldr	r3, [r7, #0]
 4161 0024 DB88     		ldrh	r3, [r3, #6]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4162              		.loc 1 2221 0
 4163 0026 42EA0303 		orr	r3, r2, r3
 4164 002a 9AB2     		uxth	r2, r3
2223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4165              		.loc 1 2223 0
 4166 002c 3B68     		ldr	r3, [r7, #0]
 4167 002e 1B89     		ldrh	r3, [r3, #8]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4168              		.loc 1 2221 0
 4169 0030 42EA0303 		orr	r3, r2, r3
 4170 0034 9AB2     		uxth	r2, r3
 4171              		.loc 1 2223 0
 4172 0036 3B68     		ldr	r3, [r7, #0]
 4173 0038 5B89     		ldrh	r3, [r3, #10]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4174              		.loc 1 2221 0
 4175 003a 42EA0303 		orr	r3, r2, r3
 4176 003e 9AB2     		uxth	r2, r3
2224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4177              		.loc 1 2224 0
 4178 0040 3B68     		ldr	r3, [r7, #0]
 4179 0042 9B89     		ldrh	r3, [r3, #12]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4180              		.loc 1 2221 0
 4181 0044 42EA0303 		orr	r3, r2, r3
 4182 0048 9AB2     		uxth	r2, r3
 4183 004a 7B68     		ldr	r3, [r7, #4]
 4184 004c A3F84420 		strh	r2, [r3, #68]	@ movhi
2225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4185              		.loc 1 2225 0
 4186 0050 07F10C07 		add	r7, r7, #12
 4187 0054 BD46     		mov	sp, r7
 4188 0056 80BC     		pop	{r7}
 4189 0058 7047     		bx	lr
 4190              		.cfi_endproc
 4191              	.LFE171:
 4193 005a 00BF     		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 4194              		.align	2
 4195              		.global	TIM_BDTRStructInit
 4196              		.thumb
 4197              		.thumb_func
 4199              	TIM_BDTRStructInit:
 4200              	.LFB172:
2226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4201              		.loc 1 2234 0
 4202              		.cfi_startproc
 4203              		@ args = 0, pretend = 0, frame = 8
 4204              		@ frame_needed = 1, uses_anonymous_args = 0
 4205              		@ link register save eliminated.
 4206 0000 80B4     		push	{r7}
 4207              	.LCFI186:
 4208              		.cfi_def_cfa_offset 4
 4209 0002 83B0     		sub	sp, sp, #12
 4210              	.LCFI187:
 4211              		.cfi_def_cfa_offset 16
 4212 0004 00AF     		add	r7, sp, #0
 4213              		.cfi_offset 7, -4
 4214              	.LCFI188:
 4215              		.cfi_def_cfa_register 7
 4216 0006 7860     		str	r0, [r7, #4]
2235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4217              		.loc 1 2236 0
 4218 0008 7B68     		ldr	r3, [r7, #4]
 4219 000a 4FF00002 		mov	r2, #0
 4220 000e 1A80     		strh	r2, [r3, #0]	@ movhi
2237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4221              		.loc 1 2237 0
 4222 0010 7B68     		ldr	r3, [r7, #4]
 4223 0012 4FF00002 		mov	r2, #0
 4224 0016 5A80     		strh	r2, [r3, #2]	@ movhi
2238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4225              		.loc 1 2238 0
 4226 0018 7B68     		ldr	r3, [r7, #4]
 4227 001a 4FF00002 		mov	r2, #0
 4228 001e 9A80     		strh	r2, [r3, #4]	@ movhi
2239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4229              		.loc 1 2239 0
 4230 0020 7B68     		ldr	r3, [r7, #4]
 4231 0022 4FF00002 		mov	r2, #0
 4232 0026 DA80     		strh	r2, [r3, #6]	@ movhi
2240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4233              		.loc 1 2240 0
 4234 0028 7B68     		ldr	r3, [r7, #4]
 4235 002a 4FF00002 		mov	r2, #0
 4236 002e 1A81     		strh	r2, [r3, #8]	@ movhi
2241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4237              		.loc 1 2241 0
 4238 0030 7B68     		ldr	r3, [r7, #4]
 4239 0032 4FF00002 		mov	r2, #0
 4240 0036 5A81     		strh	r2, [r3, #10]	@ movhi
2242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4241              		.loc 1 2242 0
 4242 0038 7B68     		ldr	r3, [r7, #4]
 4243 003a 4FF00002 		mov	r2, #0
 4244 003e 9A81     		strh	r2, [r3, #12]	@ movhi
2243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4245              		.loc 1 2243 0
 4246 0040 07F10C07 		add	r7, r7, #12
 4247 0044 BD46     		mov	sp, r7
 4248 0046 80BC     		pop	{r7}
 4249 0048 7047     		bx	lr
 4250              		.cfi_endproc
 4251              	.LFE172:
 4253 004a 00BF     		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 4254              		.align	2
 4255              		.global	TIM_CtrlPWMOutputs
 4256              		.thumb
 4257              		.thumb_func
 4259              	TIM_CtrlPWMOutputs:
 4260              	.LFB173:
2244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4261              		.loc 1 2253 0
 4262              		.cfi_startproc
 4263              		@ args = 0, pretend = 0, frame = 8
 4264              		@ frame_needed = 1, uses_anonymous_args = 0
 4265              		@ link register save eliminated.
 4266 0000 80B4     		push	{r7}
 4267              	.LCFI189:
 4268              		.cfi_def_cfa_offset 4
 4269 0002 83B0     		sub	sp, sp, #12
 4270              	.LCFI190:
 4271              		.cfi_def_cfa_offset 16
 4272 0004 00AF     		add	r7, sp, #0
 4273              		.cfi_offset 7, -4
 4274              	.LCFI191:
 4275              		.cfi_def_cfa_register 7
 4276 0006 7860     		str	r0, [r7, #4]
 4277 0008 0B46     		mov	r3, r1
 4278 000a FB70     		strb	r3, [r7, #3]
2254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4279              		.loc 1 2258 0
 4280 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4281 000e 002B     		cmp	r3, #0
 4282 0010 0CD0     		beq	.L125
2259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4283              		.loc 1 2261 0
 4284 0012 7B68     		ldr	r3, [r7, #4]
 4285 0014 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4286 0018 9BB2     		uxth	r3, r3
 4287 001a 6FEA4343 		mvn	r3, r3, lsl #17
 4288 001e 6FEA5343 		mvn	r3, r3, lsr #17
 4289 0022 9AB2     		uxth	r2, r3
 4290 0024 7B68     		ldr	r3, [r7, #4]
 4291 0026 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4292 002a 0BE0     		b	.L124
 4293              	.L125:
2262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4294              		.loc 1 2266 0
 4295 002c 7B68     		ldr	r3, [r7, #4]
 4296 002e B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4297 0032 9BB2     		uxth	r3, r3
 4298 0034 4FEA4343 		lsl	r3, r3, #17
 4299 0038 4FEA5343 		lsr	r3, r3, #17
 4300 003c 9AB2     		uxth	r2, r3
 4301 003e 7B68     		ldr	r3, [r7, #4]
 4302 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4303              	.L124:
2267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4304              		.loc 1 2268 0
 4305 0044 07F10C07 		add	r7, r7, #12
 4306 0048 BD46     		mov	sp, r7
 4307 004a 80BC     		pop	{r7}
 4308 004c 7047     		bx	lr
 4309              		.cfi_endproc
 4310              	.LFE173:
 4312 004e 00BF     		.section	.text.TIM_SelectCOM,"ax",%progbits
 4313              		.align	2
 4314              		.global	TIM_SelectCOM
 4315              		.thumb
 4316              		.thumb_func
 4318              	TIM_SelectCOM:
 4319              	.LFB174:
2269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4320              		.loc 1 2278 0
 4321              		.cfi_startproc
 4322              		@ args = 0, pretend = 0, frame = 8
 4323              		@ frame_needed = 1, uses_anonymous_args = 0
 4324              		@ link register save eliminated.
 4325 0000 80B4     		push	{r7}
 4326              	.LCFI192:
 4327              		.cfi_def_cfa_offset 4
 4328 0002 83B0     		sub	sp, sp, #12
 4329              	.LCFI193:
 4330              		.cfi_def_cfa_offset 16
 4331 0004 00AF     		add	r7, sp, #0
 4332              		.cfi_offset 7, -4
 4333              	.LCFI194:
 4334              		.cfi_def_cfa_register 7
 4335 0006 7860     		str	r0, [r7, #4]
 4336 0008 0B46     		mov	r3, r1
 4337 000a FB70     		strb	r3, [r7, #3]
2279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4338              		.loc 1 2283 0
 4339 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4340 000e 002B     		cmp	r3, #0
 4341 0010 08D0     		beq	.L128
2284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4342              		.loc 1 2286 0
 4343 0012 7B68     		ldr	r3, [r7, #4]
 4344 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4345 0016 9BB2     		uxth	r3, r3
 4346 0018 43F00403 		orr	r3, r3, #4
 4347 001c 9AB2     		uxth	r2, r3
 4348 001e 7B68     		ldr	r3, [r7, #4]
 4349 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4350 0022 07E0     		b	.L127
 4351              	.L128:
2287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4352              		.loc 1 2291 0
 4353 0024 7B68     		ldr	r3, [r7, #4]
 4354 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4355 0028 9BB2     		uxth	r3, r3
 4356 002a 23F00403 		bic	r3, r3, #4
 4357 002e 9AB2     		uxth	r2, r3
 4358 0030 7B68     		ldr	r3, [r7, #4]
 4359 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4360              	.L127:
2292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4361              		.loc 1 2293 0
 4362 0034 07F10C07 		add	r7, r7, #12
 4363 0038 BD46     		mov	sp, r7
 4364 003a 80BC     		pop	{r7}
 4365 003c 7047     		bx	lr
 4366              		.cfi_endproc
 4367              	.LFE174:
 4369 003e 00BF     		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 4370              		.align	2
 4371              		.global	TIM_CCPreloadControl
 4372              		.thumb
 4373              		.thumb_func
 4375              	TIM_CCPreloadControl:
 4376              	.LFB175:
2294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4377              		.loc 1 2303 0
 4378              		.cfi_startproc
 4379              		@ args = 0, pretend = 0, frame = 8
 4380              		@ frame_needed = 1, uses_anonymous_args = 0
 4381              		@ link register save eliminated.
 4382 0000 80B4     		push	{r7}
 4383              	.LCFI195:
 4384              		.cfi_def_cfa_offset 4
 4385 0002 83B0     		sub	sp, sp, #12
 4386              	.LCFI196:
 4387              		.cfi_def_cfa_offset 16
 4388 0004 00AF     		add	r7, sp, #0
 4389              		.cfi_offset 7, -4
 4390              	.LCFI197:
 4391              		.cfi_def_cfa_register 7
 4392 0006 7860     		str	r0, [r7, #4]
 4393 0008 0B46     		mov	r3, r1
 4394 000a FB70     		strb	r3, [r7, #3]
2304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4395              		.loc 1 2307 0
 4396 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4397 000e 002B     		cmp	r3, #0
 4398 0010 08D0     		beq	.L131
2308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4399              		.loc 1 2310 0
 4400 0012 7B68     		ldr	r3, [r7, #4]
 4401 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4402 0016 9BB2     		uxth	r3, r3
 4403 0018 43F00103 		orr	r3, r3, #1
 4404 001c 9AB2     		uxth	r2, r3
 4405 001e 7B68     		ldr	r3, [r7, #4]
 4406 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4407 0022 07E0     		b	.L130
 4408              	.L131:
2311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4409              		.loc 1 2315 0
 4410 0024 7B68     		ldr	r3, [r7, #4]
 4411 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4412 0028 9BB2     		uxth	r3, r3
 4413 002a 23F00103 		bic	r3, r3, #1
 4414 002e 9AB2     		uxth	r2, r3
 4415 0030 7B68     		ldr	r3, [r7, #4]
 4416 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4417              	.L130:
2316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4418              		.loc 1 2317 0
 4419 0034 07F10C07 		add	r7, r7, #12
 4420 0038 BD46     		mov	sp, r7
 4421 003a 80BC     		pop	{r7}
 4422 003c 7047     		bx	lr
 4423              		.cfi_endproc
 4424              	.LFE175:
 4426 003e 00BF     		.section	.text.TIM_ITConfig,"ax",%progbits
 4427              		.align	2
 4428              		.global	TIM_ITConfig
 4429              		.thumb
 4430              		.thumb_func
 4432              	TIM_ITConfig:
 4433              	.LFB176:
2318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4434              		.loc 1 2360 0
 4435              		.cfi_startproc
 4436              		@ args = 0, pretend = 0, frame = 8
 4437              		@ frame_needed = 1, uses_anonymous_args = 0
 4438              		@ link register save eliminated.
 4439 0000 80B4     		push	{r7}
 4440              	.LCFI198:
 4441              		.cfi_def_cfa_offset 4
 4442 0002 83B0     		sub	sp, sp, #12
 4443              	.LCFI199:
 4444              		.cfi_def_cfa_offset 16
 4445 0004 00AF     		add	r7, sp, #0
 4446              		.cfi_offset 7, -4
 4447              	.LCFI200:
 4448              		.cfi_def_cfa_register 7
 4449 0006 7860     		str	r0, [r7, #4]
 4450 0008 1346     		mov	r3, r2
 4451 000a 0A46     		mov	r2, r1	@ movhi
 4452 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4453 000e 7B70     		strb	r3, [r7, #1]
2361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4454              		.loc 1 2366 0
 4455 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4456 0012 002B     		cmp	r3, #0
 4457 0014 09D0     		beq	.L134
2367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4458              		.loc 1 2369 0
 4459 0016 7B68     		ldr	r3, [r7, #4]
 4460 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4461 001a 9AB2     		uxth	r2, r3
 4462 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4463 001e 42EA0303 		orr	r3, r2, r3
 4464 0022 9AB2     		uxth	r2, r3
 4465 0024 7B68     		ldr	r3, [r7, #4]
 4466 0026 9A81     		strh	r2, [r3, #12]	@ movhi
 4467 0028 0BE0     		b	.L133
 4468              	.L134:
2370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4469              		.loc 1 2374 0
 4470 002a 7B68     		ldr	r3, [r7, #4]
 4471 002c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4472 002e 9AB2     		uxth	r2, r3
 4473 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4474 0032 6FEA0303 		mvn	r3, r3
 4475 0036 9BB2     		uxth	r3, r3
 4476 0038 02EA0303 		and	r3, r2, r3
 4477 003c 9AB2     		uxth	r2, r3
 4478 003e 7B68     		ldr	r3, [r7, #4]
 4479 0040 9A81     		strh	r2, [r3, #12]	@ movhi
 4480              	.L133:
2375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4481              		.loc 1 2376 0
 4482 0042 07F10C07 		add	r7, r7, #12
 4483 0046 BD46     		mov	sp, r7
 4484 0048 80BC     		pop	{r7}
 4485 004a 7047     		bx	lr
 4486              		.cfi_endproc
 4487              	.LFE176:
 4489              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 4490              		.align	2
 4491              		.global	TIM_GenerateEvent
 4492              		.thumb
 4493              		.thumb_func
 4495              	TIM_GenerateEvent:
 4496              	.LFB177:
2377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4497              		.loc 1 2398 0
 4498              		.cfi_startproc
 4499              		@ args = 0, pretend = 0, frame = 8
 4500              		@ frame_needed = 1, uses_anonymous_args = 0
 4501              		@ link register save eliminated.
 4502 0000 80B4     		push	{r7}
 4503              	.LCFI201:
 4504              		.cfi_def_cfa_offset 4
 4505 0002 83B0     		sub	sp, sp, #12
 4506              	.LCFI202:
 4507              		.cfi_def_cfa_offset 16
 4508 0004 00AF     		add	r7, sp, #0
 4509              		.cfi_offset 7, -4
 4510              	.LCFI203:
 4511              		.cfi_def_cfa_register 7
 4512 0006 7860     		str	r0, [r7, #4]
 4513 0008 0B46     		mov	r3, r1
 4514 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4515              		.loc 1 2404 0
 4516 000c 7B68     		ldr	r3, [r7, #4]
 4517 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4518 0010 9A82     		strh	r2, [r3, #20]	@ movhi
2405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4519              		.loc 1 2405 0
 4520 0012 07F10C07 		add	r7, r7, #12
 4521 0016 BD46     		mov	sp, r7
 4522 0018 80BC     		pop	{r7}
 4523 001a 7047     		bx	lr
 4524              		.cfi_endproc
 4525              	.LFE177:
 4527              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4528              		.align	2
 4529              		.global	TIM_GetFlagStatus
 4530              		.thumb
 4531              		.thumb_func
 4533              	TIM_GetFlagStatus:
 4534              	.LFB178:
2406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4535              		.loc 1 2431 0
 4536              		.cfi_startproc
 4537              		@ args = 0, pretend = 0, frame = 16
 4538              		@ frame_needed = 1, uses_anonymous_args = 0
 4539              		@ link register save eliminated.
 4540 0000 80B4     		push	{r7}
 4541              	.LCFI204:
 4542              		.cfi_def_cfa_offset 4
 4543 0002 85B0     		sub	sp, sp, #20
 4544              	.LCFI205:
 4545              		.cfi_def_cfa_offset 24
 4546 0004 00AF     		add	r7, sp, #0
 4547              		.cfi_offset 7, -4
 4548              	.LCFI206:
 4549              		.cfi_def_cfa_register 7
 4550 0006 7860     		str	r0, [r7, #4]
 4551 0008 0B46     		mov	r3, r1
 4552 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4553              		.loc 1 2432 0
 4554 000c 4FF00003 		mov	r3, #0
 4555 0010 FB73     		strb	r3, [r7, #15]
2433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4556              		.loc 1 2438 0
 4557 0012 7B68     		ldr	r3, [r7, #4]
 4558 0014 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4559 0016 9AB2     		uxth	r2, r3
 4560 0018 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4561 001a 02EA0303 		and	r3, r2, r3
 4562 001e 9BB2     		uxth	r3, r3
 4563 0020 002B     		cmp	r3, #0
 4564 0022 03D0     		beq	.L138
2439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4565              		.loc 1 2440 0
 4566 0024 4FF00103 		mov	r3, #1
 4567 0028 FB73     		strb	r3, [r7, #15]
 4568 002a 02E0     		b	.L139
 4569              	.L138:
2441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4570              		.loc 1 2444 0
 4571 002c 4FF00003 		mov	r3, #0
 4572 0030 FB73     		strb	r3, [r7, #15]
 4573              	.L139:
2445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4574              		.loc 1 2446 0
 4575 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4576              		.loc 1 2447 0
 4577 0034 1846     		mov	r0, r3
 4578 0036 07F11407 		add	r7, r7, #20
 4579 003a BD46     		mov	sp, r7
 4580 003c 80BC     		pop	{r7}
 4581 003e 7047     		bx	lr
 4582              		.cfi_endproc
 4583              	.LFE178:
 4585              		.section	.text.TIM_ClearFlag,"ax",%progbits
 4586              		.align	2
 4587              		.global	TIM_ClearFlag
 4588              		.thumb
 4589              		.thumb_func
 4591              	TIM_ClearFlag:
 4592              	.LFB179:
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4593              		.loc 1 2473 0
 4594              		.cfi_startproc
 4595              		@ args = 0, pretend = 0, frame = 8
 4596              		@ frame_needed = 1, uses_anonymous_args = 0
 4597              		@ link register save eliminated.
 4598 0000 80B4     		push	{r7}
 4599              	.LCFI207:
 4600              		.cfi_def_cfa_offset 4
 4601 0002 83B0     		sub	sp, sp, #12
 4602              	.LCFI208:
 4603              		.cfi_def_cfa_offset 16
 4604 0004 00AF     		add	r7, sp, #0
 4605              		.cfi_offset 7, -4
 4606              	.LCFI209:
 4607              		.cfi_def_cfa_register 7
 4608 0006 7860     		str	r0, [r7, #4]
 4609 0008 0B46     		mov	r3, r1
 4610 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4611              		.loc 1 2478 0
 4612 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4613 000e 6FEA0303 		mvn	r3, r3
 4614 0012 9AB2     		uxth	r2, r3
 4615 0014 7B68     		ldr	r3, [r7, #4]
 4616 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4617              		.loc 1 2479 0
 4618 0018 07F10C07 		add	r7, r7, #12
 4619 001c BD46     		mov	sp, r7
 4620 001e 80BC     		pop	{r7}
 4621 0020 7047     		bx	lr
 4622              		.cfi_endproc
 4623              	.LFE179:
 4625 0022 00BF     		.section	.text.TIM_GetITStatus,"ax",%progbits
 4626              		.align	2
 4627              		.global	TIM_GetITStatus
 4628              		.thumb
 4629              		.thumb_func
 4631              	TIM_GetITStatus:
 4632              	.LFB180:
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4633              		.loc 1 2501 0
 4634              		.cfi_startproc
 4635              		@ args = 0, pretend = 0, frame = 16
 4636              		@ frame_needed = 1, uses_anonymous_args = 0
 4637              		@ link register save eliminated.
 4638 0000 80B4     		push	{r7}
 4639              	.LCFI210:
 4640              		.cfi_def_cfa_offset 4
 4641 0002 85B0     		sub	sp, sp, #20
 4642              	.LCFI211:
 4643              		.cfi_def_cfa_offset 24
 4644 0004 00AF     		add	r7, sp, #0
 4645              		.cfi_offset 7, -4
 4646              	.LCFI212:
 4647              		.cfi_def_cfa_register 7
 4648 0006 7860     		str	r0, [r7, #4]
 4649 0008 0B46     		mov	r3, r1
 4650 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4651              		.loc 1 2502 0
 4652 000c 4FF00003 		mov	r3, #0
 4653 0010 FB73     		strb	r3, [r7, #15]
2503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4654              		.loc 1 2503 0
 4655 0012 4FF00003 		mov	r3, #0
 4656 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 4657 0018 4FF00003 		mov	r3, #0
 4658 001c 7B81     		strh	r3, [r7, #10]	@ movhi
2504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4659              		.loc 1 2508 0
 4660 001e 7B68     		ldr	r3, [r7, #4]
 4661 0020 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4662 0022 9AB2     		uxth	r2, r3
 4663 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4664 0026 02EA0303 		and	r3, r2, r3
 4665 002a BB81     		strh	r3, [r7, #12]	@ movhi
2509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4666              		.loc 1 2510 0
 4667 002c 7B68     		ldr	r3, [r7, #4]
 4668 002e 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4669 0030 9AB2     		uxth	r2, r3
 4670 0032 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4671 0034 02EA0303 		and	r3, r2, r3
 4672 0038 7B81     		strh	r3, [r7, #10]	@ movhi
2511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4673              		.loc 1 2511 0
 4674 003a BB89     		ldrh	r3, [r7, #12]
 4675 003c 002B     		cmp	r3, #0
 4676 003e 06D0     		beq	.L142
 4677              		.loc 1 2511 0 is_stmt 0 discriminator 1
 4678 0040 7B89     		ldrh	r3, [r7, #10]
 4679 0042 002B     		cmp	r3, #0
 4680 0044 03D0     		beq	.L142
2512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4681              		.loc 1 2513 0 is_stmt 1
 4682 0046 4FF00103 		mov	r3, #1
 4683 004a FB73     		strb	r3, [r7, #15]
 4684 004c 02E0     		b	.L143
 4685              	.L142:
2514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4686              		.loc 1 2517 0
 4687 004e 4FF00003 		mov	r3, #0
 4688 0052 FB73     		strb	r3, [r7, #15]
 4689              	.L143:
2518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4690              		.loc 1 2519 0
 4691 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4692              		.loc 1 2520 0
 4693 0056 1846     		mov	r0, r3
 4694 0058 07F11407 		add	r7, r7, #20
 4695 005c BD46     		mov	sp, r7
 4696 005e 80BC     		pop	{r7}
 4697 0060 7047     		bx	lr
 4698              		.cfi_endproc
 4699              	.LFE180:
 4701 0062 00BF     		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4702              		.align	2
 4703              		.global	TIM_ClearITPendingBit
 4704              		.thumb
 4705              		.thumb_func
 4707              	TIM_ClearITPendingBit:
 4708              	.LFB181:
2521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4709              		.loc 1 2542 0
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 8
 4712              		@ frame_needed = 1, uses_anonymous_args = 0
 4713              		@ link register save eliminated.
 4714 0000 80B4     		push	{r7}
 4715              	.LCFI213:
 4716              		.cfi_def_cfa_offset 4
 4717 0002 83B0     		sub	sp, sp, #12
 4718              	.LCFI214:
 4719              		.cfi_def_cfa_offset 16
 4720 0004 00AF     		add	r7, sp, #0
 4721              		.cfi_offset 7, -4
 4722              	.LCFI215:
 4723              		.cfi_def_cfa_register 7
 4724 0006 7860     		str	r0, [r7, #4]
 4725 0008 0B46     		mov	r3, r1
 4726 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4727              		.loc 1 2547 0
 4728 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4729 000e 6FEA0303 		mvn	r3, r3
 4730 0012 9AB2     		uxth	r2, r3
 4731 0014 7B68     		ldr	r3, [r7, #4]
 4732 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4733              		.loc 1 2548 0
 4734 0018 07F10C07 		add	r7, r7, #12
 4735 001c BD46     		mov	sp, r7
 4736 001e 80BC     		pop	{r7}
 4737 0020 7047     		bx	lr
 4738              		.cfi_endproc
 4739              	.LFE181:
 4741 0022 00BF     		.section	.text.TIM_DMAConfig,"ax",%progbits
 4742              		.align	2
 4743              		.global	TIM_DMAConfig
 4744              		.thumb
 4745              		.thumb_func
 4747              	TIM_DMAConfig:
 4748              	.LFB182:
2549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4749              		.loc 1 2579 0
 4750              		.cfi_startproc
 4751              		@ args = 0, pretend = 0, frame = 8
 4752              		@ frame_needed = 1, uses_anonymous_args = 0
 4753              		@ link register save eliminated.
 4754 0000 80B4     		push	{r7}
 4755              	.LCFI216:
 4756              		.cfi_def_cfa_offset 4
 4757 0002 83B0     		sub	sp, sp, #12
 4758              	.LCFI217:
 4759              		.cfi_def_cfa_offset 16
 4760 0004 00AF     		add	r7, sp, #0
 4761              		.cfi_offset 7, -4
 4762              	.LCFI218:
 4763              		.cfi_def_cfa_register 7
 4764 0006 7860     		str	r0, [r7, #4]
 4765 0008 1346     		mov	r3, r2
 4766 000a 0A46     		mov	r2, r1	@ movhi
 4767 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4768 000e 3B80     		strh	r3, [r7, #0]	@ movhi
2580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4769              		.loc 1 2586 0
 4770 0010 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4771 0012 3B88     		ldrh	r3, [r7, #0]	@ movhi
 4772 0014 42EA0303 		orr	r3, r2, r3
 4773 0018 9AB2     		uxth	r2, r3
 4774 001a 7B68     		ldr	r3, [r7, #4]
 4775 001c A3F84820 		strh	r2, [r3, #72]	@ movhi
2587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4776              		.loc 1 2587 0
 4777 0020 07F10C07 		add	r7, r7, #12
 4778 0024 BD46     		mov	sp, r7
 4779 0026 80BC     		pop	{r7}
 4780 0028 7047     		bx	lr
 4781              		.cfi_endproc
 4782              	.LFE182:
 4784 002a 00BF     		.section	.text.TIM_DMACmd,"ax",%progbits
 4785              		.align	2
 4786              		.global	TIM_DMACmd
 4787              		.thumb
 4788              		.thumb_func
 4790              	TIM_DMACmd:
 4791              	.LFB183:
2588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4792              		.loc 1 2606 0
 4793              		.cfi_startproc
 4794              		@ args = 0, pretend = 0, frame = 8
 4795              		@ frame_needed = 1, uses_anonymous_args = 0
 4796              		@ link register save eliminated.
 4797 0000 80B4     		push	{r7}
 4798              	.LCFI219:
 4799              		.cfi_def_cfa_offset 4
 4800 0002 83B0     		sub	sp, sp, #12
 4801              	.LCFI220:
 4802              		.cfi_def_cfa_offset 16
 4803 0004 00AF     		add	r7, sp, #0
 4804              		.cfi_offset 7, -4
 4805              	.LCFI221:
 4806              		.cfi_def_cfa_register 7
 4807 0006 7860     		str	r0, [r7, #4]
 4808 0008 1346     		mov	r3, r2
 4809 000a 0A46     		mov	r2, r1	@ movhi
 4810 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4811 000e 7B70     		strb	r3, [r7, #1]
2607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4812              		.loc 1 2612 0
 4813 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4814 0012 002B     		cmp	r3, #0
 4815 0014 09D0     		beq	.L147
2613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4816              		.loc 1 2615 0
 4817 0016 7B68     		ldr	r3, [r7, #4]
 4818 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4819 001a 9AB2     		uxth	r2, r3
 4820 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4821 001e 42EA0303 		orr	r3, r2, r3
 4822 0022 9AB2     		uxth	r2, r3
 4823 0024 7B68     		ldr	r3, [r7, #4]
 4824 0026 9A81     		strh	r2, [r3, #12]	@ movhi
 4825 0028 0BE0     		b	.L146
 4826              	.L147:
2616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4827              		.loc 1 2620 0
 4828 002a 7B68     		ldr	r3, [r7, #4]
 4829 002c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4830 002e 9AB2     		uxth	r2, r3
 4831 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4832 0032 6FEA0303 		mvn	r3, r3
 4833 0036 9BB2     		uxth	r3, r3
 4834 0038 02EA0303 		and	r3, r2, r3
 4835 003c 9AB2     		uxth	r2, r3
 4836 003e 7B68     		ldr	r3, [r7, #4]
 4837 0040 9A81     		strh	r2, [r3, #12]	@ movhi
 4838              	.L146:
2621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4839              		.loc 1 2622 0
 4840 0042 07F10C07 		add	r7, r7, #12
 4841 0046 BD46     		mov	sp, r7
 4842 0048 80BC     		pop	{r7}
 4843 004a 7047     		bx	lr
 4844              		.cfi_endproc
 4845              	.LFE183:
 4847              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 4848              		.align	2
 4849              		.global	TIM_SelectCCDMA
 4850              		.thumb
 4851              		.thumb_func
 4853              	TIM_SelectCCDMA:
 4854              	.LFB184:
2623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4855              		.loc 1 2632 0
 4856              		.cfi_startproc
 4857              		@ args = 0, pretend = 0, frame = 8
 4858              		@ frame_needed = 1, uses_anonymous_args = 0
 4859              		@ link register save eliminated.
 4860 0000 80B4     		push	{r7}
 4861              	.LCFI222:
 4862              		.cfi_def_cfa_offset 4
 4863 0002 83B0     		sub	sp, sp, #12
 4864              	.LCFI223:
 4865              		.cfi_def_cfa_offset 16
 4866 0004 00AF     		add	r7, sp, #0
 4867              		.cfi_offset 7, -4
 4868              	.LCFI224:
 4869              		.cfi_def_cfa_register 7
 4870 0006 7860     		str	r0, [r7, #4]
 4871 0008 0B46     		mov	r3, r1
 4872 000a FB70     		strb	r3, [r7, #3]
2633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4873              		.loc 1 2637 0
 4874 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4875 000e 002B     		cmp	r3, #0
 4876 0010 08D0     		beq	.L150
2638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4877              		.loc 1 2640 0
 4878 0012 7B68     		ldr	r3, [r7, #4]
 4879 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4880 0016 9BB2     		uxth	r3, r3
 4881 0018 43F00803 		orr	r3, r3, #8
 4882 001c 9AB2     		uxth	r2, r3
 4883 001e 7B68     		ldr	r3, [r7, #4]
 4884 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4885 0022 07E0     		b	.L149
 4886              	.L150:
2641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4887              		.loc 1 2645 0
 4888 0024 7B68     		ldr	r3, [r7, #4]
 4889 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4890 0028 9BB2     		uxth	r3, r3
 4891 002a 23F00803 		bic	r3, r3, #8
 4892 002e 9AB2     		uxth	r2, r3
 4893 0030 7B68     		ldr	r3, [r7, #4]
 4894 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4895              	.L149:
2646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4896              		.loc 1 2647 0
 4897 0034 07F10C07 		add	r7, r7, #12
 4898 0038 BD46     		mov	sp, r7
 4899 003a 80BC     		pop	{r7}
 4900 003c 7047     		bx	lr
 4901              		.cfi_endproc
 4902              	.LFE184:
 4904 003e 00BF     		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 4905              		.align	2
 4906              		.global	TIM_InternalClockConfig
 4907              		.thumb
 4908              		.thumb_func
 4910              	TIM_InternalClockConfig:
 4911              	.LFB185:
2648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4912              		.loc 1 2671 0
 4913              		.cfi_startproc
 4914              		@ args = 0, pretend = 0, frame = 8
 4915              		@ frame_needed = 1, uses_anonymous_args = 0
 4916              		@ link register save eliminated.
 4917 0000 80B4     		push	{r7}
 4918              	.LCFI225:
 4919              		.cfi_def_cfa_offset 4
 4920 0002 83B0     		sub	sp, sp, #12
 4921              	.LCFI226:
 4922              		.cfi_def_cfa_offset 16
 4923 0004 00AF     		add	r7, sp, #0
 4924              		.cfi_offset 7, -4
 4925              	.LCFI227:
 4926              		.cfi_def_cfa_register 7
 4927 0006 7860     		str	r0, [r7, #4]
2672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4928              		.loc 1 2676 0
 4929 0008 7B68     		ldr	r3, [r7, #4]
 4930 000a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4931 000c 9BB2     		uxth	r3, r3
 4932 000e 23F00703 		bic	r3, r3, #7
 4933 0012 9AB2     		uxth	r2, r3
 4934 0014 7B68     		ldr	r3, [r7, #4]
 4935 0016 1A81     		strh	r2, [r3, #8]	@ movhi
2677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4936              		.loc 1 2677 0
 4937 0018 07F10C07 		add	r7, r7, #12
 4938 001c BD46     		mov	sp, r7
 4939 001e 80BC     		pop	{r7}
 4940 0020 7047     		bx	lr
 4941              		.cfi_endproc
 4942              	.LFE185:
 4944 0022 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 4945              		.align	2
 4946              		.global	TIM_ITRxExternalClockConfig
 4947              		.thumb
 4948              		.thumb_func
 4950              	TIM_ITRxExternalClockConfig:
 4951              	.LFB186:
2678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4952              		.loc 1 2692 0
 4953              		.cfi_startproc
 4954              		@ args = 0, pretend = 0, frame = 8
 4955              		@ frame_needed = 1, uses_anonymous_args = 0
 4956 0000 80B5     		push	{r7, lr}
 4957              	.LCFI228:
 4958              		.cfi_def_cfa_offset 8
 4959 0002 82B0     		sub	sp, sp, #8
 4960              	.LCFI229:
 4961              		.cfi_def_cfa_offset 16
 4962 0004 00AF     		add	r7, sp, #0
 4963              		.cfi_offset 14, -4
 4964              		.cfi_offset 7, -8
 4965              	.LCFI230:
 4966              		.cfi_def_cfa_register 7
 4967 0006 7860     		str	r0, [r7, #4]
 4968 0008 0B46     		mov	r3, r1
 4969 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 4970              		.loc 1 2698 0
 4971 000c 7B88     		ldrh	r3, [r7, #2]
 4972 000e 7868     		ldr	r0, [r7, #4]
 4973 0010 1946     		mov	r1, r3
 4974 0012 FFF7FEFF 		bl	TIM_SelectInputTrigger
2699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4975              		.loc 1 2701 0
 4976 0016 7B68     		ldr	r3, [r7, #4]
 4977 0018 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4978 001a 9BB2     		uxth	r3, r3
 4979 001c 43F00703 		orr	r3, r3, #7
 4980 0020 9AB2     		uxth	r2, r3
 4981 0022 7B68     		ldr	r3, [r7, #4]
 4982 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4983              		.loc 1 2702 0
 4984 0026 07F10807 		add	r7, r7, #8
 4985 002a BD46     		mov	sp, r7
 4986 002c 80BD     		pop	{r7, pc}
 4987              		.cfi_endproc
 4988              	.LFE186:
 4990 002e 00BF     		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 4991              		.align	2
 4992              		.global	TIM_TIxExternalClockConfig
 4993              		.thumb
 4994              		.thumb_func
 4996              	TIM_TIxExternalClockConfig:
 4997              	.LFB187:
2703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4998              		.loc 1 2723 0
 4999              		.cfi_startproc
 5000              		@ args = 0, pretend = 0, frame = 16
 5001              		@ frame_needed = 1, uses_anonymous_args = 0
 5002 0000 80B5     		push	{r7, lr}
 5003              	.LCFI231:
 5004              		.cfi_def_cfa_offset 8
 5005 0002 84B0     		sub	sp, sp, #16
 5006              	.LCFI232:
 5007              		.cfi_def_cfa_offset 24
 5008 0004 00AF     		add	r7, sp, #0
 5009              		.cfi_offset 14, -4
 5010              		.cfi_offset 7, -8
 5011              	.LCFI233:
 5012              		.cfi_def_cfa_register 7
 5013 0006 F860     		str	r0, [r7, #12]
 5014 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5015 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5016 000c FB80     		strh	r3, [r7, #6]	@ movhi
2724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 5017              		.loc 1 2730 0
 5018 000e 7B89     		ldrh	r3, [r7, #10]
 5019 0010 602B     		cmp	r3, #96
 5020 0012 08D1     		bne	.L155
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5021              		.loc 1 2732 0
 5022 0014 3A89     		ldrh	r2, [r7, #8]
 5023 0016 FB88     		ldrh	r3, [r7, #6]
 5024 0018 F868     		ldr	r0, [r7, #12]
 5025 001a 1146     		mov	r1, r2
 5026 001c 4FF00102 		mov	r2, #1
 5027 0020 FFF7FEFF 		bl	TI2_Config
 5028 0024 07E0     		b	.L156
 5029              	.L155:
2733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5030              		.loc 1 2736 0
 5031 0026 3A89     		ldrh	r2, [r7, #8]
 5032 0028 FB88     		ldrh	r3, [r7, #6]
 5033 002a F868     		ldr	r0, [r7, #12]
 5034 002c 1146     		mov	r1, r2
 5035 002e 4FF00102 		mov	r2, #1
 5036 0032 FFF7FEFF 		bl	TI1_Config
 5037              	.L156:
2737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 5038              		.loc 1 2739 0
 5039 0036 7B89     		ldrh	r3, [r7, #10]
 5040 0038 F868     		ldr	r0, [r7, #12]
 5041 003a 1946     		mov	r1, r3
 5042 003c FFF7FEFF 		bl	TIM_SelectInputTrigger
2740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5043              		.loc 1 2741 0
 5044 0040 FB68     		ldr	r3, [r7, #12]
 5045 0042 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5046 0044 9BB2     		uxth	r3, r3
 5047 0046 43F00703 		orr	r3, r3, #7
 5048 004a 9AB2     		uxth	r2, r3
 5049 004c FB68     		ldr	r3, [r7, #12]
 5050 004e 1A81     		strh	r2, [r3, #8]	@ movhi
2742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5051              		.loc 1 2742 0
 5052 0050 07F11007 		add	r7, r7, #16
 5053 0054 BD46     		mov	sp, r7
 5054 0056 80BD     		pop	{r7, pc}
 5055              		.cfi_endproc
 5056              	.LFE187:
 5058              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 5059              		.align	2
 5060              		.global	TIM_ETRClockMode1Config
 5061              		.thumb
 5062              		.thumb_func
 5064              	TIM_ETRClockMode1Config:
 5065              	.LFB188:
2743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5066              		.loc 1 2763 0
 5067              		.cfi_startproc
 5068              		@ args = 0, pretend = 0, frame = 24
 5069              		@ frame_needed = 1, uses_anonymous_args = 0
 5070 0000 80B5     		push	{r7, lr}
 5071              	.LCFI234:
 5072              		.cfi_def_cfa_offset 8
 5073 0002 86B0     		sub	sp, sp, #24
 5074              	.LCFI235:
 5075              		.cfi_def_cfa_offset 32
 5076 0004 00AF     		add	r7, sp, #0
 5077              		.cfi_offset 14, -4
 5078              		.cfi_offset 7, -8
 5079              	.LCFI236:
 5080              		.cfi_def_cfa_register 7
 5081 0006 F860     		str	r0, [r7, #12]
 5082 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5083 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5084 000c FB80     		strh	r3, [r7, #6]	@ movhi
2764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5085              		.loc 1 2764 0
 5086 000e 4FF00003 		mov	r3, #0
 5087 0012 FB82     		strh	r3, [r7, #22]	@ movhi
2765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5088              		.loc 1 2772 0
 5089 0014 7989     		ldrh	r1, [r7, #10]
 5090 0016 3A89     		ldrh	r2, [r7, #8]
 5091 0018 FB88     		ldrh	r3, [r7, #6]
 5092 001a F868     		ldr	r0, [r7, #12]
 5093 001c FFF7FEFF 		bl	TIM_ETRConfig
2773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5094              		.loc 1 2775 0
 5095 0020 FB68     		ldr	r3, [r7, #12]
 5096 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5097 0024 FB82     		strh	r3, [r7, #22]	@ movhi
2776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5098              		.loc 1 2778 0
 5099 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5100 0028 23F00703 		bic	r3, r3, #7
 5101 002c FB82     		strh	r3, [r7, #22]	@ movhi
2779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5102              		.loc 1 2781 0
 5103 002e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5104 0030 43F00703 		orr	r3, r3, #7
 5105 0034 FB82     		strh	r3, [r7, #22]	@ movhi
2782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5106              		.loc 1 2784 0
 5107 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5108 0038 23F07003 		bic	r3, r3, #112
 5109 003c FB82     		strh	r3, [r7, #22]	@ movhi
2785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5110              		.loc 1 2785 0
 5111 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5112 0040 43F07003 		orr	r3, r3, #112
 5113 0044 FB82     		strh	r3, [r7, #22]	@ movhi
2786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5114              		.loc 1 2788 0
 5115 0046 FB68     		ldr	r3, [r7, #12]
 5116 0048 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5117 004a 1A81     		strh	r2, [r3, #8]	@ movhi
2789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5118              		.loc 1 2789 0
 5119 004c 07F11807 		add	r7, r7, #24
 5120 0050 BD46     		mov	sp, r7
 5121 0052 80BD     		pop	{r7, pc}
 5122              		.cfi_endproc
 5123              	.LFE188:
 5125              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 5126              		.align	2
 5127              		.global	TIM_ETRClockMode2Config
 5128              		.thumb
 5129              		.thumb_func
 5131              	TIM_ETRClockMode2Config:
 5132              	.LFB189:
2790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5133              		.loc 1 2810 0
 5134              		.cfi_startproc
 5135              		@ args = 0, pretend = 0, frame = 16
 5136              		@ frame_needed = 1, uses_anonymous_args = 0
 5137 0000 80B5     		push	{r7, lr}
 5138              	.LCFI237:
 5139              		.cfi_def_cfa_offset 8
 5140 0002 84B0     		sub	sp, sp, #16
 5141              	.LCFI238:
 5142              		.cfi_def_cfa_offset 24
 5143 0004 00AF     		add	r7, sp, #0
 5144              		.cfi_offset 14, -4
 5145              		.cfi_offset 7, -8
 5146              	.LCFI239:
 5147              		.cfi_def_cfa_register 7
 5148 0006 F860     		str	r0, [r7, #12]
 5149 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5150 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5151 000c FB80     		strh	r3, [r7, #6]	@ movhi
2811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5152              		.loc 1 2818 0
 5153 000e 7989     		ldrh	r1, [r7, #10]
 5154 0010 3A89     		ldrh	r2, [r7, #8]
 5155 0012 FB88     		ldrh	r3, [r7, #6]
 5156 0014 F868     		ldr	r0, [r7, #12]
 5157 0016 FFF7FEFF 		bl	TIM_ETRConfig
2819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5158              		.loc 1 2821 0
 5159 001a FB68     		ldr	r3, [r7, #12]
 5160 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5161 001e 9BB2     		uxth	r3, r3
 5162 0020 43F48043 		orr	r3, r3, #16384
 5163 0024 9AB2     		uxth	r2, r3
 5164 0026 FB68     		ldr	r3, [r7, #12]
 5165 0028 1A81     		strh	r2, [r3, #8]	@ movhi
2822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5166              		.loc 1 2822 0
 5167 002a 07F11007 		add	r7, r7, #16
 5168 002e BD46     		mov	sp, r7
 5169 0030 80BD     		pop	{r7, pc}
 5170              		.cfi_endproc
 5171              	.LFE189:
 5173 0032 00BF     		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 5174              		.align	2
 5175              		.global	TIM_SelectInputTrigger
 5176              		.thumb
 5177              		.thumb_func
 5179              	TIM_SelectInputTrigger:
 5180              	.LFB190:
2823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5181              		.loc 1 2877 0
 5182              		.cfi_startproc
 5183              		@ args = 0, pretend = 0, frame = 16
 5184              		@ frame_needed = 1, uses_anonymous_args = 0
 5185              		@ link register save eliminated.
 5186 0000 80B4     		push	{r7}
 5187              	.LCFI240:
 5188              		.cfi_def_cfa_offset 4
 5189 0002 85B0     		sub	sp, sp, #20
 5190              	.LCFI241:
 5191              		.cfi_def_cfa_offset 24
 5192 0004 00AF     		add	r7, sp, #0
 5193              		.cfi_offset 7, -4
 5194              	.LCFI242:
 5195              		.cfi_def_cfa_register 7
 5196 0006 7860     		str	r0, [r7, #4]
 5197 0008 0B46     		mov	r3, r1
 5198 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5199              		.loc 1 2878 0
 5200 000c 4FF00003 		mov	r3, #0
 5201 0010 FB81     		strh	r3, [r7, #14]	@ movhi
2879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5202              		.loc 1 2885 0
 5203 0012 7B68     		ldr	r3, [r7, #4]
 5204 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5205 0016 FB81     		strh	r3, [r7, #14]	@ movhi
2886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5206              		.loc 1 2888 0
 5207 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5208 001a 23F07003 		bic	r3, r3, #112
 5209 001e FB81     		strh	r3, [r7, #14]	@ movhi
2889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5210              		.loc 1 2891 0
 5211 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5212 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5213 0024 42EA0303 		orr	r3, r2, r3
 5214 0028 FB81     		strh	r3, [r7, #14]	@ movhi
2892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5215              		.loc 1 2894 0
 5216 002a 7B68     		ldr	r3, [r7, #4]
 5217 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 5218 002e 1A81     		strh	r2, [r3, #8]	@ movhi
2895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5219              		.loc 1 2895 0
 5220 0030 07F11407 		add	r7, r7, #20
 5221 0034 BD46     		mov	sp, r7
 5222 0036 80BC     		pop	{r7}
 5223 0038 7047     		bx	lr
 5224              		.cfi_endproc
 5225              	.LFE190:
 5227 003a 00BF     		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 5228              		.align	2
 5229              		.global	TIM_SelectOutputTrigger
 5230              		.thumb
 5231              		.thumb_func
 5233              	TIM_SelectOutputTrigger:
 5234              	.LFB191:
2896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5235              		.loc 1 2920 0
 5236              		.cfi_startproc
 5237              		@ args = 0, pretend = 0, frame = 8
 5238              		@ frame_needed = 1, uses_anonymous_args = 0
 5239              		@ link register save eliminated.
 5240 0000 80B4     		push	{r7}
 5241              	.LCFI243:
 5242              		.cfi_def_cfa_offset 4
 5243 0002 83B0     		sub	sp, sp, #12
 5244              	.LCFI244:
 5245              		.cfi_def_cfa_offset 16
 5246 0004 00AF     		add	r7, sp, #0
 5247              		.cfi_offset 7, -4
 5248              	.LCFI245:
 5249              		.cfi_def_cfa_register 7
 5250 0006 7860     		str	r0, [r7, #4]
 5251 0008 0B46     		mov	r3, r1
 5252 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5253              		.loc 1 2926 0
 5254 000c 7B68     		ldr	r3, [r7, #4]
 5255 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5256 0010 9BB2     		uxth	r3, r3
 5257 0012 23F07003 		bic	r3, r3, #112
 5258 0016 9AB2     		uxth	r2, r3
 5259 0018 7B68     		ldr	r3, [r7, #4]
 5260 001a 9A80     		strh	r2, [r3, #4]	@ movhi
2927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5261              		.loc 1 2928 0
 5262 001c 7B68     		ldr	r3, [r7, #4]
 5263 001e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5264 0020 9AB2     		uxth	r2, r3
 5265 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5266 0024 42EA0303 		orr	r3, r2, r3
 5267 0028 9AB2     		uxth	r2, r3
 5268 002a 7B68     		ldr	r3, [r7, #4]
 5269 002c 9A80     		strh	r2, [r3, #4]	@ movhi
2929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5270              		.loc 1 2929 0
 5271 002e 07F10C07 		add	r7, r7, #12
 5272 0032 BD46     		mov	sp, r7
 5273 0034 80BC     		pop	{r7}
 5274 0036 7047     		bx	lr
 5275              		.cfi_endproc
 5276              	.LFE191:
 5278              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 5279              		.align	2
 5280              		.global	TIM_SelectSlaveMode
 5281              		.thumb
 5282              		.thumb_func
 5284              	TIM_SelectSlaveMode:
 5285              	.LFB192:
2930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5286              		.loc 1 2944 0
 5287              		.cfi_startproc
 5288              		@ args = 0, pretend = 0, frame = 8
 5289              		@ frame_needed = 1, uses_anonymous_args = 0
 5290              		@ link register save eliminated.
 5291 0000 80B4     		push	{r7}
 5292              	.LCFI246:
 5293              		.cfi_def_cfa_offset 4
 5294 0002 83B0     		sub	sp, sp, #12
 5295              	.LCFI247:
 5296              		.cfi_def_cfa_offset 16
 5297 0004 00AF     		add	r7, sp, #0
 5298              		.cfi_offset 7, -4
 5299              	.LCFI248:
 5300              		.cfi_def_cfa_register 7
 5301 0006 7860     		str	r0, [r7, #4]
 5302 0008 0B46     		mov	r3, r1
 5303 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5304              		.loc 1 2950 0
 5305 000c 7B68     		ldr	r3, [r7, #4]
 5306 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5307 0010 9BB2     		uxth	r3, r3
 5308 0012 23F00703 		bic	r3, r3, #7
 5309 0016 9AB2     		uxth	r2, r3
 5310 0018 7B68     		ldr	r3, [r7, #4]
 5311 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5312              		.loc 1 2953 0
 5313 001c 7B68     		ldr	r3, [r7, #4]
 5314 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5315 0020 9AB2     		uxth	r2, r3
 5316 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5317 0024 42EA0303 		orr	r3, r2, r3
 5318 0028 9AB2     		uxth	r2, r3
 5319 002a 7B68     		ldr	r3, [r7, #4]
 5320 002c 1A81     		strh	r2, [r3, #8]	@ movhi
2954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5321              		.loc 1 2954 0
 5322 002e 07F10C07 		add	r7, r7, #12
 5323 0032 BD46     		mov	sp, r7
 5324 0034 80BC     		pop	{r7}
 5325 0036 7047     		bx	lr
 5326              		.cfi_endproc
 5327              	.LFE192:
 5329              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 5330              		.align	2
 5331              		.global	TIM_SelectMasterSlaveMode
 5332              		.thumb
 5333              		.thumb_func
 5335              	TIM_SelectMasterSlaveMode:
 5336              	.LFB193:
2955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5337              		.loc 1 2967 0
 5338              		.cfi_startproc
 5339              		@ args = 0, pretend = 0, frame = 8
 5340              		@ frame_needed = 1, uses_anonymous_args = 0
 5341              		@ link register save eliminated.
 5342 0000 80B4     		push	{r7}
 5343              	.LCFI249:
 5344              		.cfi_def_cfa_offset 4
 5345 0002 83B0     		sub	sp, sp, #12
 5346              	.LCFI250:
 5347              		.cfi_def_cfa_offset 16
 5348 0004 00AF     		add	r7, sp, #0
 5349              		.cfi_offset 7, -4
 5350              	.LCFI251:
 5351              		.cfi_def_cfa_register 7
 5352 0006 7860     		str	r0, [r7, #4]
 5353 0008 0B46     		mov	r3, r1
 5354 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5355              		.loc 1 2973 0
 5356 000c 7B68     		ldr	r3, [r7, #4]
 5357 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5358 0010 9BB2     		uxth	r3, r3
 5359 0012 23F08003 		bic	r3, r3, #128
 5360 0016 9AB2     		uxth	r2, r3
 5361 0018 7B68     		ldr	r3, [r7, #4]
 5362 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5363              		.loc 1 2976 0
 5364 001c 7B68     		ldr	r3, [r7, #4]
 5365 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5366 0020 9AB2     		uxth	r2, r3
 5367 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5368 0024 42EA0303 		orr	r3, r2, r3
 5369 0028 9AB2     		uxth	r2, r3
 5370 002a 7B68     		ldr	r3, [r7, #4]
 5371 002c 1A81     		strh	r2, [r3, #8]	@ movhi
2977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5372              		.loc 1 2977 0
 5373 002e 07F10C07 		add	r7, r7, #12
 5374 0032 BD46     		mov	sp, r7
 5375 0034 80BC     		pop	{r7}
 5376 0036 7047     		bx	lr
 5377              		.cfi_endproc
 5378              	.LFE193:
 5380              		.section	.text.TIM_ETRConfig,"ax",%progbits
 5381              		.align	2
 5382              		.global	TIM_ETRConfig
 5383              		.thumb
 5384              		.thumb_func
 5386              	TIM_ETRConfig:
 5387              	.LFB194:
2978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5388              		.loc 1 2998 0
 5389              		.cfi_startproc
 5390              		@ args = 0, pretend = 0, frame = 24
 5391              		@ frame_needed = 1, uses_anonymous_args = 0
 5392              		@ link register save eliminated.
 5393 0000 80B4     		push	{r7}
 5394              	.LCFI252:
 5395              		.cfi_def_cfa_offset 4
 5396 0002 87B0     		sub	sp, sp, #28
 5397              	.LCFI253:
 5398              		.cfi_def_cfa_offset 32
 5399 0004 00AF     		add	r7, sp, #0
 5400              		.cfi_offset 7, -4
 5401              	.LCFI254:
 5402              		.cfi_def_cfa_register 7
 5403 0006 F860     		str	r0, [r7, #12]
 5404 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5405 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5406 000c FB80     		strh	r3, [r7, #6]	@ movhi
2999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5407              		.loc 1 2999 0
 5408 000e 4FF00003 		mov	r3, #0
 5409 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5410              		.loc 1 3007 0
 5411 0014 FB68     		ldr	r3, [r7, #12]
 5412 0016 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5413 0018 FB82     		strh	r3, [r7, #22]	@ movhi
3008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5414              		.loc 1 3010 0
 5415 001a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5416 001c 03F0FF03 		and	r3, r3, #255
 5417 0020 FB82     		strh	r3, [r7, #22]	@ movhi
3011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5418              		.loc 1 3013 0
 5419 0022 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5420 0024 4FEA0323 		lsl	r3, r3, #8
 5421 0028 9AB2     		uxth	r2, r3
 5422 002a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5423 002c 42EA0303 		orr	r3, r2, r3
 5424 0030 9AB2     		uxth	r2, r3
 5425 0032 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5426 0034 42EA0303 		orr	r3, r2, r3
 5427 0038 9AB2     		uxth	r2, r3
 5428 003a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5429 003c 42EA0303 		orr	r3, r2, r3
 5430 0040 FB82     		strh	r3, [r7, #22]	@ movhi
3014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5431              		.loc 1 3016 0
 5432 0042 FB68     		ldr	r3, [r7, #12]
 5433 0044 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5434 0046 1A81     		strh	r2, [r3, #8]	@ movhi
3017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5435              		.loc 1 3017 0
 5436 0048 07F11C07 		add	r7, r7, #28
 5437 004c BD46     		mov	sp, r7
 5438 004e 80BC     		pop	{r7}
 5439 0050 7047     		bx	lr
 5440              		.cfi_endproc
 5441              	.LFE194:
 5443 0052 00BF     		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 5444              		.align	2
 5445              		.global	TIM_EncoderInterfaceConfig
 5446              		.thumb
 5447              		.thumb_func
 5449              	TIM_EncoderInterfaceConfig:
 5450              	.LFB195:
3018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5451              		.loc 1 3056 0
 5452              		.cfi_startproc
 5453              		@ args = 0, pretend = 0, frame = 24
 5454              		@ frame_needed = 1, uses_anonymous_args = 0
 5455              		@ link register save eliminated.
 5456 0000 80B4     		push	{r7}
 5457              	.LCFI255:
 5458              		.cfi_def_cfa_offset 4
 5459 0002 87B0     		sub	sp, sp, #28
 5460              	.LCFI256:
 5461              		.cfi_def_cfa_offset 32
 5462 0004 00AF     		add	r7, sp, #0
 5463              		.cfi_offset 7, -4
 5464              	.LCFI257:
 5465              		.cfi_def_cfa_register 7
 5466 0006 F860     		str	r0, [r7, #12]
 5467 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5468 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5469 000c FB80     		strh	r3, [r7, #6]	@ movhi
3057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5470              		.loc 1 3057 0
 5471 000e 4FF00003 		mov	r3, #0
 5472 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5473              		.loc 1 3058 0
 5474 0014 4FF00003 		mov	r3, #0
 5475 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 5476              		.loc 1 3059 0
 5477 001a 4FF00003 		mov	r3, #0
 5478 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5479              		.loc 1 3068 0
 5480 0020 FB68     		ldr	r3, [r7, #12]
 5481 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5482 0024 FB82     		strh	r3, [r7, #22]	@ movhi
3069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5483              		.loc 1 3071 0
 5484 0026 FB68     		ldr	r3, [r7, #12]
 5485 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5486 002a BB82     		strh	r3, [r7, #20]	@ movhi
3072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5487              		.loc 1 3074 0
 5488 002c FB68     		ldr	r3, [r7, #12]
 5489 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5490 0030 7B82     		strh	r3, [r7, #18]	@ movhi
3075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5491              		.loc 1 3077 0
 5492 0032 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5493 0034 23F00703 		bic	r3, r3, #7
 5494 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5495              		.loc 1 3078 0
 5496 003a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5497 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5498 003e 42EA0303 		orr	r3, r2, r3
 5499 0042 FB82     		strh	r3, [r7, #22]	@ movhi
3079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5500              		.loc 1 3081 0
 5501 0044 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5502 0046 23F44073 		bic	r3, r3, #768
 5503 004a 23F00303 		bic	r3, r3, #3
 5504 004e BB82     		strh	r3, [r7, #20]	@ movhi
3082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5505              		.loc 1 3082 0
 5506 0050 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5507 0052 43F48073 		orr	r3, r3, #256
 5508 0056 43F00103 		orr	r3, r3, #1
 5509 005a BB82     		strh	r3, [r7, #20]	@ movhi
3083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5510              		.loc 1 3085 0
 5511 005c 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5512 005e 23F02203 		bic	r3, r3, #34
 5513 0062 7B82     		strh	r3, [r7, #18]	@ movhi
3086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5514              		.loc 1 3086 0
 5515 0064 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5516 0066 4FEA0313 		lsl	r3, r3, #4
 5517 006a 9AB2     		uxth	r2, r3
 5518 006c 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5519 006e 42EA0303 		orr	r3, r2, r3
 5520 0072 9AB2     		uxth	r2, r3
 5521 0074 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5522 0076 42EA0303 		orr	r3, r2, r3
 5523 007a 7B82     		strh	r3, [r7, #18]	@ movhi
3087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5524              		.loc 1 3089 0
 5525 007c FB68     		ldr	r3, [r7, #12]
 5526 007e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5527 0080 1A81     		strh	r2, [r3, #8]	@ movhi
3090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5528              		.loc 1 3092 0
 5529 0082 FB68     		ldr	r3, [r7, #12]
 5530 0084 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5531 0086 1A83     		strh	r2, [r3, #24]	@ movhi
3093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5532              		.loc 1 3095 0
 5533 0088 FB68     		ldr	r3, [r7, #12]
 5534 008a 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5535 008c 1A84     		strh	r2, [r3, #32]	@ movhi
3096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5536              		.loc 1 3096 0
 5537 008e 07F11C07 		add	r7, r7, #28
 5538 0092 BD46     		mov	sp, r7
 5539 0094 80BC     		pop	{r7}
 5540 0096 7047     		bx	lr
 5541              		.cfi_endproc
 5542              	.LFE195:
 5544              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 5545              		.align	2
 5546              		.global	TIM_SelectHallSensor
 5547              		.thumb
 5548              		.thumb_func
 5550              	TIM_SelectHallSensor:
 5551              	.LFB196:
3097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5552              		.loc 1 3107 0
 5553              		.cfi_startproc
 5554              		@ args = 0, pretend = 0, frame = 8
 5555              		@ frame_needed = 1, uses_anonymous_args = 0
 5556              		@ link register save eliminated.
 5557 0000 80B4     		push	{r7}
 5558              	.LCFI258:
 5559              		.cfi_def_cfa_offset 4
 5560 0002 83B0     		sub	sp, sp, #12
 5561              	.LCFI259:
 5562              		.cfi_def_cfa_offset 16
 5563 0004 00AF     		add	r7, sp, #0
 5564              		.cfi_offset 7, -4
 5565              	.LCFI260:
 5566              		.cfi_def_cfa_register 7
 5567 0006 7860     		str	r0, [r7, #4]
 5568 0008 0B46     		mov	r3, r1
 5569 000a FB70     		strb	r3, [r7, #3]
3108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 5570              		.loc 1 3112 0
 5571 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5572 000e 002B     		cmp	r3, #0
 5573 0010 08D0     		beq	.L166
3113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5574              		.loc 1 3115 0
 5575 0012 7B68     		ldr	r3, [r7, #4]
 5576 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5577 0016 9BB2     		uxth	r3, r3
 5578 0018 43F08003 		orr	r3, r3, #128
 5579 001c 9AB2     		uxth	r2, r3
 5580 001e 7B68     		ldr	r3, [r7, #4]
 5581 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 5582 0022 07E0     		b	.L165
 5583              	.L166:
3116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5584              		.loc 1 3120 0
 5585 0024 7B68     		ldr	r3, [r7, #4]
 5586 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5587 0028 9BB2     		uxth	r3, r3
 5588 002a 23F08003 		bic	r3, r3, #128
 5589 002e 9AB2     		uxth	r2, r3
 5590 0030 7B68     		ldr	r3, [r7, #4]
 5591 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 5592              	.L165:
3121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5593              		.loc 1 3122 0
 5594 0034 07F10C07 		add	r7, r7, #12
 5595 0038 BD46     		mov	sp, r7
 5596 003a 80BC     		pop	{r7}
 5597 003c 7047     		bx	lr
 5598              		.cfi_endproc
 5599              	.LFE196:
 5601 003e 00BF     		.section	.text.TIM_RemapConfig,"ax",%progbits
 5602              		.align	2
 5603              		.global	TIM_RemapConfig
 5604              		.thumb
 5605              		.thumb_func
 5607              	TIM_RemapConfig:
 5608              	.LFB197:
3123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5609              		.loc 1 3158 0
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 8
 5612              		@ frame_needed = 1, uses_anonymous_args = 0
 5613              		@ link register save eliminated.
 5614 0000 80B4     		push	{r7}
 5615              	.LCFI261:
 5616              		.cfi_def_cfa_offset 4
 5617 0002 83B0     		sub	sp, sp, #12
 5618              	.LCFI262:
 5619              		.cfi_def_cfa_offset 16
 5620 0004 00AF     		add	r7, sp, #0
 5621              		.cfi_offset 7, -4
 5622              	.LCFI263:
 5623              		.cfi_def_cfa_register 7
 5624 0006 7860     		str	r0, [r7, #4]
 5625 0008 0B46     		mov	r3, r1
 5626 000a 7B80     		strh	r3, [r7, #2]	@ movhi
3159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5627              		.loc 1 3164 0
 5628 000c 7B68     		ldr	r3, [r7, #4]
 5629 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5630 0010 A3F85020 		strh	r2, [r3, #80]	@ movhi
3165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5631              		.loc 1 3165 0
 5632 0014 07F10C07 		add	r7, r7, #12
 5633 0018 BD46     		mov	sp, r7
 5634 001a 80BC     		pop	{r7}
 5635 001c 7047     		bx	lr
 5636              		.cfi_endproc
 5637              	.LFE197:
 5639 001e 00BF     		.section	.text.TI1_Config,"ax",%progbits
 5640              		.align	2
 5641              		.thumb
 5642              		.thumb_func
 5644              	TI1_Config:
 5645              	.LFB198:
3166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5646              		.loc 1 3190 0
 5647              		.cfi_startproc
 5648              		@ args = 0, pretend = 0, frame = 24
 5649              		@ frame_needed = 1, uses_anonymous_args = 0
 5650              		@ link register save eliminated.
 5651 0000 80B4     		push	{r7}
 5652              	.LCFI264:
 5653              		.cfi_def_cfa_offset 4
 5654 0002 87B0     		sub	sp, sp, #28
 5655              	.LCFI265:
 5656              		.cfi_def_cfa_offset 32
 5657 0004 00AF     		add	r7, sp, #0
 5658              		.cfi_offset 7, -4
 5659              	.LCFI266:
 5660              		.cfi_def_cfa_register 7
 5661 0006 F860     		str	r0, [r7, #12]
 5662 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5663 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5664 000c FB80     		strh	r3, [r7, #6]	@ movhi
3191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5665              		.loc 1 3191 0
 5666 000e 4FF00003 		mov	r3, #0
 5667 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5668 0014 4FF00003 		mov	r3, #0
 5669 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5670              		.loc 1 3194 0
 5671 001a FB68     		ldr	r3, [r7, #12]
 5672 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5673 001e 9BB2     		uxth	r3, r3
 5674 0020 23F00103 		bic	r3, r3, #1
 5675 0024 9AB2     		uxth	r2, r3
 5676 0026 FB68     		ldr	r3, [r7, #12]
 5677 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5678              		.loc 1 3195 0
 5679 002a FB68     		ldr	r3, [r7, #12]
 5680 002c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5681 002e FB82     		strh	r3, [r7, #22]	@ movhi
3196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5682              		.loc 1 3196 0
 5683 0030 FB68     		ldr	r3, [r7, #12]
 5684 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5685 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5686              		.loc 1 3199 0
 5687 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5688 0038 23F0F303 		bic	r3, r3, #243
 5689 003c FB82     		strh	r3, [r7, #22]	@ movhi
3200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5690              		.loc 1 3200 0
 5691 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 5692 0040 4FEA0313 		lsl	r3, r3, #4
 5693 0044 9AB2     		uxth	r2, r3
 5694 0046 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5695 0048 42EA0303 		orr	r3, r2, r3
 5696 004c 9AB2     		uxth	r2, r3
 5697 004e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5698 0050 42EA0303 		orr	r3, r2, r3
 5699 0054 FB82     		strh	r3, [r7, #22]	@ movhi
3201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5700              		.loc 1 3203 0
 5701 0056 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5702 0058 23F00A03 		bic	r3, r3, #10
 5703 005c BB82     		strh	r3, [r7, #20]	@ movhi
3204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5704              		.loc 1 3204 0
 5705 005e 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5706 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5707 0062 42EA0303 		orr	r3, r2, r3
 5708 0066 9BB2     		uxth	r3, r3
 5709 0068 43F00103 		orr	r3, r3, #1
 5710 006c BB82     		strh	r3, [r7, #20]	@ movhi
3205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5711              		.loc 1 3207 0
 5712 006e FB68     		ldr	r3, [r7, #12]
 5713 0070 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5714 0072 1A83     		strh	r2, [r3, #24]	@ movhi
3208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5715              		.loc 1 3208 0
 5716 0074 FB68     		ldr	r3, [r7, #12]
 5717 0076 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5718 0078 1A84     		strh	r2, [r3, #32]	@ movhi
3209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5719              		.loc 1 3209 0
 5720 007a 07F11C07 		add	r7, r7, #28
 5721 007e BD46     		mov	sp, r7
 5722 0080 80BC     		pop	{r7}
 5723 0082 7047     		bx	lr
 5724              		.cfi_endproc
 5725              	.LFE198:
 5727              		.section	.text.TI2_Config,"ax",%progbits
 5728              		.align	2
 5729              		.thumb
 5730              		.thumb_func
 5732              	TI2_Config:
 5733              	.LFB199:
3210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5734              		.loc 1 3231 0
 5735              		.cfi_startproc
 5736              		@ args = 0, pretend = 0, frame = 24
 5737              		@ frame_needed = 1, uses_anonymous_args = 0
 5738              		@ link register save eliminated.
 5739 0000 80B4     		push	{r7}
 5740              	.LCFI267:
 5741              		.cfi_def_cfa_offset 4
 5742 0002 87B0     		sub	sp, sp, #28
 5743              	.LCFI268:
 5744              		.cfi_def_cfa_offset 32
 5745 0004 00AF     		add	r7, sp, #0
 5746              		.cfi_offset 7, -4
 5747              	.LCFI269:
 5748              		.cfi_def_cfa_register 7
 5749 0006 F860     		str	r0, [r7, #12]
 5750 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5751 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5752 000c FB80     		strh	r3, [r7, #6]	@ movhi
3232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5753              		.loc 1 3232 0
 5754 000e 4FF00003 		mov	r3, #0
 5755 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5756 0014 4FF00003 		mov	r3, #0
 5757 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5758 001a 4FF00003 		mov	r3, #0
 5759 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5760              		.loc 1 3235 0
 5761 0020 FB68     		ldr	r3, [r7, #12]
 5762 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5763 0024 9BB2     		uxth	r3, r3
 5764 0026 23F01003 		bic	r3, r3, #16
 5765 002a 9AB2     		uxth	r2, r3
 5766 002c FB68     		ldr	r3, [r7, #12]
 5767 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5768              		.loc 1 3236 0
 5769 0030 FB68     		ldr	r3, [r7, #12]
 5770 0032 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5771 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5772              		.loc 1 3237 0
 5773 0036 FB68     		ldr	r3, [r7, #12]
 5774 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5775 003a BB82     		strh	r3, [r7, #20]	@ movhi
3238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5776              		.loc 1 3238 0
 5777 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5778 003e 4FEA0313 		lsl	r3, r3, #4
 5779 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5780              		.loc 1 3241 0
 5781 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5782 0046 23F44073 		bic	r3, r3, #768
 5783 004a 4FEA0353 		lsl	r3, r3, #20
 5784 004e 4FEA1353 		lsr	r3, r3, #20
 5785 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5786              		.loc 1 3242 0
 5787 0054 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5788 0056 4FEA0333 		lsl	r3, r3, #12
 5789 005a 9AB2     		uxth	r2, r3
 5790 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5791 005e 42EA0303 		orr	r3, r2, r3
 5792 0062 FB82     		strh	r3, [r7, #22]	@ movhi
3243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5793              		.loc 1 3243 0
 5794 0064 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5795 0066 4FEA0323 		lsl	r3, r3, #8
 5796 006a 9AB2     		uxth	r2, r3
 5797 006c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5798 006e 42EA0303 		orr	r3, r2, r3
 5799 0072 FB82     		strh	r3, [r7, #22]	@ movhi
3244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5800              		.loc 1 3246 0
 5801 0074 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5802 0076 23F0A003 		bic	r3, r3, #160
 5803 007a BB82     		strh	r3, [r7, #20]	@ movhi
3247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5804              		.loc 1 3247 0
 5805 007c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5806 007e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5807 0080 42EA0303 		orr	r3, r2, r3
 5808 0084 9BB2     		uxth	r3, r3
 5809 0086 43F01003 		orr	r3, r3, #16
 5810 008a BB82     		strh	r3, [r7, #20]	@ movhi
3248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5811              		.loc 1 3250 0
 5812 008c FB68     		ldr	r3, [r7, #12]
 5813 008e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5814 0090 1A83     		strh	r2, [r3, #24]	@ movhi
3251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5815              		.loc 1 3251 0
 5816 0092 FB68     		ldr	r3, [r7, #12]
 5817 0094 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5818 0096 1A84     		strh	r2, [r3, #32]	@ movhi
3252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5819              		.loc 1 3252 0
 5820 0098 07F11C07 		add	r7, r7, #28
 5821 009c BD46     		mov	sp, r7
 5822 009e 80BC     		pop	{r7}
 5823 00a0 7047     		bx	lr
 5824              		.cfi_endproc
 5825              	.LFE199:
 5827 00a2 00BF     		.section	.text.TI3_Config,"ax",%progbits
 5828              		.align	2
 5829              		.thumb
 5830              		.thumb_func
 5832              	TI3_Config:
 5833              	.LFB200:
3253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5834              		.loc 1 3273 0
 5835              		.cfi_startproc
 5836              		@ args = 0, pretend = 0, frame = 24
 5837              		@ frame_needed = 1, uses_anonymous_args = 0
 5838              		@ link register save eliminated.
 5839 0000 80B4     		push	{r7}
 5840              	.LCFI270:
 5841              		.cfi_def_cfa_offset 4
 5842 0002 87B0     		sub	sp, sp, #28
 5843              	.LCFI271:
 5844              		.cfi_def_cfa_offset 32
 5845 0004 00AF     		add	r7, sp, #0
 5846              		.cfi_offset 7, -4
 5847              	.LCFI272:
 5848              		.cfi_def_cfa_register 7
 5849 0006 F860     		str	r0, [r7, #12]
 5850 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5851 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5852 000c FB80     		strh	r3, [r7, #6]	@ movhi
3274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5853              		.loc 1 3274 0
 5854 000e 4FF00003 		mov	r3, #0
 5855 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5856 0014 4FF00003 		mov	r3, #0
 5857 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5858 001a 4FF00003 		mov	r3, #0
 5859 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5860              		.loc 1 3277 0
 5861 0020 FB68     		ldr	r3, [r7, #12]
 5862 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5863 0024 9BB2     		uxth	r3, r3
 5864 0026 23F48073 		bic	r3, r3, #256
 5865 002a 9AB2     		uxth	r2, r3
 5866 002c FB68     		ldr	r3, [r7, #12]
 5867 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5868              		.loc 1 3278 0
 5869 0030 FB68     		ldr	r3, [r7, #12]
 5870 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5871 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5872              		.loc 1 3279 0
 5873 0036 FB68     		ldr	r3, [r7, #12]
 5874 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5875 003a BB82     		strh	r3, [r7, #20]	@ movhi
3280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5876              		.loc 1 3280 0
 5877 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5878 003e 4FEA0323 		lsl	r3, r3, #8
 5879 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5880              		.loc 1 3283 0
 5881 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5882 0046 23F0F303 		bic	r3, r3, #243
 5883 004a FB82     		strh	r3, [r7, #22]	@ movhi
3284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5884              		.loc 1 3284 0
 5885 004c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5886 004e 4FEA0313 		lsl	r3, r3, #4
 5887 0052 9AB2     		uxth	r2, r3
 5888 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5889 0056 42EA0303 		orr	r3, r2, r3
 5890 005a 9AB2     		uxth	r2, r3
 5891 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5892 005e 42EA0303 		orr	r3, r2, r3
 5893 0062 FB82     		strh	r3, [r7, #22]	@ movhi
3285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5894              		.loc 1 3287 0
 5895 0064 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5896 0066 23F42063 		bic	r3, r3, #2560
 5897 006a BB82     		strh	r3, [r7, #20]	@ movhi
3288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5898              		.loc 1 3288 0
 5899 006c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5900 006e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5901 0070 42EA0303 		orr	r3, r2, r3
 5902 0074 9BB2     		uxth	r3, r3
 5903 0076 43F48073 		orr	r3, r3, #256
 5904 007a BB82     		strh	r3, [r7, #20]	@ movhi
3289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5905              		.loc 1 3291 0
 5906 007c FB68     		ldr	r3, [r7, #12]
 5907 007e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5908 0080 9A83     		strh	r2, [r3, #28]	@ movhi
3292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5909              		.loc 1 3292 0
 5910 0082 FB68     		ldr	r3, [r7, #12]
 5911 0084 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5912 0086 1A84     		strh	r2, [r3, #32]	@ movhi
3293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5913              		.loc 1 3293 0
 5914 0088 07F11C07 		add	r7, r7, #28
 5915 008c BD46     		mov	sp, r7
 5916 008e 80BC     		pop	{r7}
 5917 0090 7047     		bx	lr
 5918              		.cfi_endproc
 5919              	.LFE200:
 5921 0092 00BF     		.section	.text.TI4_Config,"ax",%progbits
 5922              		.align	2
 5923              		.thumb
 5924              		.thumb_func
 5926              	TI4_Config:
 5927              	.LFB201:
3294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5928              		.loc 1 3314 0
 5929              		.cfi_startproc
 5930              		@ args = 0, pretend = 0, frame = 24
 5931              		@ frame_needed = 1, uses_anonymous_args = 0
 5932              		@ link register save eliminated.
 5933 0000 80B4     		push	{r7}
 5934              	.LCFI273:
 5935              		.cfi_def_cfa_offset 4
 5936 0002 87B0     		sub	sp, sp, #28
 5937              	.LCFI274:
 5938              		.cfi_def_cfa_offset 32
 5939 0004 00AF     		add	r7, sp, #0
 5940              		.cfi_offset 7, -4
 5941              	.LCFI275:
 5942              		.cfi_def_cfa_register 7
 5943 0006 F860     		str	r0, [r7, #12]
 5944 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5945 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5946 000c FB80     		strh	r3, [r7, #6]	@ movhi
3315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5947              		.loc 1 3315 0
 5948 000e 4FF00003 		mov	r3, #0
 5949 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5950 0014 4FF00003 		mov	r3, #0
 5951 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5952 001a 4FF00003 		mov	r3, #0
 5953 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 5954              		.loc 1 3318 0
 5955 0020 FB68     		ldr	r3, [r7, #12]
 5956 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5957 0024 9BB2     		uxth	r3, r3
 5958 0026 23F48053 		bic	r3, r3, #4096
 5959 002a 9AB2     		uxth	r2, r3
 5960 002c FB68     		ldr	r3, [r7, #12]
 5961 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5962              		.loc 1 3319 0
 5963 0030 FB68     		ldr	r3, [r7, #12]
 5964 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5965 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5966              		.loc 1 3320 0
 5967 0036 FB68     		ldr	r3, [r7, #12]
 5968 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5969 003a BB82     		strh	r3, [r7, #20]	@ movhi
3321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 5970              		.loc 1 3321 0
 5971 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5972 003e 4FEA0333 		lsl	r3, r3, #12
 5973 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5974              		.loc 1 3324 0
 5975 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5976 0046 23F44073 		bic	r3, r3, #768
 5977 004a 4FEA0353 		lsl	r3, r3, #20
 5978 004e 4FEA1353 		lsr	r3, r3, #20
 5979 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 5980              		.loc 1 3325 0
 5981 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5982 0056 4FEA0323 		lsl	r3, r3, #8
 5983 005a 9AB2     		uxth	r2, r3
 5984 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5985 005e 42EA0303 		orr	r3, r2, r3
 5986 0062 FB82     		strh	r3, [r7, #22]	@ movhi
3326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 5987              		.loc 1 3326 0
 5988 0064 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5989 0066 4FEA0333 		lsl	r3, r3, #12
 5990 006a 9AB2     		uxth	r2, r3
 5991 006c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5992 006e 42EA0303 		orr	r3, r2, r3
 5993 0072 FB82     		strh	r3, [r7, #22]	@ movhi
3327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 5994              		.loc 1 3329 0
 5995 0074 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5996 0076 23F40053 		bic	r3, r3, #8192
 5997 007a 4FEA4343 		lsl	r3, r3, #17
 5998 007e 4FEA5343 		lsr	r3, r3, #17
 5999 0082 BB82     		strh	r3, [r7, #20]	@ movhi
3330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 6000              		.loc 1 3330 0
 6001 0084 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 6002 0086 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6003 0088 42EA0303 		orr	r3, r2, r3
 6004 008c 9BB2     		uxth	r3, r3
 6005 008e 43F48053 		orr	r3, r3, #4096
 6006 0092 BB82     		strh	r3, [r7, #20]	@ movhi
3331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6007              		.loc 1 3333 0
 6008 0094 FB68     		ldr	r3, [r7, #12]
 6009 0096 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 6010 0098 9A83     		strh	r2, [r3, #28]	@ movhi
3334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 6011              		.loc 1 3334 0
 6012 009a FB68     		ldr	r3, [r7, #12]
 6013 009c BA8A     		ldrh	r2, [r7, #20]	@ movhi
 6014 009e 1A84     		strh	r2, [r3, #32]	@ movhi
3335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 6015              		.loc 1 3335 0
 6016 00a0 07F11C07 		add	r7, r7, #28
 6017 00a4 BD46     		mov	sp, r7
 6018 00a6 80BC     		pop	{r7}
 6019 00a8 7047     		bx	lr
 6020              		.cfi_endproc
 6021              	.LFE201:
 6023 00aa 00BF     		.text
 6024              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
     /tmp/ccKU5KiE.s:25     .text.TIM_DeInit:00000000 $t
     /tmp/ccKU5KiE.s:30     .text.TIM_DeInit:00000000 TIM_DeInit
     /tmp/ccKU5KiE.s:264    .text.TIM_DeInit:000001ec $d
     /tmp/ccKU5KiE.s:281    .text.TIM_TimeBaseInit:00000000 $t
     /tmp/ccKU5KiE.s:286    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
     /tmp/ccKU5KiE.s:417    .text.TIM_TimeBaseInit:000000c0 $d
     /tmp/ccKU5KiE.s:428    .text.TIM_TimeBaseStructInit:00000000 $t
     /tmp/ccKU5KiE.s:433    .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
     /tmp/ccKU5KiE.s:480    .text.TIM_PrescalerConfig:00000000 $t
     /tmp/ccKU5KiE.s:485    .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
     /tmp/ccKU5KiE.s:524    .text.TIM_CounterModeConfig:00000000 $t
     /tmp/ccKU5KiE.s:529    .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
     /tmp/ccKU5KiE.s:578    .text.TIM_SetCounter:00000000 $t
     /tmp/ccKU5KiE.s:583    .text.TIM_SetCounter:00000000 TIM_SetCounter
     /tmp/ccKU5KiE.s:615    .text.TIM_SetAutoreload:00000000 $t
     /tmp/ccKU5KiE.s:620    .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
     /tmp/ccKU5KiE.s:652    .text.TIM_GetCounter:00000000 $t
     /tmp/ccKU5KiE.s:657    .text.TIM_GetCounter:00000000 TIM_GetCounter
     /tmp/ccKU5KiE.s:688    .text.TIM_GetPrescaler:00000000 $t
     /tmp/ccKU5KiE.s:693    .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
     /tmp/ccKU5KiE.s:725    .text.TIM_UpdateDisableConfig:00000000 $t
     /tmp/ccKU5KiE.s:730    .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
     /tmp/ccKU5KiE.s:782    .text.TIM_UpdateRequestConfig:00000000 $t
     /tmp/ccKU5KiE.s:787    .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
     /tmp/ccKU5KiE.s:839    .text.TIM_ARRPreloadConfig:00000000 $t
     /tmp/ccKU5KiE.s:844    .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
     /tmp/ccKU5KiE.s:896    .text.TIM_SelectOnePulseMode:00000000 $t
     /tmp/ccKU5KiE.s:901    .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
     /tmp/ccKU5KiE.s:947    .text.TIM_SetClockDivision:00000000 $t
     /tmp/ccKU5KiE.s:952    .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
     /tmp/ccKU5KiE.s:998    .text.TIM_Cmd:00000000 $t
     /tmp/ccKU5KiE.s:1003   .text.TIM_Cmd:00000000 TIM_Cmd
     /tmp/ccKU5KiE.s:1055   .text.TIM_OC1Init:00000000 $t
     /tmp/ccKU5KiE.s:1060   .text.TIM_OC1Init:00000000 TIM_OC1Init
     /tmp/ccKU5KiE.s:1213   .text.TIM_OC1Init:00000100 $d
     /tmp/ccKU5KiE.s:1219   .text.TIM_OC2Init:00000000 $t
     /tmp/ccKU5KiE.s:1224   .text.TIM_OC2Init:00000000 TIM_OC2Init
     /tmp/ccKU5KiE.s:1391   .text.TIM_OC2Init:00000128 $d
     /tmp/ccKU5KiE.s:1397   .text.TIM_OC3Init:00000000 $t
     /tmp/ccKU5KiE.s:1402   .text.TIM_OC3Init:00000000 TIM_OC3Init
     /tmp/ccKU5KiE.s:1567   .text.TIM_OC3Init:00000124 $d
     /tmp/ccKU5KiE.s:1573   .text.TIM_OC4Init:00000000 $t
     /tmp/ccKU5KiE.s:1578   .text.TIM_OC4Init:00000000 TIM_OC4Init
     /tmp/ccKU5KiE.s:1709   .text.TIM_OC4Init:000000dc $d
     /tmp/ccKU5KiE.s:1715   .text.TIM_OCStructInit:00000000 $t
     /tmp/ccKU5KiE.s:1720   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
     /tmp/ccKU5KiE.s:1779   .text.TIM_SelectOCxM:00000000 $t
     /tmp/ccKU5KiE.s:1784   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
     /tmp/ccKU5KiE.s:1902   .text.TIM_SetCompare1:00000000 $t
     /tmp/ccKU5KiE.s:1907   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
     /tmp/ccKU5KiE.s:1939   .text.TIM_SetCompare2:00000000 $t
     /tmp/ccKU5KiE.s:1944   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
     /tmp/ccKU5KiE.s:1976   .text.TIM_SetCompare3:00000000 $t
     /tmp/ccKU5KiE.s:1981   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
     /tmp/ccKU5KiE.s:2013   .text.TIM_SetCompare4:00000000 $t
     /tmp/ccKU5KiE.s:2018   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
     /tmp/ccKU5KiE.s:2050   .text.TIM_ForcedOC1Config:00000000 $t
     /tmp/ccKU5KiE.s:2055   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
     /tmp/ccKU5KiE.s:2104   .text.TIM_ForcedOC2Config:00000000 $t
     /tmp/ccKU5KiE.s:2109   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
     /tmp/ccKU5KiE.s:2160   .text.TIM_ForcedOC3Config:00000000 $t
     /tmp/ccKU5KiE.s:2165   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
     /tmp/ccKU5KiE.s:2214   .text.TIM_ForcedOC4Config:00000000 $t
     /tmp/ccKU5KiE.s:2219   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
     /tmp/ccKU5KiE.s:2270   .text.TIM_OC1PreloadConfig:00000000 $t
     /tmp/ccKU5KiE.s:2275   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
     /tmp/ccKU5KiE.s:2324   .text.TIM_OC2PreloadConfig:00000000 $t
     /tmp/ccKU5KiE.s:2329   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
     /tmp/ccKU5KiE.s:2380   .text.TIM_OC3PreloadConfig:00000000 $t
     /tmp/ccKU5KiE.s:2385   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
     /tmp/ccKU5KiE.s:2434   .text.TIM_OC4PreloadConfig:00000000 $t
     /tmp/ccKU5KiE.s:2439   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
     /tmp/ccKU5KiE.s:2490   .text.TIM_OC1FastConfig:00000000 $t
     /tmp/ccKU5KiE.s:2495   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
     /tmp/ccKU5KiE.s:2544   .text.TIM_OC2FastConfig:00000000 $t
     /tmp/ccKU5KiE.s:2549   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
     /tmp/ccKU5KiE.s:2600   .text.TIM_OC3FastConfig:00000000 $t
     /tmp/ccKU5KiE.s:2605   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
     /tmp/ccKU5KiE.s:2654   .text.TIM_OC4FastConfig:00000000 $t
     /tmp/ccKU5KiE.s:2659   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
     /tmp/ccKU5KiE.s:2710   .text.TIM_ClearOC1Ref:00000000 $t
     /tmp/ccKU5KiE.s:2715   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
     /tmp/ccKU5KiE.s:2764   .text.TIM_ClearOC2Ref:00000000 $t
     /tmp/ccKU5KiE.s:2769   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
     /tmp/ccKU5KiE.s:2821   .text.TIM_ClearOC3Ref:00000000 $t
     /tmp/ccKU5KiE.s:2826   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
     /tmp/ccKU5KiE.s:2875   .text.TIM_ClearOC4Ref:00000000 $t
     /tmp/ccKU5KiE.s:2880   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
     /tmp/ccKU5KiE.s:2932   .text.TIM_OC1PolarityConfig:00000000 $t
     /tmp/ccKU5KiE.s:2937   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
     /tmp/ccKU5KiE.s:2986   .text.TIM_OC1NPolarityConfig:00000000 $t
     /tmp/ccKU5KiE.s:2991   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
     /tmp/ccKU5KiE.s:3040   .text.TIM_OC2PolarityConfig:00000000 $t
     /tmp/ccKU5KiE.s:3045   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
     /tmp/ccKU5KiE.s:3096   .text.TIM_OC2NPolarityConfig:00000000 $t
     /tmp/ccKU5KiE.s:3101   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
     /tmp/ccKU5KiE.s:3152   .text.TIM_OC3PolarityConfig:00000000 $t
     /tmp/ccKU5KiE.s:3157   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
     /tmp/ccKU5KiE.s:3208   .text.TIM_OC3NPolarityConfig:00000000 $t
     /tmp/ccKU5KiE.s:3213   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
     /tmp/ccKU5KiE.s:3264   .text.TIM_OC4PolarityConfig:00000000 $t
     /tmp/ccKU5KiE.s:3269   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
     /tmp/ccKU5KiE.s:3320   .text.TIM_CCxCmd:00000000 $t
     /tmp/ccKU5KiE.s:3325   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
     /tmp/ccKU5KiE.s:3387   .text.TIM_CCxNCmd:00000000 $t
     /tmp/ccKU5KiE.s:3392   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
     /tmp/ccKU5KiE.s:3454   .text.TIM_ICInit:00000000 $t
     /tmp/ccKU5KiE.s:3459   .text.TIM_ICInit:00000000 TIM_ICInit
     /tmp/ccKU5KiE.s:5644   .text.TI1_Config:00000000 TI1_Config
     /tmp/ccKU5KiE.s:3919   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
     /tmp/ccKU5KiE.s:5732   .text.TI2_Config:00000000 TI2_Config
     /tmp/ccKU5KiE.s:3970   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
     /tmp/ccKU5KiE.s:5832   .text.TI3_Config:00000000 TI3_Config
     /tmp/ccKU5KiE.s:4023   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
     /tmp/ccKU5KiE.s:5926   .text.TI4_Config:00000000 TI4_Config
     /tmp/ccKU5KiE.s:4074   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
     /tmp/ccKU5KiE.s:3584   .text.TIM_ICStructInit:00000000 $t
     /tmp/ccKU5KiE.s:3589   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
     /tmp/ccKU5KiE.s:3636   .text.TIM_PWMIConfig:00000000 $t
     /tmp/ccKU5KiE.s:3641   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
     /tmp/ccKU5KiE.s:3770   .text.TIM_GetCapture1:00000000 $t
     /tmp/ccKU5KiE.s:3775   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
     /tmp/ccKU5KiE.s:3806   .text.TIM_GetCapture2:00000000 $t
     /tmp/ccKU5KiE.s:3811   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
     /tmp/ccKU5KiE.s:3842   .text.TIM_GetCapture3:00000000 $t
     /tmp/ccKU5KiE.s:3847   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
     /tmp/ccKU5KiE.s:3878   .text.TIM_GetCapture4:00000000 $t
     /tmp/ccKU5KiE.s:3883   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
     /tmp/ccKU5KiE.s:3914   .text.TIM_SetIC1Prescaler:00000000 $t
     /tmp/ccKU5KiE.s:3965   .text.TIM_SetIC2Prescaler:00000000 $t
     /tmp/ccKU5KiE.s:4018   .text.TIM_SetIC3Prescaler:00000000 $t
     /tmp/ccKU5KiE.s:4069   .text.TIM_SetIC4Prescaler:00000000 $t
     /tmp/ccKU5KiE.s:4122   .text.TIM_BDTRConfig:00000000 $t
     /tmp/ccKU5KiE.s:4127   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
     /tmp/ccKU5KiE.s:4194   .text.TIM_BDTRStructInit:00000000 $t
     /tmp/ccKU5KiE.s:4199   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
     /tmp/ccKU5KiE.s:4254   .text.TIM_CtrlPWMOutputs:00000000 $t
     /tmp/ccKU5KiE.s:4259   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
     /tmp/ccKU5KiE.s:4313   .text.TIM_SelectCOM:00000000 $t
     /tmp/ccKU5KiE.s:4318   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
     /tmp/ccKU5KiE.s:4370   .text.TIM_CCPreloadControl:00000000 $t
     /tmp/ccKU5KiE.s:4375   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
     /tmp/ccKU5KiE.s:4427   .text.TIM_ITConfig:00000000 $t
     /tmp/ccKU5KiE.s:4432   .text.TIM_ITConfig:00000000 TIM_ITConfig
     /tmp/ccKU5KiE.s:4490   .text.TIM_GenerateEvent:00000000 $t
     /tmp/ccKU5KiE.s:4495   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
     /tmp/ccKU5KiE.s:4528   .text.TIM_GetFlagStatus:00000000 $t
     /tmp/ccKU5KiE.s:4533   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
     /tmp/ccKU5KiE.s:4586   .text.TIM_ClearFlag:00000000 $t
     /tmp/ccKU5KiE.s:4591   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
     /tmp/ccKU5KiE.s:4626   .text.TIM_GetITStatus:00000000 $t
     /tmp/ccKU5KiE.s:4631   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
     /tmp/ccKU5KiE.s:4702   .text.TIM_ClearITPendingBit:00000000 $t
     /tmp/ccKU5KiE.s:4707   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
     /tmp/ccKU5KiE.s:4742   .text.TIM_DMAConfig:00000000 $t
     /tmp/ccKU5KiE.s:4747   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
     /tmp/ccKU5KiE.s:4785   .text.TIM_DMACmd:00000000 $t
     /tmp/ccKU5KiE.s:4790   .text.TIM_DMACmd:00000000 TIM_DMACmd
     /tmp/ccKU5KiE.s:4848   .text.TIM_SelectCCDMA:00000000 $t
     /tmp/ccKU5KiE.s:4853   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
     /tmp/ccKU5KiE.s:4905   .text.TIM_InternalClockConfig:00000000 $t
     /tmp/ccKU5KiE.s:4910   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
     /tmp/ccKU5KiE.s:4945   .text.TIM_ITRxExternalClockConfig:00000000 $t
     /tmp/ccKU5KiE.s:4950   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
     /tmp/ccKU5KiE.s:5179   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
     /tmp/ccKU5KiE.s:4991   .text.TIM_TIxExternalClockConfig:00000000 $t
     /tmp/ccKU5KiE.s:4996   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
     /tmp/ccKU5KiE.s:5059   .text.TIM_ETRClockMode1Config:00000000 $t
     /tmp/ccKU5KiE.s:5064   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
     /tmp/ccKU5KiE.s:5386   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
     /tmp/ccKU5KiE.s:5126   .text.TIM_ETRClockMode2Config:00000000 $t
     /tmp/ccKU5KiE.s:5131   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
     /tmp/ccKU5KiE.s:5174   .text.TIM_SelectInputTrigger:00000000 $t
     /tmp/ccKU5KiE.s:5228   .text.TIM_SelectOutputTrigger:00000000 $t
     /tmp/ccKU5KiE.s:5233   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
     /tmp/ccKU5KiE.s:5279   .text.TIM_SelectSlaveMode:00000000 $t
     /tmp/ccKU5KiE.s:5284   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
     /tmp/ccKU5KiE.s:5330   .text.TIM_SelectMasterSlaveMode:00000000 $t
     /tmp/ccKU5KiE.s:5335   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
     /tmp/ccKU5KiE.s:5381   .text.TIM_ETRConfig:00000000 $t
     /tmp/ccKU5KiE.s:5444   .text.TIM_EncoderInterfaceConfig:00000000 $t
     /tmp/ccKU5KiE.s:5449   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
     /tmp/ccKU5KiE.s:5545   .text.TIM_SelectHallSensor:00000000 $t
     /tmp/ccKU5KiE.s:5550   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
     /tmp/ccKU5KiE.s:5602   .text.TIM_RemapConfig:00000000 $t
     /tmp/ccKU5KiE.s:5607   .text.TIM_RemapConfig:00000000 TIM_RemapConfig
     /tmp/ccKU5KiE.s:5640   .text.TI1_Config:00000000 $t
     /tmp/ccKU5KiE.s:5728   .text.TI2_Config:00000000 $t
     /tmp/ccKU5KiE.s:5828   .text.TI3_Config:00000000 $t
     /tmp/ccKU5KiE.s:5922   .text.TI4_Config:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
