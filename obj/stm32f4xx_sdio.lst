   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_sdio.c"
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.SDIO_DeInit,"ax",%progbits
  25              		.align	2
  26              		.global	SDIO_DeInit
  27              		.thumb
  28              		.thumb_func
  30              	SDIO_DeInit:
  31              	.LFB110:
  32              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  33              		.loc 1 260 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 14, -4
  42              		.cfi_offset 7, -8
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  45              		.loc 1 261 0
  46 0004 4FF40060 		mov	r0, #2048
  47 0008 4FF00101 		mov	r1, #1
  48 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  49              		.loc 1 262 0
  50 0010 4FF40060 		mov	r0, #2048
  51 0014 4FF00001 		mov	r1, #0
  52 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
  53              		.loc 1 263 0
  54 001c 80BD     		pop	{r7, pc}
  55              		.cfi_endproc
  56              	.LFE110:
  58 001e 00BF     		.section	.text.SDIO_Init,"ax",%progbits
  59              		.align	2
  60              		.global	SDIO_Init
  61              		.thumb
  62              		.thumb_func
  64              	SDIO_Init:
  65              	.LFB111:
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  66              		.loc 1 273 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 16
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 0000 80B4     		push	{r7}
  72              	.LCFI2:
  73              		.cfi_def_cfa_offset 4
  74 0002 85B0     		sub	sp, sp, #20
  75              	.LCFI3:
  76              		.cfi_def_cfa_offset 24
  77 0004 00AF     		add	r7, sp, #0
  78              		.cfi_offset 7, -4
  79              	.LCFI4:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
  82              		.loc 1 274 0
  83 0008 4FF00003 		mov	r3, #0
  84 000c FB60     		str	r3, [r7, #12]
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  85              		.loc 1 285 0
  86 000e 144B     		ldr	r3, .L3
  87 0010 5B68     		ldr	r3, [r3, #4]
  88 0012 FB60     		str	r3, [r7, #12]
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  89              		.loc 1 288 0
  90 0014 FB68     		ldr	r3, [r7, #12]
  91 0016 23F4FC43 		bic	r3, r3, #32256
  92 001a 23F0FF03 		bic	r3, r3, #255
  93 001e FB60     		str	r3, [r7, #12]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  94              		.loc 1 296 0
  95 0020 7B68     		ldr	r3, [r7, #4]
  96 0022 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  97 0024 1A46     		mov	r2, r3
  98 0026 7B68     		ldr	r3, [r7, #4]
  99 0028 9B68     		ldr	r3, [r3, #8]
 100 002a 1A43     		orrs	r2, r2, r3
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 101              		.loc 1 297 0
 102 002c 7B68     		ldr	r3, [r7, #4]
 103 002e 5B68     		ldr	r3, [r3, #4]
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 104              		.loc 1 296 0
 105 0030 1A43     		orrs	r2, r2, r3
 106              		.loc 1 297 0
 107 0032 7B68     		ldr	r3, [r7, #4]
 108 0034 DB68     		ldr	r3, [r3, #12]
 109 0036 1A43     		orrs	r2, r2, r3
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 110              		.loc 1 298 0
 111 0038 7B68     		ldr	r3, [r7, #4]
 112 003a 1B68     		ldr	r3, [r3, #0]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 113              		.loc 1 297 0
 114 003c 1A43     		orrs	r2, r2, r3
 115              		.loc 1 298 0
 116 003e 7B68     		ldr	r3, [r7, #4]
 117 0040 1B69     		ldr	r3, [r3, #16]
 118 0042 42EA0303 		orr	r3, r2, r3
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 119              		.loc 1 296 0
 120 0046 FA68     		ldr	r2, [r7, #12]
 121 0048 42EA0303 		orr	r3, r2, r3
 122 004c FB60     		str	r3, [r7, #12]
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 123              		.loc 1 301 0
 124 004e 044B     		ldr	r3, .L3
 125 0050 FA68     		ldr	r2, [r7, #12]
 126 0052 5A60     		str	r2, [r3, #4]
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 127              		.loc 1 302 0
 128 0054 07F11407 		add	r7, r7, #20
 129 0058 BD46     		mov	sp, r7
 130 005a 80BC     		pop	{r7}
 131 005c 7047     		bx	lr
 132              	.L4:
 133 005e 00BF     		.align	2
 134              	.L3:
 135 0060 002C0140 		.word	1073818624
 136              		.cfi_endproc
 137              	.LFE111:
 139              		.section	.text.SDIO_StructInit,"ax",%progbits
 140              		.align	2
 141              		.global	SDIO_StructInit
 142              		.thumb
 143              		.thumb_func
 145              	SDIO_StructInit:
 146              	.LFB112:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 147              		.loc 1 311 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 8
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 4
 155 0002 83B0     		sub	sp, sp, #12
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 16
 158 0004 00AF     		add	r7, sp, #0
 159              		.cfi_offset 7, -4
 160              	.LCFI7:
 161              		.cfi_def_cfa_register 7
 162 0006 7860     		str	r0, [r7, #4]
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 163              		.loc 1 313 0
 164 0008 7B68     		ldr	r3, [r7, #4]
 165 000a 4FF00002 		mov	r2, #0
 166 000e 1A75     		strb	r2, [r3, #20]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 167              		.loc 1 314 0
 168 0010 7B68     		ldr	r3, [r7, #4]
 169 0012 4FF00002 		mov	r2, #0
 170 0016 1A60     		str	r2, [r3, #0]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 171              		.loc 1 315 0
 172 0018 7B68     		ldr	r3, [r7, #4]
 173 001a 4FF00002 		mov	r2, #0
 174 001e 5A60     		str	r2, [r3, #4]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 175              		.loc 1 316 0
 176 0020 7B68     		ldr	r3, [r7, #4]
 177 0022 4FF00002 		mov	r2, #0
 178 0026 9A60     		str	r2, [r3, #8]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 179              		.loc 1 317 0
 180 0028 7B68     		ldr	r3, [r7, #4]
 181 002a 4FF00002 		mov	r2, #0
 182 002e DA60     		str	r2, [r3, #12]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 183              		.loc 1 318 0
 184 0030 7B68     		ldr	r3, [r7, #4]
 185 0032 4FF00002 		mov	r2, #0
 186 0036 1A61     		str	r2, [r3, #16]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 187              		.loc 1 319 0
 188 0038 07F10C07 		add	r7, r7, #12
 189 003c BD46     		mov	sp, r7
 190 003e 80BC     		pop	{r7}
 191 0040 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE112:
 195 0042 00BF     		.section	.text.SDIO_ClockCmd,"ax",%progbits
 196              		.align	2
 197              		.global	SDIO_ClockCmd
 198              		.thumb
 199              		.thumb_func
 201              	SDIO_ClockCmd:
 202              	.LFB113:
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 203              		.loc 1 328 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208 0000 80B4     		push	{r7}
 209              	.LCFI8:
 210              		.cfi_def_cfa_offset 4
 211 0002 83B0     		sub	sp, sp, #12
 212              	.LCFI9:
 213              		.cfi_def_cfa_offset 16
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_offset 7, -4
 216              	.LCFI10:
 217              		.cfi_def_cfa_register 7
 218 0006 0346     		mov	r3, r0
 219 0008 FB71     		strb	r3, [r7, #7]
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 220              		.loc 1 332 0
 221 000a 044B     		ldr	r3, .L7
 222 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 223 000e 1A60     		str	r2, [r3, #0]
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 224              		.loc 1 333 0
 225 0010 07F10C07 		add	r7, r7, #12
 226 0014 BD46     		mov	sp, r7
 227 0016 80BC     		pop	{r7}
 228 0018 7047     		bx	lr
 229              	.L8:
 230 001a 00BF     		.align	2
 231              	.L7:
 232 001c A0802542 		.word	1109754016
 233              		.cfi_endproc
 234              	.LFE113:
 236              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 237              		.align	2
 238              		.global	SDIO_SetPowerState
 239              		.thumb
 240              		.thumb_func
 242              	SDIO_SetPowerState:
 243              	.LFB114:
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 244              		.loc 1 344 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              	.LCFI11:
 251              		.cfi_def_cfa_offset 4
 252 0002 83B0     		sub	sp, sp, #12
 253              	.LCFI12:
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_offset 7, -4
 257              	.LCFI13:
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 260              		.loc 1 348 0
 261 0008 034B     		ldr	r3, .L10
 262 000a 7A68     		ldr	r2, [r7, #4]
 263 000c 1A60     		str	r2, [r3, #0]
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 264              		.loc 1 349 0
 265 000e 07F10C07 		add	r7, r7, #12
 266 0012 BD46     		mov	sp, r7
 267 0014 80BC     		pop	{r7}
 268 0016 7047     		bx	lr
 269              	.L11:
 270              		.align	2
 271              	.L10:
 272 0018 002C0140 		.word	1073818624
 273              		.cfi_endproc
 274              	.LFE114:
 276              		.section	.text.SDIO_GetPowerState,"ax",%progbits
 277              		.align	2
 278              		.global	SDIO_GetPowerState
 279              		.thumb
 280              		.thumb_func
 282              	SDIO_GetPowerState:
 283              	.LFB115:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 284              		.loc 1 361 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              	.LCFI14:
 291              		.cfi_def_cfa_offset 4
 292 0002 00AF     		add	r7, sp, #0
 293              		.cfi_offset 7, -4
 294              	.LCFI15:
 295              		.cfi_def_cfa_register 7
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 296              		.loc 1 362 0
 297 0004 034B     		ldr	r3, .L13
 298 0006 1B68     		ldr	r3, [r3, #0]
 299 0008 03F00303 		and	r3, r3, #3
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 300              		.loc 1 363 0
 301 000c 1846     		mov	r0, r3
 302 000e BD46     		mov	sp, r7
 303 0010 80BC     		pop	{r7}
 304 0012 7047     		bx	lr
 305              	.L14:
 306              		.align	2
 307              	.L13:
 308 0014 002C0140 		.word	1073818624
 309              		.cfi_endproc
 310              	.LFE115:
 312              		.section	.text.SDIO_SendCommand,"ax",%progbits
 313              		.align	2
 314              		.global	SDIO_SendCommand
 315              		.thumb
 316              		.thumb_func
 318              	SDIO_SendCommand:
 319              	.LFB116:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 320              		.loc 1 393 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 16
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325 0000 80B4     		push	{r7}
 326              	.LCFI16:
 327              		.cfi_def_cfa_offset 4
 328 0002 85B0     		sub	sp, sp, #20
 329              	.LCFI17:
 330              		.cfi_def_cfa_offset 24
 331 0004 00AF     		add	r7, sp, #0
 332              		.cfi_offset 7, -4
 333              	.LCFI18:
 334              		.cfi_def_cfa_register 7
 335 0006 7860     		str	r0, [r7, #4]
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 336              		.loc 1 394 0
 337 0008 4FF00003 		mov	r3, #0
 338 000c FB60     		str	r3, [r7, #12]
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 339              		.loc 1 404 0
 340 000e 124B     		ldr	r3, .L16
 341 0010 7A68     		ldr	r2, [r7, #4]
 342 0012 1268     		ldr	r2, [r2, #0]
 343 0014 9A60     		str	r2, [r3, #8]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 344              		.loc 1 408 0
 345 0016 104B     		ldr	r3, .L16
 346 0018 DB68     		ldr	r3, [r3, #12]
 347 001a FB60     		str	r3, [r7, #12]
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 348              		.loc 1 410 0
 349 001c FB68     		ldr	r3, [r7, #12]
 350 001e 23F4FE63 		bic	r3, r3, #2032
 351 0022 23F00F03 		bic	r3, r3, #15
 352 0026 FB60     		str	r3, [r7, #12]
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 353              		.loc 1 415 0
 354 0028 7B68     		ldr	r3, [r7, #4]
 355 002a 5A68     		ldr	r2, [r3, #4]
 356 002c 7B68     		ldr	r3, [r7, #4]
 357 002e 9B68     		ldr	r3, [r3, #8]
 358 0030 1A43     		orrs	r2, r2, r3
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 359              		.loc 1 416 0
 360 0032 7B68     		ldr	r3, [r7, #4]
 361 0034 DB68     		ldr	r3, [r3, #12]
 362 0036 1A43     		orrs	r2, r2, r3
 363 0038 7B68     		ldr	r3, [r7, #4]
 364 003a 1B69     		ldr	r3, [r3, #16]
 365 003c 42EA0303 		orr	r3, r2, r3
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 366              		.loc 1 415 0
 367 0040 FA68     		ldr	r2, [r7, #12]
 368 0042 42EA0303 		orr	r3, r2, r3
 369 0046 FB60     		str	r3, [r7, #12]
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 370              		.loc 1 419 0
 371 0048 034B     		ldr	r3, .L16
 372 004a FA68     		ldr	r2, [r7, #12]
 373 004c DA60     		str	r2, [r3, #12]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 374              		.loc 1 420 0
 375 004e 07F11407 		add	r7, r7, #20
 376 0052 BD46     		mov	sp, r7
 377 0054 80BC     		pop	{r7}
 378 0056 7047     		bx	lr
 379              	.L17:
 380              		.align	2
 381              	.L16:
 382 0058 002C0140 		.word	1073818624
 383              		.cfi_endproc
 384              	.LFE116:
 386              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 387              		.align	2
 388              		.global	SDIO_CmdStructInit
 389              		.thumb
 390              		.thumb_func
 392              	SDIO_CmdStructInit:
 393              	.LFB117:
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 394              		.loc 1 429 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 8
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399 0000 80B4     		push	{r7}
 400              	.LCFI19:
 401              		.cfi_def_cfa_offset 4
 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI20:
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_offset 7, -4
 407              	.LCFI21:
 408              		.cfi_def_cfa_register 7
 409 0006 7860     		str	r0, [r7, #4]
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 410              		.loc 1 431 0
 411 0008 7B68     		ldr	r3, [r7, #4]
 412 000a 4FF00002 		mov	r2, #0
 413 000e 1A60     		str	r2, [r3, #0]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 414              		.loc 1 432 0
 415 0010 7B68     		ldr	r3, [r7, #4]
 416 0012 4FF00002 		mov	r2, #0
 417 0016 5A60     		str	r2, [r3, #4]
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 418              		.loc 1 433 0
 419 0018 7B68     		ldr	r3, [r7, #4]
 420 001a 4FF00002 		mov	r2, #0
 421 001e 9A60     		str	r2, [r3, #8]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 422              		.loc 1 434 0
 423 0020 7B68     		ldr	r3, [r7, #4]
 424 0022 4FF00002 		mov	r2, #0
 425 0026 DA60     		str	r2, [r3, #12]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 426              		.loc 1 435 0
 427 0028 7B68     		ldr	r3, [r7, #4]
 428 002a 4FF00002 		mov	r2, #0
 429 002e 1A61     		str	r2, [r3, #16]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 430              		.loc 1 436 0
 431 0030 07F10C07 		add	r7, r7, #12
 432 0034 BD46     		mov	sp, r7
 433 0036 80BC     		pop	{r7}
 434 0038 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE117:
 438 003a 00BF     		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 439              		.align	2
 440              		.global	SDIO_GetCommandResponse
 441              		.thumb
 442              		.thumb_func
 444              	SDIO_GetCommandResponse:
 445              	.LFB118:
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 446              		.loc 1 444 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              	.LCFI22:
 453              		.cfi_def_cfa_offset 4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_offset 7, -4
 456              	.LCFI23:
 457              		.cfi_def_cfa_register 7
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 458              		.loc 1 445 0
 459 0004 034B     		ldr	r3, .L20
 460 0006 1B69     		ldr	r3, [r3, #16]
 461 0008 DBB2     		uxtb	r3, r3
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 462              		.loc 1 446 0
 463 000a 1846     		mov	r0, r3
 464 000c BD46     		mov	sp, r7
 465 000e 80BC     		pop	{r7}
 466 0010 7047     		bx	lr
 467              	.L21:
 468 0012 00BF     		.align	2
 469              	.L20:
 470 0014 002C0140 		.word	1073818624
 471              		.cfi_endproc
 472              	.LFE118:
 474              		.section	.text.SDIO_GetResponse,"ax",%progbits
 475              		.align	2
 476              		.global	SDIO_GetResponse
 477              		.thumb
 478              		.thumb_func
 480              	SDIO_GetResponse:
 481              	.LFB119:
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 482              		.loc 1 459 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 16
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              	.LCFI24:
 489              		.cfi_def_cfa_offset 4
 490 0002 85B0     		sub	sp, sp, #20
 491              	.LCFI25:
 492              		.cfi_def_cfa_offset 24
 493 0004 00AF     		add	r7, sp, #0
 494              		.cfi_offset 7, -4
 495              	.LCFI26:
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 498              		.loc 1 460 0
 499 0008 4FF00003 		mov	r3, #0
 500 000c FB60     		str	r3, [r7, #12]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 501              		.loc 1 465 0
 502 000e 7A68     		ldr	r2, [r7, #4]
 503 0010 054B     		ldr	r3, .L23
 504 0012 D318     		adds	r3, r2, r3
 505 0014 FB60     		str	r3, [r7, #12]
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 506              		.loc 1 467 0
 507 0016 FB68     		ldr	r3, [r7, #12]
 508 0018 1B68     		ldr	r3, [r3, #0]
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 509              		.loc 1 468 0
 510 001a 1846     		mov	r0, r3
 511 001c 07F11407 		add	r7, r7, #20
 512 0020 BD46     		mov	sp, r7
 513 0022 80BC     		pop	{r7}
 514 0024 7047     		bx	lr
 515              	.L24:
 516 0026 00BF     		.align	2
 517              	.L23:
 518 0028 142C0140 		.word	1073818644
 519              		.cfi_endproc
 520              	.LFE119:
 522              		.section	.text.SDIO_DataConfig,"ax",%progbits
 523              		.align	2
 524              		.global	SDIO_DataConfig
 525              		.thumb
 526              		.thumb_func
 528              	SDIO_DataConfig:
 529              	.LFB120:
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 530              		.loc 1 497 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 16
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              	.LCFI27:
 537              		.cfi_def_cfa_offset 4
 538 0002 85B0     		sub	sp, sp, #20
 539              	.LCFI28:
 540              		.cfi_def_cfa_offset 24
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_offset 7, -4
 543              	.LCFI29:
 544              		.cfi_def_cfa_register 7
 545 0006 7860     		str	r0, [r7, #4]
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 546              		.loc 1 498 0
 547 0008 4FF00003 		mov	r3, #0
 548 000c FB60     		str	r3, [r7, #12]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 549              		.loc 1 509 0
 550 000e 134B     		ldr	r3, .L26
 551 0010 7A68     		ldr	r2, [r7, #4]
 552 0012 1268     		ldr	r2, [r2, #0]
 553 0014 5A62     		str	r2, [r3, #36]
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 554              		.loc 1 513 0
 555 0016 114B     		ldr	r3, .L26
 556 0018 7A68     		ldr	r2, [r7, #4]
 557 001a 5268     		ldr	r2, [r2, #4]
 558 001c 9A62     		str	r2, [r3, #40]
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 559              		.loc 1 517 0
 560 001e 0F4B     		ldr	r3, .L26
 561 0020 DB6A     		ldr	r3, [r3, #44]
 562 0022 FB60     		str	r3, [r7, #12]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 563              		.loc 1 519 0
 564 0024 FB68     		ldr	r3, [r7, #12]
 565 0026 23F0F703 		bic	r3, r3, #247
 566 002a FB60     		str	r3, [r7, #12]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 567              		.loc 1 524 0
 568 002c 7B68     		ldr	r3, [r7, #4]
 569 002e 9A68     		ldr	r2, [r3, #8]
 570 0030 7B68     		ldr	r3, [r7, #4]
 571 0032 DB68     		ldr	r3, [r3, #12]
 572 0034 1A43     		orrs	r2, r2, r3
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 573              		.loc 1 525 0
 574 0036 7B68     		ldr	r3, [r7, #4]
 575 0038 1B69     		ldr	r3, [r3, #16]
 576 003a 1A43     		orrs	r2, r2, r3
 577 003c 7B68     		ldr	r3, [r7, #4]
 578 003e 5B69     		ldr	r3, [r3, #20]
 579 0040 42EA0303 		orr	r3, r2, r3
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 580              		.loc 1 524 0
 581 0044 FA68     		ldr	r2, [r7, #12]
 582 0046 42EA0303 		orr	r3, r2, r3
 583 004a FB60     		str	r3, [r7, #12]
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 584              		.loc 1 528 0
 585 004c 034B     		ldr	r3, .L26
 586 004e FA68     		ldr	r2, [r7, #12]
 587 0050 DA62     		str	r2, [r3, #44]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 588              		.loc 1 529 0
 589 0052 07F11407 		add	r7, r7, #20
 590 0056 BD46     		mov	sp, r7
 591 0058 80BC     		pop	{r7}
 592 005a 7047     		bx	lr
 593              	.L27:
 594              		.align	2
 595              	.L26:
 596 005c 002C0140 		.word	1073818624
 597              		.cfi_endproc
 598              	.LFE120:
 600              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 601              		.align	2
 602              		.global	SDIO_DataStructInit
 603              		.thumb
 604              		.thumb_func
 606              	SDIO_DataStructInit:
 607              	.LFB121:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 608              		.loc 1 538 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 8
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 80B4     		push	{r7}
 614              	.LCFI30:
 615              		.cfi_def_cfa_offset 4
 616 0002 83B0     		sub	sp, sp, #12
 617              	.LCFI31:
 618              		.cfi_def_cfa_offset 16
 619 0004 00AF     		add	r7, sp, #0
 620              		.cfi_offset 7, -4
 621              	.LCFI32:
 622              		.cfi_def_cfa_register 7
 623 0006 7860     		str	r0, [r7, #4]
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 624              		.loc 1 540 0
 625 0008 7B68     		ldr	r3, [r7, #4]
 626 000a 4FF0FF32 		mov	r2, #-1
 627 000e 1A60     		str	r2, [r3, #0]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 628              		.loc 1 541 0
 629 0010 7B68     		ldr	r3, [r7, #4]
 630 0012 4FF00002 		mov	r2, #0
 631 0016 5A60     		str	r2, [r3, #4]
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 632              		.loc 1 542 0
 633 0018 7B68     		ldr	r3, [r7, #4]
 634 001a 4FF00002 		mov	r2, #0
 635 001e 9A60     		str	r2, [r3, #8]
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 636              		.loc 1 543 0
 637 0020 7B68     		ldr	r3, [r7, #4]
 638 0022 4FF00002 		mov	r2, #0
 639 0026 DA60     		str	r2, [r3, #12]
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 640              		.loc 1 544 0
 641 0028 7B68     		ldr	r3, [r7, #4]
 642 002a 4FF00002 		mov	r2, #0
 643 002e 1A61     		str	r2, [r3, #16]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 644              		.loc 1 545 0
 645 0030 7B68     		ldr	r3, [r7, #4]
 646 0032 4FF00002 		mov	r2, #0
 647 0036 5A61     		str	r2, [r3, #20]
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 648              		.loc 1 546 0
 649 0038 07F10C07 		add	r7, r7, #12
 650 003c BD46     		mov	sp, r7
 651 003e 80BC     		pop	{r7}
 652 0040 7047     		bx	lr
 653              		.cfi_endproc
 654              	.LFE121:
 656 0042 00BF     		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 657              		.align	2
 658              		.global	SDIO_GetDataCounter
 659              		.thumb
 660              		.thumb_func
 662              	SDIO_GetDataCounter:
 663              	.LFB122:
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 664              		.loc 1 554 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              	.LCFI33:
 671              		.cfi_def_cfa_offset 4
 672 0002 00AF     		add	r7, sp, #0
 673              		.cfi_offset 7, -4
 674              	.LCFI34:
 675              		.cfi_def_cfa_register 7
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 676              		.loc 1 555 0
 677 0004 024B     		ldr	r3, .L30
 678 0006 1B6B     		ldr	r3, [r3, #48]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 679              		.loc 1 556 0
 680 0008 1846     		mov	r0, r3
 681 000a BD46     		mov	sp, r7
 682 000c 80BC     		pop	{r7}
 683 000e 7047     		bx	lr
 684              	.L31:
 685              		.align	2
 686              	.L30:
 687 0010 002C0140 		.word	1073818624
 688              		.cfi_endproc
 689              	.LFE122:
 691              		.section	.text.SDIO_ReadData,"ax",%progbits
 692              		.align	2
 693              		.global	SDIO_ReadData
 694              		.thumb
 695              		.thumb_func
 697              	SDIO_ReadData:
 698              	.LFB123:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 699              		.loc 1 564 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704 0000 80B4     		push	{r7}
 705              	.LCFI35:
 706              		.cfi_def_cfa_offset 4
 707 0002 00AF     		add	r7, sp, #0
 708              		.cfi_offset 7, -4
 709              	.LCFI36:
 710              		.cfi_def_cfa_register 7
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 711              		.loc 1 565 0
 712 0004 034B     		ldr	r3, .L33
 713 0006 D3F88030 		ldr	r3, [r3, #128]
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 714              		.loc 1 566 0
 715 000a 1846     		mov	r0, r3
 716 000c BD46     		mov	sp, r7
 717 000e 80BC     		pop	{r7}
 718 0010 7047     		bx	lr
 719              	.L34:
 720 0012 00BF     		.align	2
 721              	.L33:
 722 0014 002C0140 		.word	1073818624
 723              		.cfi_endproc
 724              	.LFE123:
 726              		.section	.text.SDIO_WriteData,"ax",%progbits
 727              		.align	2
 728              		.global	SDIO_WriteData
 729              		.thumb
 730              		.thumb_func
 732              	SDIO_WriteData:
 733              	.LFB124:
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 734              		.loc 1 574 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 8
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              	.LCFI37:
 741              		.cfi_def_cfa_offset 4
 742 0002 83B0     		sub	sp, sp, #12
 743              	.LCFI38:
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_offset 7, -4
 747              	.LCFI39:
 748              		.cfi_def_cfa_register 7
 749 0006 7860     		str	r0, [r7, #4]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 750              		.loc 1 575 0
 751 0008 044B     		ldr	r3, .L36
 752 000a 7A68     		ldr	r2, [r7, #4]
 753 000c C3F88020 		str	r2, [r3, #128]
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 754              		.loc 1 576 0
 755 0010 07F10C07 		add	r7, r7, #12
 756 0014 BD46     		mov	sp, r7
 757 0016 80BC     		pop	{r7}
 758 0018 7047     		bx	lr
 759              	.L37:
 760 001a 00BF     		.align	2
 761              	.L36:
 762 001c 002C0140 		.word	1073818624
 763              		.cfi_endproc
 764              	.LFE124:
 766              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 767              		.align	2
 768              		.global	SDIO_GetFIFOCount
 769              		.thumb
 770              		.thumb_func
 772              	SDIO_GetFIFOCount:
 773              	.LFB125:
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 774              		.loc 1 584 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779 0000 80B4     		push	{r7}
 780              	.LCFI40:
 781              		.cfi_def_cfa_offset 4
 782 0002 00AF     		add	r7, sp, #0
 783              		.cfi_offset 7, -4
 784              	.LCFI41:
 785              		.cfi_def_cfa_register 7
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 786              		.loc 1 585 0
 787 0004 024B     		ldr	r3, .L39
 788 0006 9B6C     		ldr	r3, [r3, #72]
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 789              		.loc 1 586 0
 790 0008 1846     		mov	r0, r3
 791 000a BD46     		mov	sp, r7
 792 000c 80BC     		pop	{r7}
 793 000e 7047     		bx	lr
 794              	.L40:
 795              		.align	2
 796              	.L39:
 797 0010 002C0140 		.word	1073818624
 798              		.cfi_endproc
 799              	.LFE125:
 801              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 802              		.align	2
 803              		.global	SDIO_StartSDIOReadWait
 804              		.thumb
 805              		.thumb_func
 807              	SDIO_StartSDIOReadWait:
 808              	.LFB126:
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 809              		.loc 1 613 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 8
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814 0000 80B4     		push	{r7}
 815              	.LCFI42:
 816              		.cfi_def_cfa_offset 4
 817 0002 83B0     		sub	sp, sp, #12
 818              	.LCFI43:
 819              		.cfi_def_cfa_offset 16
 820 0004 00AF     		add	r7, sp, #0
 821              		.cfi_offset 7, -4
 822              	.LCFI44:
 823              		.cfi_def_cfa_register 7
 824 0006 0346     		mov	r3, r0
 825 0008 FB71     		strb	r3, [r7, #7]
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 826              		.loc 1 617 0
 827 000a 044B     		ldr	r3, .L42
 828 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 829 000e 1A60     		str	r2, [r3, #0]
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 830              		.loc 1 618 0
 831 0010 07F10C07 		add	r7, r7, #12
 832 0014 BD46     		mov	sp, r7
 833 0016 80BC     		pop	{r7}
 834 0018 7047     		bx	lr
 835              	.L43:
 836 001a 00BF     		.align	2
 837              	.L42:
 838 001c A0852542 		.word	1109755296
 839              		.cfi_endproc
 840              	.LFE126:
 842              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 843              		.align	2
 844              		.global	SDIO_StopSDIOReadWait
 845              		.thumb
 846              		.thumb_func
 848              	SDIO_StopSDIOReadWait:
 849              	.LFB127:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 850              		.loc 1 627 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855 0000 80B4     		push	{r7}
 856              	.LCFI45:
 857              		.cfi_def_cfa_offset 4
 858 0002 83B0     		sub	sp, sp, #12
 859              	.LCFI46:
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_offset 7, -4
 863              	.LCFI47:
 864              		.cfi_def_cfa_register 7
 865 0006 0346     		mov	r3, r0
 866 0008 FB71     		strb	r3, [r7, #7]
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 867              		.loc 1 631 0
 868 000a 044B     		ldr	r3, .L45
 869 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 870 000e 1A60     		str	r2, [r3, #0]
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 871              		.loc 1 632 0
 872 0010 07F10C07 		add	r7, r7, #12
 873 0014 BD46     		mov	sp, r7
 874 0016 80BC     		pop	{r7}
 875 0018 7047     		bx	lr
 876              	.L46:
 877 001a 00BF     		.align	2
 878              	.L45:
 879 001c A4852542 		.word	1109755300
 880              		.cfi_endproc
 881              	.LFE127:
 883              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 884              		.align	2
 885              		.global	SDIO_SetSDIOReadWaitMode
 886              		.thumb
 887              		.thumb_func
 889              	SDIO_SetSDIOReadWaitMode:
 890              	.LFB128:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 891              		.loc 1 643 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 8
 894              		@ frame_needed = 1, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896 0000 80B4     		push	{r7}
 897              	.LCFI48:
 898              		.cfi_def_cfa_offset 4
 899 0002 83B0     		sub	sp, sp, #12
 900              	.LCFI49:
 901              		.cfi_def_cfa_offset 16
 902 0004 00AF     		add	r7, sp, #0
 903              		.cfi_offset 7, -4
 904              	.LCFI50:
 905              		.cfi_def_cfa_register 7
 906 0006 7860     		str	r0, [r7, #4]
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 907              		.loc 1 647 0
 908 0008 034B     		ldr	r3, .L48
 909 000a 7A68     		ldr	r2, [r7, #4]
 910 000c 1A60     		str	r2, [r3, #0]
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 911              		.loc 1 648 0
 912 000e 07F10C07 		add	r7, r7, #12
 913 0012 BD46     		mov	sp, r7
 914 0014 80BC     		pop	{r7}
 915 0016 7047     		bx	lr
 916              	.L49:
 917              		.align	2
 918              	.L48:
 919 0018 A8852542 		.word	1109755304
 920              		.cfi_endproc
 921              	.LFE128:
 923              		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 924              		.align	2
 925              		.global	SDIO_SetSDIOOperation
 926              		.thumb
 927              		.thumb_func
 929              	SDIO_SetSDIOOperation:
 930              	.LFB129:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 931              		.loc 1 657 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936 0000 80B4     		push	{r7}
 937              	.LCFI51:
 938              		.cfi_def_cfa_offset 4
 939 0002 83B0     		sub	sp, sp, #12
 940              	.LCFI52:
 941              		.cfi_def_cfa_offset 16
 942 0004 00AF     		add	r7, sp, #0
 943              		.cfi_offset 7, -4
 944              	.LCFI53:
 945              		.cfi_def_cfa_register 7
 946 0006 0346     		mov	r3, r0
 947 0008 FB71     		strb	r3, [r7, #7]
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 948              		.loc 1 661 0
 949 000a 044B     		ldr	r3, .L51
 950 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 951 000e 1A60     		str	r2, [r3, #0]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 952              		.loc 1 662 0
 953 0010 07F10C07 		add	r7, r7, #12
 954 0014 BD46     		mov	sp, r7
 955 0016 80BC     		pop	{r7}
 956 0018 7047     		bx	lr
 957              	.L52:
 958 001a 00BF     		.align	2
 959              	.L51:
 960 001c AC852542 		.word	1109755308
 961              		.cfi_endproc
 962              	.LFE129:
 964              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 965              		.align	2
 966              		.global	SDIO_SendSDIOSuspendCmd
 967              		.thumb
 968              		.thumb_func
 970              	SDIO_SendSDIOSuspendCmd:
 971              	.LFB130:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 972              		.loc 1 671 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 8
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 977 0000 80B4     		push	{r7}
 978              	.LCFI54:
 979              		.cfi_def_cfa_offset 4
 980 0002 83B0     		sub	sp, sp, #12
 981              	.LCFI55:
 982              		.cfi_def_cfa_offset 16
 983 0004 00AF     		add	r7, sp, #0
 984              		.cfi_offset 7, -4
 985              	.LCFI56:
 986              		.cfi_def_cfa_register 7
 987 0006 0346     		mov	r3, r0
 988 0008 FB71     		strb	r3, [r7, #7]
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 989              		.loc 1 675 0
 990 000a 044B     		ldr	r3, .L54
 991 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 992 000e 1A60     		str	r2, [r3, #0]
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 993              		.loc 1 676 0
 994 0010 07F10C07 		add	r7, r7, #12
 995 0014 BD46     		mov	sp, r7
 996 0016 80BC     		pop	{r7}
 997 0018 7047     		bx	lr
 998              	.L55:
 999 001a 00BF     		.align	2
 1000              	.L54:
 1001 001c AC812542 		.word	1109754284
 1002              		.cfi_endproc
 1003              	.LFE130:
 1005              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 1006              		.align	2
 1007              		.global	SDIO_CommandCompletionCmd
 1008              		.thumb
 1009              		.thumb_func
 1011              	SDIO_CommandCompletionCmd:
 1012              	.LFB131:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1013              		.loc 1 703 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 8
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 1018 0000 80B4     		push	{r7}
 1019              	.LCFI57:
 1020              		.cfi_def_cfa_offset 4
 1021 0002 83B0     		sub	sp, sp, #12
 1022              	.LCFI58:
 1023              		.cfi_def_cfa_offset 16
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_offset 7, -4
 1026              	.LCFI59:
 1027              		.cfi_def_cfa_register 7
 1028 0006 0346     		mov	r3, r0
 1029 0008 FB71     		strb	r3, [r7, #7]
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 1030              		.loc 1 707 0
 1031 000a 044B     		ldr	r3, .L57
 1032 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1033 000e 1A60     		str	r2, [r3, #0]
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1034              		.loc 1 708 0
 1035 0010 07F10C07 		add	r7, r7, #12
 1036 0014 BD46     		mov	sp, r7
 1037 0016 80BC     		pop	{r7}
 1038 0018 7047     		bx	lr
 1039              	.L58:
 1040 001a 00BF     		.align	2
 1041              	.L57:
 1042 001c B0812542 		.word	1109754288
 1043              		.cfi_endproc
 1044              	.LFE131:
 1046              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 1047              		.align	2
 1048              		.global	SDIO_CEATAITCmd
 1049              		.thumb
 1050              		.thumb_func
 1052              	SDIO_CEATAITCmd:
 1053              	.LFB132:
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1054              		.loc 1 717 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 8
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058              		@ link register save eliminated.
 1059 0000 80B4     		push	{r7}
 1060              	.LCFI60:
 1061              		.cfi_def_cfa_offset 4
 1062 0002 83B0     		sub	sp, sp, #12
 1063              	.LCFI61:
 1064              		.cfi_def_cfa_offset 16
 1065 0004 00AF     		add	r7, sp, #0
 1066              		.cfi_offset 7, -4
 1067              	.LCFI62:
 1068              		.cfi_def_cfa_register 7
 1069 0006 0346     		mov	r3, r0
 1070 0008 FB71     		strb	r3, [r7, #7]
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 1071              		.loc 1 721 0
 1072 000a 074B     		ldr	r3, .L60
 1073 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1074 000e 02F00102 		and	r2, r2, #1
 1075 0012 002A     		cmp	r2, #0
 1076 0014 14BF     		ite	ne
 1077 0016 0022     		movne	r2, #0
 1078 0018 0122     		moveq	r2, #1
 1079 001a 1A60     		str	r2, [r3, #0]
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1080              		.loc 1 722 0
 1081 001c 07F10C07 		add	r7, r7, #12
 1082 0020 BD46     		mov	sp, r7
 1083 0022 80BC     		pop	{r7}
 1084 0024 7047     		bx	lr
 1085              	.L61:
 1086 0026 00BF     		.align	2
 1087              	.L60:
 1088 0028 B4812542 		.word	1109754292
 1089              		.cfi_endproc
 1090              	.LFE132:
 1092              		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 1093              		.align	2
 1094              		.global	SDIO_SendCEATACmd
 1095              		.thumb
 1096              		.thumb_func
 1098              	SDIO_SendCEATACmd:
 1099              	.LFB133:
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1100              		.loc 1 731 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 8
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105 0000 80B4     		push	{r7}
 1106              	.LCFI63:
 1107              		.cfi_def_cfa_offset 4
 1108 0002 83B0     		sub	sp, sp, #12
 1109              	.LCFI64:
 1110              		.cfi_def_cfa_offset 16
 1111 0004 00AF     		add	r7, sp, #0
 1112              		.cfi_offset 7, -4
 1113              	.LCFI65:
 1114              		.cfi_def_cfa_register 7
 1115 0006 0346     		mov	r3, r0
 1116 0008 FB71     		strb	r3, [r7, #7]
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1117              		.loc 1 735 0
 1118 000a 044B     		ldr	r3, .L63
 1119 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1120 000e 1A60     		str	r2, [r3, #0]
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1121              		.loc 1 736 0
 1122 0010 07F10C07 		add	r7, r7, #12
 1123 0014 BD46     		mov	sp, r7
 1124 0016 80BC     		pop	{r7}
 1125 0018 7047     		bx	lr
 1126              	.L64:
 1127 001a 00BF     		.align	2
 1128              	.L63:
 1129 001c B8812542 		.word	1109754296
 1130              		.cfi_endproc
 1131              	.LFE133:
 1133              		.section	.text.SDIO_DMACmd,"ax",%progbits
 1134              		.align	2
 1135              		.global	SDIO_DMACmd
 1136              		.thumb
 1137              		.thumb_func
 1139              	SDIO_DMACmd:
 1140              	.LFB134:
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1141              		.loc 1 763 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146 0000 80B4     		push	{r7}
 1147              	.LCFI66:
 1148              		.cfi_def_cfa_offset 4
 1149 0002 83B0     		sub	sp, sp, #12
 1150              	.LCFI67:
 1151              		.cfi_def_cfa_offset 16
 1152 0004 00AF     		add	r7, sp, #0
 1153              		.cfi_offset 7, -4
 1154              	.LCFI68:
 1155              		.cfi_def_cfa_register 7
 1156 0006 0346     		mov	r3, r0
 1157 0008 FB71     		strb	r3, [r7, #7]
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 1158              		.loc 1 767 0
 1159 000a 044B     		ldr	r3, .L66
 1160 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1161 000e 1A60     		str	r2, [r3, #0]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1162              		.loc 1 768 0
 1163 0010 07F10C07 		add	r7, r7, #12
 1164 0014 BD46     		mov	sp, r7
 1165 0016 80BC     		pop	{r7}
 1166 0018 7047     		bx	lr
 1167              	.L67:
 1168 001a 00BF     		.align	2
 1169              	.L66:
 1170 001c 8C852542 		.word	1109755276
 1171              		.cfi_endproc
 1172              	.LFE134:
 1174              		.section	.text.SDIO_ITConfig,"ax",%progbits
 1175              		.align	2
 1176              		.global	SDIO_ITConfig
 1177              		.thumb
 1178              		.thumb_func
 1180              	SDIO_ITConfig:
 1181              	.LFB135:
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1182              		.loc 1 821 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 8
 1185              		@ frame_needed = 1, uses_anonymous_args = 0
 1186              		@ link register save eliminated.
 1187 0000 80B4     		push	{r7}
 1188              	.LCFI69:
 1189              		.cfi_def_cfa_offset 4
 1190 0002 83B0     		sub	sp, sp, #12
 1191              	.LCFI70:
 1192              		.cfi_def_cfa_offset 16
 1193 0004 00AF     		add	r7, sp, #0
 1194              		.cfi_offset 7, -4
 1195              	.LCFI71:
 1196              		.cfi_def_cfa_register 7
 1197 0006 7860     		str	r0, [r7, #4]
 1198 0008 0B46     		mov	r3, r1
 1199 000a FB70     		strb	r3, [r7, #3]
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 1200              		.loc 1 826 0
 1201 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1202 000e 002B     		cmp	r3, #0
 1203 0010 07D0     		beq	.L69
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 1204              		.loc 1 829 0
 1205 0012 0B4B     		ldr	r3, .L71
 1206 0014 0A4A     		ldr	r2, .L71
 1207 0016 D16B     		ldr	r1, [r2, #60]
 1208 0018 7A68     		ldr	r2, [r7, #4]
 1209 001a 41EA0202 		orr	r2, r1, r2
 1210 001e DA63     		str	r2, [r3, #60]
 1211 0020 08E0     		b	.L68
 1212              	.L69:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 1213              		.loc 1 834 0
 1214 0022 074B     		ldr	r3, .L71
 1215 0024 064A     		ldr	r2, .L71
 1216 0026 D16B     		ldr	r1, [r2, #60]
 1217 0028 7A68     		ldr	r2, [r7, #4]
 1218 002a 6FEA0202 		mvn	r2, r2
 1219 002e 01EA0202 		and	r2, r1, r2
 1220 0032 DA63     		str	r2, [r3, #60]
 1221              	.L68:
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1222              		.loc 1 836 0
 1223 0034 07F10C07 		add	r7, r7, #12
 1224 0038 BD46     		mov	sp, r7
 1225 003a 80BC     		pop	{r7}
 1226 003c 7047     		bx	lr
 1227              	.L72:
 1228 003e 00BF     		.align	2
 1229              	.L71:
 1230 0040 002C0140 		.word	1073818624
 1231              		.cfi_endproc
 1232              	.LFE135:
 1234              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 1235              		.align	2
 1236              		.global	SDIO_GetFlagStatus
 1237              		.thumb
 1238              		.thumb_func
 1240              	SDIO_GetFlagStatus:
 1241              	.LFB136:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1242              		.loc 1 869 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 16
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247 0000 80B4     		push	{r7}
 1248              	.LCFI72:
 1249              		.cfi_def_cfa_offset 4
 1250 0002 85B0     		sub	sp, sp, #20
 1251              	.LCFI73:
 1252              		.cfi_def_cfa_offset 24
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_offset 7, -4
 1255              	.LCFI74:
 1256              		.cfi_def_cfa_register 7
 1257 0006 7860     		str	r0, [r7, #4]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 1258              		.loc 1 870 0
 1259 0008 4FF00003 		mov	r3, #0
 1260 000c FB73     		strb	r3, [r7, #15]
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1261              		.loc 1 875 0
 1262 000e 0A4B     		ldr	r3, .L76
 1263 0010 5A6B     		ldr	r2, [r3, #52]
 1264 0012 7B68     		ldr	r3, [r7, #4]
 1265 0014 02EA0303 		and	r3, r2, r3
 1266 0018 002B     		cmp	r3, #0
 1267 001a 03D0     		beq	.L74
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1268              		.loc 1 877 0
 1269 001c 4FF00103 		mov	r3, #1
 1270 0020 FB73     		strb	r3, [r7, #15]
 1271 0022 02E0     		b	.L75
 1272              	.L74:
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1273              		.loc 1 881 0
 1274 0024 4FF00003 		mov	r3, #0
 1275 0028 FB73     		strb	r3, [r7, #15]
 1276              	.L75:
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1277              		.loc 1 883 0
 1278 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1279              		.loc 1 884 0
 1280 002c 1846     		mov	r0, r3
 1281 002e 07F11407 		add	r7, r7, #20
 1282 0032 BD46     		mov	sp, r7
 1283 0034 80BC     		pop	{r7}
 1284 0036 7047     		bx	lr
 1285              	.L77:
 1286              		.align	2
 1287              	.L76:
 1288 0038 002C0140 		.word	1073818624
 1289              		.cfi_endproc
 1290              	.LFE136:
 1292              		.section	.text.SDIO_ClearFlag,"ax",%progbits
 1293              		.align	2
 1294              		.global	SDIO_ClearFlag
 1295              		.thumb
 1296              		.thumb_func
 1298              	SDIO_ClearFlag:
 1299              	.LFB137:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1300              		.loc 1 906 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 8
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305 0000 80B4     		push	{r7}
 1306              	.LCFI75:
 1307              		.cfi_def_cfa_offset 4
 1308 0002 83B0     		sub	sp, sp, #12
 1309              	.LCFI76:
 1310              		.cfi_def_cfa_offset 16
 1311 0004 00AF     		add	r7, sp, #0
 1312              		.cfi_offset 7, -4
 1313              	.LCFI77:
 1314              		.cfi_def_cfa_register 7
 1315 0006 7860     		str	r0, [r7, #4]
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1316              		.loc 1 910 0
 1317 0008 034B     		ldr	r3, .L79
 1318 000a 7A68     		ldr	r2, [r7, #4]
 1319 000c 9A63     		str	r2, [r3, #56]
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1320              		.loc 1 911 0
 1321 000e 07F10C07 		add	r7, r7, #12
 1322 0012 BD46     		mov	sp, r7
 1323 0014 80BC     		pop	{r7}
 1324 0016 7047     		bx	lr
 1325              	.L80:
 1326              		.align	2
 1327              	.L79:
 1328 0018 002C0140 		.word	1073818624
 1329              		.cfi_endproc
 1330              	.LFE137:
 1332              		.section	.text.SDIO_GetITStatus,"ax",%progbits
 1333              		.align	2
 1334              		.global	SDIO_GetITStatus
 1335              		.thumb
 1336              		.thumb_func
 1338              	SDIO_GetITStatus:
 1339              	.LFB138:
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1340              		.loc 1 945 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 16
 1343              		@ frame_needed = 1, uses_anonymous_args = 0
 1344              		@ link register save eliminated.
 1345 0000 80B4     		push	{r7}
 1346              	.LCFI78:
 1347              		.cfi_def_cfa_offset 4
 1348 0002 85B0     		sub	sp, sp, #20
 1349              	.LCFI79:
 1350              		.cfi_def_cfa_offset 24
 1351 0004 00AF     		add	r7, sp, #0
 1352              		.cfi_offset 7, -4
 1353              	.LCFI80:
 1354              		.cfi_def_cfa_register 7
 1355 0006 7860     		str	r0, [r7, #4]
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 1356              		.loc 1 946 0
 1357 0008 4FF00003 		mov	r3, #0
 1358 000c FB73     		strb	r3, [r7, #15]
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1359              		.loc 1 950 0
 1360 000e 0A4B     		ldr	r3, .L84
 1361 0010 5A6B     		ldr	r2, [r3, #52]
 1362 0012 7B68     		ldr	r3, [r7, #4]
 1363 0014 02EA0303 		and	r3, r2, r3
 1364 0018 002B     		cmp	r3, #0
 1365 001a 03D0     		beq	.L82
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1366              		.loc 1 952 0
 1367 001c 4FF00103 		mov	r3, #1
 1368 0020 FB73     		strb	r3, [r7, #15]
 1369 0022 02E0     		b	.L83
 1370              	.L82:
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1371              		.loc 1 956 0
 1372 0024 4FF00003 		mov	r3, #0
 1373 0028 FB73     		strb	r3, [r7, #15]
 1374              	.L83:
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1375              		.loc 1 958 0
 1376 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1377              		.loc 1 959 0
 1378 002c 1846     		mov	r0, r3
 1379 002e 07F11407 		add	r7, r7, #20
 1380 0032 BD46     		mov	sp, r7
 1381 0034 80BC     		pop	{r7}
 1382 0036 7047     		bx	lr
 1383              	.L85:
 1384              		.align	2
 1385              	.L84:
 1386 0038 002C0140 		.word	1073818624
 1387              		.cfi_endproc
 1388              	.LFE138:
 1390              		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 1391              		.align	2
 1392              		.global	SDIO_ClearITPendingBit
 1393              		.thumb
 1394              		.thumb_func
 1396              	SDIO_ClearITPendingBit:
 1397              	.LFB139:
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1398              		.loc 1 981 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 8
 1401              		@ frame_needed = 1, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
 1403 0000 80B4     		push	{r7}
 1404              	.LCFI81:
 1405              		.cfi_def_cfa_offset 4
 1406 0002 83B0     		sub	sp, sp, #12
 1407              	.LCFI82:
 1408              		.cfi_def_cfa_offset 16
 1409 0004 00AF     		add	r7, sp, #0
 1410              		.cfi_offset 7, -4
 1411              	.LCFI83:
 1412              		.cfi_def_cfa_register 7
 1413 0006 7860     		str	r0, [r7, #4]
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 1414              		.loc 1 985 0
 1415 0008 034B     		ldr	r3, .L87
 1416 000a 7A68     		ldr	r2, [r7, #4]
 1417 000c 9A63     		str	r2, [r3, #56]
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1418              		.loc 1 986 0
 1419 000e 07F10C07 		add	r7, r7, #12
 1420 0012 BD46     		mov	sp, r7
 1421 0014 80BC     		pop	{r7}
 1422 0016 7047     		bx	lr
 1423              	.L88:
 1424              		.align	2
 1425              	.L87:
 1426 0018 002C0140 		.word	1073818624
 1427              		.cfi_endproc
 1428              	.LFE139:
 1430              		.text
 1431              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_sdio.c
     /tmp/cctVucCU.s:25     .text.SDIO_DeInit:00000000 $t
     /tmp/cctVucCU.s:30     .text.SDIO_DeInit:00000000 SDIO_DeInit
     /tmp/cctVucCU.s:59     .text.SDIO_Init:00000000 $t
     /tmp/cctVucCU.s:64     .text.SDIO_Init:00000000 SDIO_Init
     /tmp/cctVucCU.s:135    .text.SDIO_Init:00000060 $d
     /tmp/cctVucCU.s:140    .text.SDIO_StructInit:00000000 $t
     /tmp/cctVucCU.s:145    .text.SDIO_StructInit:00000000 SDIO_StructInit
     /tmp/cctVucCU.s:196    .text.SDIO_ClockCmd:00000000 $t
     /tmp/cctVucCU.s:201    .text.SDIO_ClockCmd:00000000 SDIO_ClockCmd
     /tmp/cctVucCU.s:232    .text.SDIO_ClockCmd:0000001c $d
     /tmp/cctVucCU.s:237    .text.SDIO_SetPowerState:00000000 $t
     /tmp/cctVucCU.s:242    .text.SDIO_SetPowerState:00000000 SDIO_SetPowerState
     /tmp/cctVucCU.s:272    .text.SDIO_SetPowerState:00000018 $d
     /tmp/cctVucCU.s:277    .text.SDIO_GetPowerState:00000000 $t
     /tmp/cctVucCU.s:282    .text.SDIO_GetPowerState:00000000 SDIO_GetPowerState
     /tmp/cctVucCU.s:308    .text.SDIO_GetPowerState:00000014 $d
     /tmp/cctVucCU.s:313    .text.SDIO_SendCommand:00000000 $t
     /tmp/cctVucCU.s:318    .text.SDIO_SendCommand:00000000 SDIO_SendCommand
     /tmp/cctVucCU.s:382    .text.SDIO_SendCommand:00000058 $d
     /tmp/cctVucCU.s:387    .text.SDIO_CmdStructInit:00000000 $t
     /tmp/cctVucCU.s:392    .text.SDIO_CmdStructInit:00000000 SDIO_CmdStructInit
     /tmp/cctVucCU.s:439    .text.SDIO_GetCommandResponse:00000000 $t
     /tmp/cctVucCU.s:444    .text.SDIO_GetCommandResponse:00000000 SDIO_GetCommandResponse
     /tmp/cctVucCU.s:470    .text.SDIO_GetCommandResponse:00000014 $d
     /tmp/cctVucCU.s:475    .text.SDIO_GetResponse:00000000 $t
     /tmp/cctVucCU.s:480    .text.SDIO_GetResponse:00000000 SDIO_GetResponse
     /tmp/cctVucCU.s:518    .text.SDIO_GetResponse:00000028 $d
     /tmp/cctVucCU.s:523    .text.SDIO_DataConfig:00000000 $t
     /tmp/cctVucCU.s:528    .text.SDIO_DataConfig:00000000 SDIO_DataConfig
     /tmp/cctVucCU.s:596    .text.SDIO_DataConfig:0000005c $d
     /tmp/cctVucCU.s:601    .text.SDIO_DataStructInit:00000000 $t
     /tmp/cctVucCU.s:606    .text.SDIO_DataStructInit:00000000 SDIO_DataStructInit
     /tmp/cctVucCU.s:657    .text.SDIO_GetDataCounter:00000000 $t
     /tmp/cctVucCU.s:662    .text.SDIO_GetDataCounter:00000000 SDIO_GetDataCounter
     /tmp/cctVucCU.s:687    .text.SDIO_GetDataCounter:00000010 $d
     /tmp/cctVucCU.s:692    .text.SDIO_ReadData:00000000 $t
     /tmp/cctVucCU.s:697    .text.SDIO_ReadData:00000000 SDIO_ReadData
     /tmp/cctVucCU.s:722    .text.SDIO_ReadData:00000014 $d
     /tmp/cctVucCU.s:727    .text.SDIO_WriteData:00000000 $t
     /tmp/cctVucCU.s:732    .text.SDIO_WriteData:00000000 SDIO_WriteData
     /tmp/cctVucCU.s:762    .text.SDIO_WriteData:0000001c $d
     /tmp/cctVucCU.s:767    .text.SDIO_GetFIFOCount:00000000 $t
     /tmp/cctVucCU.s:772    .text.SDIO_GetFIFOCount:00000000 SDIO_GetFIFOCount
     /tmp/cctVucCU.s:797    .text.SDIO_GetFIFOCount:00000010 $d
     /tmp/cctVucCU.s:802    .text.SDIO_StartSDIOReadWait:00000000 $t
     /tmp/cctVucCU.s:807    .text.SDIO_StartSDIOReadWait:00000000 SDIO_StartSDIOReadWait
     /tmp/cctVucCU.s:838    .text.SDIO_StartSDIOReadWait:0000001c $d
     /tmp/cctVucCU.s:843    .text.SDIO_StopSDIOReadWait:00000000 $t
     /tmp/cctVucCU.s:848    .text.SDIO_StopSDIOReadWait:00000000 SDIO_StopSDIOReadWait
     /tmp/cctVucCU.s:879    .text.SDIO_StopSDIOReadWait:0000001c $d
     /tmp/cctVucCU.s:884    .text.SDIO_SetSDIOReadWaitMode:00000000 $t
     /tmp/cctVucCU.s:889    .text.SDIO_SetSDIOReadWaitMode:00000000 SDIO_SetSDIOReadWaitMode
     /tmp/cctVucCU.s:919    .text.SDIO_SetSDIOReadWaitMode:00000018 $d
     /tmp/cctVucCU.s:924    .text.SDIO_SetSDIOOperation:00000000 $t
     /tmp/cctVucCU.s:929    .text.SDIO_SetSDIOOperation:00000000 SDIO_SetSDIOOperation
     /tmp/cctVucCU.s:960    .text.SDIO_SetSDIOOperation:0000001c $d
     /tmp/cctVucCU.s:965    .text.SDIO_SendSDIOSuspendCmd:00000000 $t
     /tmp/cctVucCU.s:970    .text.SDIO_SendSDIOSuspendCmd:00000000 SDIO_SendSDIOSuspendCmd
     /tmp/cctVucCU.s:1001   .text.SDIO_SendSDIOSuspendCmd:0000001c $d
     /tmp/cctVucCU.s:1006   .text.SDIO_CommandCompletionCmd:00000000 $t
     /tmp/cctVucCU.s:1011   .text.SDIO_CommandCompletionCmd:00000000 SDIO_CommandCompletionCmd
     /tmp/cctVucCU.s:1042   .text.SDIO_CommandCompletionCmd:0000001c $d
     /tmp/cctVucCU.s:1047   .text.SDIO_CEATAITCmd:00000000 $t
     /tmp/cctVucCU.s:1052   .text.SDIO_CEATAITCmd:00000000 SDIO_CEATAITCmd
     /tmp/cctVucCU.s:1088   .text.SDIO_CEATAITCmd:00000028 $d
     /tmp/cctVucCU.s:1093   .text.SDIO_SendCEATACmd:00000000 $t
     /tmp/cctVucCU.s:1098   .text.SDIO_SendCEATACmd:00000000 SDIO_SendCEATACmd
     /tmp/cctVucCU.s:1129   .text.SDIO_SendCEATACmd:0000001c $d
     /tmp/cctVucCU.s:1134   .text.SDIO_DMACmd:00000000 $t
     /tmp/cctVucCU.s:1139   .text.SDIO_DMACmd:00000000 SDIO_DMACmd
     /tmp/cctVucCU.s:1170   .text.SDIO_DMACmd:0000001c $d
     /tmp/cctVucCU.s:1175   .text.SDIO_ITConfig:00000000 $t
     /tmp/cctVucCU.s:1180   .text.SDIO_ITConfig:00000000 SDIO_ITConfig
     /tmp/cctVucCU.s:1230   .text.SDIO_ITConfig:00000040 $d
     /tmp/cctVucCU.s:1235   .text.SDIO_GetFlagStatus:00000000 $t
     /tmp/cctVucCU.s:1240   .text.SDIO_GetFlagStatus:00000000 SDIO_GetFlagStatus
     /tmp/cctVucCU.s:1288   .text.SDIO_GetFlagStatus:00000038 $d
     /tmp/cctVucCU.s:1293   .text.SDIO_ClearFlag:00000000 $t
     /tmp/cctVucCU.s:1298   .text.SDIO_ClearFlag:00000000 SDIO_ClearFlag
     /tmp/cctVucCU.s:1328   .text.SDIO_ClearFlag:00000018 $d
     /tmp/cctVucCU.s:1333   .text.SDIO_GetITStatus:00000000 $t
     /tmp/cctVucCU.s:1338   .text.SDIO_GetITStatus:00000000 SDIO_GetITStatus
     /tmp/cctVucCU.s:1386   .text.SDIO_GetITStatus:00000038 $d
     /tmp/cctVucCU.s:1391   .text.SDIO_ClearITPendingBit:00000000 $t
     /tmp/cctVucCU.s:1396   .text.SDIO_ClearITPendingBit:00000000 SDIO_ClearITPendingBit
     /tmp/cctVucCU.s:1426   .text.SDIO_ClearITPendingBit:00000018 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
