   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_iwdg.c"
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  25              		.align	2
  26              		.global	IWDG_WriteAccessCmd
  27              		.thumb
  28              		.thumb_func
  30              	IWDG_WriteAccessCmd:
  31              	.LFB110:
  32              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @file    stm32f4xx_iwdg.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Prescaler and Counter configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - IWDG activation
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Flag management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @verbatim  
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                     IWDG features
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG can be started by either software or hardware (configurable
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          through option byte).
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          thus stays active even if the main clock fails.
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Once the IWDG is started, the LSI is forced ON and cannot be disabled
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          (LSI cannot be disabled too), and the counter starts counting down from 
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          the reset value of 0xFFF. When it reaches the end of count value (0x000)
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          a system reset is generated.
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG counter should be reloaded at regular intervals to prevent
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          an MCU reset.
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                           
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is implemented in the VDD voltage domain that is still functional
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).          
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          reset occurs.
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG timeout may vary due to LSI frequency dispersion. STM32F4xx
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          devices provide the capability to measure the LSI frequency (LSI clock
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          connected internally to TIM5 CH4 input capture). The measured value
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          can be used to have an IWDG timeout with an acceptable accuracy. 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          For more information, please refer to the STM32F4xx Reference manual
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                            
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                 How to use this driver
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          1. Enable write access to IWDG_PR and IWDG_RLR registers using
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *               
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          2. Configure the IWDG prescaler using IWDG_SetPrescaler() function
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          3. Configure the IWDG counter value using IWDG_SetReload() function.
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             This value will be loaded in the IWDG counter each time the counter
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             is reloaded, then the IWDG will start counting down from this value.
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          4. Start the IWDG using IWDG_Enable() function, when the IWDG is used
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             in software mode (no need to enable the LSI, it will be enabled
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             by hardware)
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          5. Then the application program must reload the IWDG counter at regular
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_ReloadCounter() function.      
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @endverbatim
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @attention
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #include "stm32f4xx_iwdg.h"
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG 
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief IWDG driver modules
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */ 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private define ------------------------------------------------------------*/
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* KR register bit mask */
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Private_Functions
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                   Prescaler and Counter configuration functions
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  33              		.loc 1 130 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37              		@ link register save eliminated.
  38 0000 80B4     		push	{r7}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_offset 7, -4
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 0346     		mov	r3, r0
  49 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  50              		.loc 1 133 0
  51 000a 044B     		ldr	r3, .L2
  52 000c FA88     		ldrh	r2, [r7, #6]
  53 000e 1A60     		str	r2, [r3, #0]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
  54              		.loc 1 134 0
  55 0010 07F10C07 		add	r7, r7, #12
  56 0014 BD46     		mov	sp, r7
  57 0016 80BC     		pop	{r7}
  58 0018 7047     		bx	lr
  59              	.L3:
  60 001a 00BF     		.align	2
  61              	.L2:
  62 001c 00300040 		.word	1073754112
  63              		.cfi_endproc
  64              	.LFE110:
  66              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  67              		.align	2
  68              		.global	IWDG_SetPrescaler
  69              		.thumb
  70              		.thumb_func
  72              	IWDG_SetPrescaler:
  73              	.LFB111:
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  74              		.loc 1 150 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 4
  82 0002 83B0     		sub	sp, sp, #12
  83              	.LCFI4:
  84              		.cfi_def_cfa_offset 16
  85 0004 00AF     		add	r7, sp, #0
  86              		.cfi_offset 7, -4
  87              	.LCFI5:
  88              		.cfi_def_cfa_register 7
  89 0006 0346     		mov	r3, r0
  90 0008 FB71     		strb	r3, [r7, #7]
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  91              		.loc 1 153 0
  92 000a 044B     		ldr	r3, .L5
  93 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 000e 5A60     		str	r2, [r3, #4]
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
  95              		.loc 1 154 0
  96 0010 07F10C07 		add	r7, r7, #12
  97 0014 BD46     		mov	sp, r7
  98 0016 80BC     		pop	{r7}
  99 0018 7047     		bx	lr
 100              	.L6:
 101 001a 00BF     		.align	2
 102              	.L5:
 103 001c 00300040 		.word	1073754112
 104              		.cfi_endproc
 105              	.LFE111:
 107              		.section	.text.IWDG_SetReload,"ax",%progbits
 108              		.align	2
 109              		.global	IWDG_SetReload
 110              		.thumb
 111              		.thumb_func
 113              	IWDG_SetReload:
 114              	.LFB112:
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Reload value.
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 115              		.loc 1 163 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120 0000 80B4     		push	{r7}
 121              	.LCFI6:
 122              		.cfi_def_cfa_offset 4
 123 0002 83B0     		sub	sp, sp, #12
 124              	.LCFI7:
 125              		.cfi_def_cfa_offset 16
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_offset 7, -4
 128              	.LCFI8:
 129              		.cfi_def_cfa_register 7
 130 0006 0346     		mov	r3, r0
 131 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->RLR = Reload;
 132              		.loc 1 166 0
 133 000a 044B     		ldr	r3, .L8
 134 000c FA88     		ldrh	r2, [r7, #6]
 135 000e 9A60     		str	r2, [r3, #8]
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 136              		.loc 1 167 0
 137 0010 07F10C07 		add	r7, r7, #12
 138 0014 BD46     		mov	sp, r7
 139 0016 80BC     		pop	{r7}
 140 0018 7047     		bx	lr
 141              	.L9:
 142 001a 00BF     		.align	2
 143              	.L8:
 144 001c 00300040 		.word	1073754112
 145              		.cfi_endproc
 146              	.LFE112:
 148              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
 149              		.align	2
 150              		.global	IWDG_ReloadCounter
 151              		.thumb
 152              		.thumb_func
 154              	IWDG_ReloadCounter:
 155              	.LFB113:
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *         (write access to IWDG_PR and IWDG_RLR registers disabled).
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_ReloadCounter(void)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 156              		.loc 1 176 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 80B4     		push	{r7}
 162              	.LCFI9:
 163              		.cfi_def_cfa_offset 4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_offset 7, -4
 166              	.LCFI10:
 167              		.cfi_def_cfa_register 7
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
 168              		.loc 1 177 0
 169 0004 034B     		ldr	r3, .L11
 170 0006 4AF6AA22 		movw	r2, #43690
 171 000a 1A60     		str	r2, [r3, #0]
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 172              		.loc 1 178 0
 173 000c BD46     		mov	sp, r7
 174 000e 80BC     		pop	{r7}
 175 0010 7047     		bx	lr
 176              	.L12:
 177 0012 00BF     		.align	2
 178              	.L11:
 179 0014 00300040 		.word	1073754112
 180              		.cfi_endproc
 181              	.LFE113:
 183              		.section	.text.IWDG_Enable,"ax",%progbits
 184              		.align	2
 185              		.global	IWDG_Enable
 186              		.thumb
 187              		.thumb_func
 189              	IWDG_Enable:
 190              	.LFB114:
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   IWDG activation function 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                           IWDG activation function
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_Enable(void)
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 191              		.loc 1 202 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 0000 80B4     		push	{r7}
 197              	.LCFI11:
 198              		.cfi_def_cfa_offset 4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_offset 7, -4
 201              	.LCFI12:
 202              		.cfi_def_cfa_register 7
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
 203              		.loc 1 203 0
 204 0004 034B     		ldr	r3, .L14
 205 0006 4CF6CC42 		movw	r2, #52428
 206 000a 1A60     		str	r2, [r3, #0]
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 207              		.loc 1 204 0
 208 000c BD46     		mov	sp, r7
 209 000e 80BC     		pop	{r7}
 210 0010 7047     		bx	lr
 211              	.L15:
 212 0012 00BF     		.align	2
 213              	.L14:
 214 0014 00300040 		.word	1073754112
 215              		.cfi_endproc
 216              	.LFE114:
 218              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 219              		.align	2
 220              		.global	IWDG_GetFlagStatus
 221              		.thumb
 222              		.thumb_func
 224              	IWDG_GetFlagStatus:
 225              	.LFB115:
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief  Flag management function  
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                             Flag management function 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 226              		.loc 1 231 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 16
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 80B4     		push	{r7}
 232              	.LCFI13:
 233              		.cfi_def_cfa_offset 4
 234 0002 85B0     		sub	sp, sp, #20
 235              	.LCFI14:
 236              		.cfi_def_cfa_offset 24
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_offset 7, -4
 239              	.LCFI15:
 240              		.cfi_def_cfa_register 7
 241 0006 0346     		mov	r3, r0
 242 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   FlagStatus bitstatus = RESET;
 243              		.loc 1 232 0
 244 000a 4FF00003 		mov	r3, #0
 245 000e FB73     		strb	r3, [r7, #15]
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 246              		.loc 1 235 0
 247 0010 0A4B     		ldr	r3, .L19
 248 0012 DA68     		ldr	r2, [r3, #12]
 249 0014 FB88     		ldrh	r3, [r7, #6]
 250 0016 02EA0303 		and	r3, r2, r3
 251 001a 002B     		cmp	r3, #0
 252 001c 03D0     		beq	.L17
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = SET;
 253              		.loc 1 237 0
 254 001e 4FF00103 		mov	r3, #1
 255 0022 FB73     		strb	r3, [r7, #15]
 256 0024 02E0     		b	.L18
 257              	.L17:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   else
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = RESET;
 258              		.loc 1 241 0
 259 0026 4FF00003 		mov	r3, #0
 260 002a FB73     		strb	r3, [r7, #15]
 261              	.L18:
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Return the flag status */
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   return bitstatus;
 262              		.loc 1 244 0
 263 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 264              		.loc 1 245 0
 265 002e 1846     		mov	r0, r3
 266 0030 07F11407 		add	r7, r7, #20
 267 0034 BD46     		mov	sp, r7
 268 0036 80BC     		pop	{r7}
 269 0038 7047     		bx	lr
 270              	.L20:
 271 003a 00BF     		.align	2
 272              	.L19:
 273 003c 00300040 		.word	1073754112
 274              		.cfi_endproc
 275              	.LFE115:
 277              		.text
 278              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_iwdg.c
     /tmp/cc84FNDo.s:25     .text.IWDG_WriteAccessCmd:00000000 $t
     /tmp/cc84FNDo.s:30     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
     /tmp/cc84FNDo.s:62     .text.IWDG_WriteAccessCmd:0000001c $d
     /tmp/cc84FNDo.s:67     .text.IWDG_SetPrescaler:00000000 $t
     /tmp/cc84FNDo.s:72     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
     /tmp/cc84FNDo.s:103    .text.IWDG_SetPrescaler:0000001c $d
     /tmp/cc84FNDo.s:108    .text.IWDG_SetReload:00000000 $t
     /tmp/cc84FNDo.s:113    .text.IWDG_SetReload:00000000 IWDG_SetReload
     /tmp/cc84FNDo.s:144    .text.IWDG_SetReload:0000001c $d
     /tmp/cc84FNDo.s:149    .text.IWDG_ReloadCounter:00000000 $t
     /tmp/cc84FNDo.s:154    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
     /tmp/cc84FNDo.s:179    .text.IWDG_ReloadCounter:00000014 $d
     /tmp/cc84FNDo.s:184    .text.IWDG_Enable:00000000 $t
     /tmp/cc84FNDo.s:189    .text.IWDG_Enable:00000000 IWDG_Enable
     /tmp/cc84FNDo.s:214    .text.IWDG_Enable:00000014 $d
     /tmp/cc84FNDo.s:219    .text.IWDG_GetFlagStatus:00000000 $t
     /tmp/cc84FNDo.s:224    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
     /tmp/cc84FNDo.s:273    .text.IWDG_GetFlagStatus:0000003c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
