   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_can.c"
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.CAN_DeInit,"ax",%progbits
  25              		.align	2
  26              		.global	CAN_DeInit
  27              		.thumb
  28              		.thumb_func
  30              	CAN_DeInit:
  31              	.LFB110:
  32              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  33              		.loc 1 163 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40 0002 82B0     		sub	sp, sp, #8
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_offset 14, -4
  45              		.cfi_offset 7, -8
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  49              		.loc 1 167 0
  50 0008 7A68     		ldr	r2, [r7, #4]
  51 000a 104B     		ldr	r3, .L4
  52 000c 9A42     		cmp	r2, r3
  53 000e 0CD1     		bne	.L2
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  54              		.loc 1 170 0
  55 0010 4FF00070 		mov	r0, #33554432
  56 0014 4FF00101 		mov	r1, #1
  57 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  58              		.loc 1 172 0
  59 001c 4FF00070 		mov	r0, #33554432
  60 0020 4FF00001 		mov	r1, #0
  61 0024 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  62 0028 0BE0     		b	.L1
  63              	.L2:
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  64              		.loc 1 177 0
  65 002a 4FF08060 		mov	r0, #67108864
  66 002e 4FF00101 		mov	r1, #1
  67 0032 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  68              		.loc 1 179 0
  69 0036 4FF08060 		mov	r0, #67108864
  70 003a 4FF00001 		mov	r1, #0
  71 003e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  72              	.L1:
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  73              		.loc 1 181 0
  74 0042 07F10807 		add	r7, r7, #8
  75 0046 BD46     		mov	sp, r7
  76 0048 80BD     		pop	{r7, pc}
  77              	.L5:
  78 004a 00BF     		.align	2
  79              	.L4:
  80 004c 00640040 		.word	1073767424
  81              		.cfi_endproc
  82              	.LFE110:
  84              		.section	.text.CAN_Init,"ax",%progbits
  85              		.align	2
  86              		.global	CAN_Init
  87              		.thumb
  88              		.thumb_func
  90              	CAN_Init:
  91              	.LFB111:
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  92              		.loc 1 193 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 16
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              	.LCFI3:
  99              		.cfi_def_cfa_offset 4
 100 0002 85B0     		sub	sp, sp, #20
 101              	.LCFI4:
 102              		.cfi_def_cfa_offset 24
 103 0004 00AF     		add	r7, sp, #0
 104              		.cfi_offset 7, -4
 105              	.LCFI5:
 106              		.cfi_def_cfa_register 7
 107 0006 7860     		str	r0, [r7, #4]
 108 0008 3960     		str	r1, [r7, #0]
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 109              		.loc 1 194 0
 110 000a 4FF00003 		mov	r3, #0
 111 000e FB73     		strb	r3, [r7, #15]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 112              		.loc 1 195 0
 113 0010 4FF00003 		mov	r3, #0
 114 0014 BB60     		str	r3, [r7, #8]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 115              		.loc 1 211 0
 116 0016 7B68     		ldr	r3, [r7, #4]
 117 0018 1B68     		ldr	r3, [r3, #0]
 118 001a 23F00202 		bic	r2, r3, #2
 119 001e 7B68     		ldr	r3, [r7, #4]
 120 0020 1A60     		str	r2, [r3, #0]
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 121              		.loc 1 214 0
 122 0022 7B68     		ldr	r3, [r7, #4]
 123 0024 1B68     		ldr	r3, [r3, #0]
 124 0026 43F00102 		orr	r2, r3, #1
 125 002a 7B68     		ldr	r3, [r7, #4]
 126 002c 1A60     		str	r2, [r3, #0]
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 127              		.loc 1 217 0
 128 002e 03E0     		b	.L7
 129              	.L9:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 130              		.loc 1 219 0
 131 0030 BB68     		ldr	r3, [r7, #8]
 132 0032 03F10103 		add	r3, r3, #1
 133 0036 BB60     		str	r3, [r7, #8]
 134              	.L7:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 135              		.loc 1 217 0 discriminator 1
 136 0038 7B68     		ldr	r3, [r7, #4]
 137 003a 5B68     		ldr	r3, [r3, #4]
 138 003c 03F00103 		and	r3, r3, #1
 139 0040 002B     		cmp	r3, #0
 140 0042 04D1     		bne	.L8
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 141              		.loc 1 217 0 is_stmt 0 discriminator 2
 142 0044 BA68     		ldr	r2, [r7, #8]
 143 0046 4FF6FF73 		movw	r3, #65535
 144 004a 9A42     		cmp	r2, r3
 145 004c F0D1     		bne	.L9
 146              	.L8:
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 147              		.loc 1 223 0 is_stmt 1
 148 004e 7B68     		ldr	r3, [r7, #4]
 149 0050 5B68     		ldr	r3, [r3, #4]
 150 0052 03F00103 		and	r3, r3, #1
 151 0056 002B     		cmp	r3, #0
 152 0058 03D1     		bne	.L10
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 153              		.loc 1 225 0
 154 005a 4FF00003 		mov	r3, #0
 155 005e FB73     		strb	r3, [r7, #15]
 156 0060 A7E0     		b	.L11
 157              	.L10:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 158              		.loc 1 230 0
 159 0062 3B68     		ldr	r3, [r7, #0]
 160 0064 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 161 0066 012B     		cmp	r3, #1
 162 0068 06D1     		bne	.L12
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 163              		.loc 1 232 0
 164 006a 7B68     		ldr	r3, [r7, #4]
 165 006c 1B68     		ldr	r3, [r3, #0]
 166 006e 43F08002 		orr	r2, r3, #128
 167 0072 7B68     		ldr	r3, [r7, #4]
 168 0074 1A60     		str	r2, [r3, #0]
 169 0076 05E0     		b	.L13
 170              	.L12:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 171              		.loc 1 236 0
 172 0078 7B68     		ldr	r3, [r7, #4]
 173 007a 1B68     		ldr	r3, [r3, #0]
 174 007c 23F08002 		bic	r2, r3, #128
 175 0080 7B68     		ldr	r3, [r7, #4]
 176 0082 1A60     		str	r2, [r3, #0]
 177              	.L13:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 178              		.loc 1 240 0
 179 0084 3B68     		ldr	r3, [r7, #0]
 180 0086 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 181 0088 012B     		cmp	r3, #1
 182 008a 06D1     		bne	.L14
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 183              		.loc 1 242 0
 184 008c 7B68     		ldr	r3, [r7, #4]
 185 008e 1B68     		ldr	r3, [r3, #0]
 186 0090 43F04002 		orr	r2, r3, #64
 187 0094 7B68     		ldr	r3, [r7, #4]
 188 0096 1A60     		str	r2, [r3, #0]
 189 0098 05E0     		b	.L15
 190              	.L14:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 191              		.loc 1 246 0
 192 009a 7B68     		ldr	r3, [r7, #4]
 193 009c 1B68     		ldr	r3, [r3, #0]
 194 009e 23F04002 		bic	r2, r3, #64
 195 00a2 7B68     		ldr	r3, [r7, #4]
 196 00a4 1A60     		str	r2, [r3, #0]
 197              	.L15:
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 198              		.loc 1 250 0
 199 00a6 3B68     		ldr	r3, [r7, #0]
 200 00a8 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 201 00aa 012B     		cmp	r3, #1
 202 00ac 06D1     		bne	.L16
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 203              		.loc 1 252 0
 204 00ae 7B68     		ldr	r3, [r7, #4]
 205 00b0 1B68     		ldr	r3, [r3, #0]
 206 00b2 43F02002 		orr	r2, r3, #32
 207 00b6 7B68     		ldr	r3, [r7, #4]
 208 00b8 1A60     		str	r2, [r3, #0]
 209 00ba 05E0     		b	.L17
 210              	.L16:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 211              		.loc 1 256 0
 212 00bc 7B68     		ldr	r3, [r7, #4]
 213 00be 1B68     		ldr	r3, [r3, #0]
 214 00c0 23F02002 		bic	r2, r3, #32
 215 00c4 7B68     		ldr	r3, [r7, #4]
 216 00c6 1A60     		str	r2, [r3, #0]
 217              	.L17:
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 218              		.loc 1 260 0
 219 00c8 3B68     		ldr	r3, [r7, #0]
 220 00ca 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 221 00cc 012B     		cmp	r3, #1
 222 00ce 06D1     		bne	.L18
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 223              		.loc 1 262 0
 224 00d0 7B68     		ldr	r3, [r7, #4]
 225 00d2 1B68     		ldr	r3, [r3, #0]
 226 00d4 43F01002 		orr	r2, r3, #16
 227 00d8 7B68     		ldr	r3, [r7, #4]
 228 00da 1A60     		str	r2, [r3, #0]
 229 00dc 05E0     		b	.L19
 230              	.L18:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 231              		.loc 1 266 0
 232 00de 7B68     		ldr	r3, [r7, #4]
 233 00e0 1B68     		ldr	r3, [r3, #0]
 234 00e2 23F01002 		bic	r2, r3, #16
 235 00e6 7B68     		ldr	r3, [r7, #4]
 236 00e8 1A60     		str	r2, [r3, #0]
 237              	.L19:
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 238              		.loc 1 270 0
 239 00ea 3B68     		ldr	r3, [r7, #0]
 240 00ec 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 241 00ee 012B     		cmp	r3, #1
 242 00f0 06D1     		bne	.L20
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 243              		.loc 1 272 0
 244 00f2 7B68     		ldr	r3, [r7, #4]
 245 00f4 1B68     		ldr	r3, [r3, #0]
 246 00f6 43F00802 		orr	r2, r3, #8
 247 00fa 7B68     		ldr	r3, [r7, #4]
 248 00fc 1A60     		str	r2, [r3, #0]
 249 00fe 05E0     		b	.L21
 250              	.L20:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 251              		.loc 1 276 0
 252 0100 7B68     		ldr	r3, [r7, #4]
 253 0102 1B68     		ldr	r3, [r3, #0]
 254 0104 23F00802 		bic	r2, r3, #8
 255 0108 7B68     		ldr	r3, [r7, #4]
 256 010a 1A60     		str	r2, [r3, #0]
 257              	.L21:
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 258              		.loc 1 280 0
 259 010c 3B68     		ldr	r3, [r7, #0]
 260 010e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 261 0110 012B     		cmp	r3, #1
 262 0112 06D1     		bne	.L22
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 263              		.loc 1 282 0
 264 0114 7B68     		ldr	r3, [r7, #4]
 265 0116 1B68     		ldr	r3, [r3, #0]
 266 0118 43F00402 		orr	r2, r3, #4
 267 011c 7B68     		ldr	r3, [r7, #4]
 268 011e 1A60     		str	r2, [r3, #0]
 269 0120 05E0     		b	.L23
 270              	.L22:
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 271              		.loc 1 286 0
 272 0122 7B68     		ldr	r3, [r7, #4]
 273 0124 1B68     		ldr	r3, [r3, #0]
 274 0126 23F00402 		bic	r2, r3, #4
 275 012a 7B68     		ldr	r3, [r7, #4]
 276 012c 1A60     		str	r2, [r3, #0]
 277              	.L23:
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 278              		.loc 1 290 0
 279 012e 3B68     		ldr	r3, [r7, #0]
 280 0130 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 281 0132 4FEA8372 		lsl	r2, r3, #30
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 282              		.loc 1 291 0
 283 0136 3B68     		ldr	r3, [r7, #0]
 284 0138 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 285 013a 4FEA0363 		lsl	r3, r3, #24
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 286              		.loc 1 290 0
 287 013e 1A43     		orrs	r2, r2, r3
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 288              		.loc 1 292 0
 289 0140 3B68     		ldr	r3, [r7, #0]
 290 0142 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 291 0144 4FEA0343 		lsl	r3, r3, #16
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 292              		.loc 1 291 0
 293 0148 1A43     		orrs	r2, r2, r3
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 294              		.loc 1 293 0
 295 014a 3B68     		ldr	r3, [r7, #0]
 296 014c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 297 014e 4FEA0353 		lsl	r3, r3, #20
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 298              		.loc 1 292 0
 299 0152 1A43     		orrs	r2, r2, r3
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 300              		.loc 1 294 0
 301 0154 3B68     		ldr	r3, [r7, #0]
 302 0156 1B88     		ldrh	r3, [r3, #0]
 303 0158 03F1FF33 		add	r3, r3, #-1
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 304              		.loc 1 293 0
 305 015c 1A43     		orrs	r2, r2, r3
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 306              		.loc 1 290 0
 307 015e 7B68     		ldr	r3, [r7, #4]
 308 0160 DA61     		str	r2, [r3, #28]
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 309              		.loc 1 297 0
 310 0162 7B68     		ldr	r3, [r7, #4]
 311 0164 1B68     		ldr	r3, [r3, #0]
 312 0166 23F00102 		bic	r2, r3, #1
 313 016a 7B68     		ldr	r3, [r7, #4]
 314 016c 1A60     		str	r2, [r3, #0]
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 315              		.loc 1 300 0
 316 016e 4FF00003 		mov	r3, #0
 317 0172 BB60     		str	r3, [r7, #8]
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 318              		.loc 1 302 0
 319 0174 03E0     		b	.L24
 320              	.L26:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 321              		.loc 1 304 0
 322 0176 BB68     		ldr	r3, [r7, #8]
 323 0178 03F10103 		add	r3, r3, #1
 324 017c BB60     		str	r3, [r7, #8]
 325              	.L24:
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 326              		.loc 1 302 0 discriminator 1
 327 017e 7B68     		ldr	r3, [r7, #4]
 328 0180 5B68     		ldr	r3, [r3, #4]
 329 0182 03F00103 		and	r3, r3, #1
 330 0186 DBB2     		uxtb	r3, r3
 331 0188 002B     		cmp	r3, #0
 332 018a 04D0     		beq	.L25
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 333              		.loc 1 302 0 is_stmt 0 discriminator 2
 334 018c BA68     		ldr	r2, [r7, #8]
 335 018e 4FF6FF73 		movw	r3, #65535
 336 0192 9A42     		cmp	r2, r3
 337 0194 EFD1     		bne	.L26
 338              	.L25:
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 339              		.loc 1 308 0 is_stmt 1
 340 0196 7B68     		ldr	r3, [r7, #4]
 341 0198 5B68     		ldr	r3, [r3, #4]
 342 019a 03F00103 		and	r3, r3, #1
 343 019e DBB2     		uxtb	r3, r3
 344 01a0 002B     		cmp	r3, #0
 345 01a2 03D0     		beq	.L27
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 346              		.loc 1 310 0
 347 01a4 4FF00003 		mov	r3, #0
 348 01a8 FB73     		strb	r3, [r7, #15]
 349 01aa 02E0     		b	.L11
 350              	.L27:
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 351              		.loc 1 314 0
 352 01ac 4FF00103 		mov	r3, #1
 353 01b0 FB73     		strb	r3, [r7, #15]
 354              	.L11:
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 355              		.loc 1 319 0
 356 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 357              		.loc 1 320 0
 358 01b4 1846     		mov	r0, r3
 359 01b6 07F11407 		add	r7, r7, #20
 360 01ba BD46     		mov	sp, r7
 361 01bc 80BC     		pop	{r7}
 362 01be 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE111:
 366              		.section	.text.CAN_FilterInit,"ax",%progbits
 367              		.align	2
 368              		.global	CAN_FilterInit
 369              		.thumb
 370              		.thumb_func
 372              	CAN_FilterInit:
 373              	.LFB112:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 374              		.loc 1 330 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 16
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              	.LCFI6:
 381              		.cfi_def_cfa_offset 4
 382 0002 85B0     		sub	sp, sp, #20
 383              	.LCFI7:
 384              		.cfi_def_cfa_offset 24
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_offset 7, -4
 387              	.LCFI8:
 388              		.cfi_def_cfa_register 7
 389 0006 7860     		str	r0, [r7, #4]
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 390              		.loc 1 331 0
 391 0008 4FF00003 		mov	r3, #0
 392 000c FB60     		str	r3, [r7, #12]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 393              		.loc 1 339 0
 394 000e 7B68     		ldr	r3, [r7, #4]
 395 0010 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 396 0012 4FF00102 		mov	r2, #1
 397 0016 02FA03F3 		lsl	r3, r2, r3
 398 001a FB60     		str	r3, [r7, #12]
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 399              		.loc 1 342 0
 400 001c 5E4B     		ldr	r3, .L36
 401 001e 5E4A     		ldr	r2, .L36
 402 0020 D2F80022 		ldr	r2, [r2, #512]
 403 0024 42F00102 		orr	r2, r2, #1
 404 0028 C3F80022 		str	r2, [r3, #512]
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 405              		.loc 1 345 0
 406 002c 5A4B     		ldr	r3, .L36
 407 002e 5A4A     		ldr	r2, .L36
 408 0030 D2F81C12 		ldr	r1, [r2, #540]
 409 0034 FA68     		ldr	r2, [r7, #12]
 410 0036 6FEA0202 		mvn	r2, r2
 411 003a 01EA0202 		and	r2, r1, r2
 412 003e C3F81C22 		str	r2, [r3, #540]
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 413              		.loc 1 348 0
 414 0042 7B68     		ldr	r3, [r7, #4]
 415 0044 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 416 0046 002B     		cmp	r3, #0
 417 0048 2AD1     		bne	.L29
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 418              		.loc 1 351 0
 419 004a 534B     		ldr	r3, .L36
 420 004c 524A     		ldr	r2, .L36
 421 004e D2F80C12 		ldr	r1, [r2, #524]
 422 0052 FA68     		ldr	r2, [r7, #12]
 423 0054 6FEA0202 		mvn	r2, r2
 424 0058 01EA0202 		and	r2, r1, r2
 425 005c C3F80C22 		str	r2, [r3, #524]
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 426              		.loc 1 355 0
 427 0060 4D4B     		ldr	r3, .L36
 428 0062 7A68     		ldr	r2, [r7, #4]
 429 0064 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 430              		.loc 1 356 0
 431 0066 7968     		ldr	r1, [r7, #4]
 432 0068 C988     		ldrh	r1, [r1, #6]
 433 006a 4FEA0140 		lsl	r0, r1, #16
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 434              		.loc 1 357 0
 435 006e 7968     		ldr	r1, [r7, #4]
 436 0070 4988     		ldrh	r1, [r1, #2]
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 437              		.loc 1 356 0
 438 0072 40EA0101 		orr	r1, r0, r1
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 439              		.loc 1 355 0
 440 0076 02F14802 		add	r2, r2, #72
 441 007a 43F83210 		str	r1, [r3, r2, lsl #3]
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 442              		.loc 1 361 0
 443 007e 4649     		ldr	r1, .L36
 444 0080 7B68     		ldr	r3, [r7, #4]
 445 0082 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 446              		.loc 1 362 0
 447 0084 7A68     		ldr	r2, [r7, #4]
 448 0086 9288     		ldrh	r2, [r2, #4]
 449 0088 4FEA0240 		lsl	r0, r2, #16
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 450              		.loc 1 363 0
 451 008c 7A68     		ldr	r2, [r7, #4]
 452 008e 1288     		ldrh	r2, [r2, #0]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 453              		.loc 1 362 0
 454 0090 40EA0202 		orr	r2, r0, r2
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 455              		.loc 1 361 0
 456 0094 03F14803 		add	r3, r3, #72
 457 0098 4FEAC303 		lsl	r3, r3, #3
 458 009c CB18     		adds	r3, r1, r3
 459 009e 5A60     		str	r2, [r3, #4]
 460              	.L29:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 461              		.loc 1 366 0
 462 00a0 7B68     		ldr	r3, [r7, #4]
 463 00a2 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 464 00a4 012B     		cmp	r3, #1
 465 00a6 28D1     		bne	.L30
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 466              		.loc 1 369 0
 467 00a8 3B4B     		ldr	r3, .L36
 468 00aa 3B4A     		ldr	r2, .L36
 469 00ac D2F80C12 		ldr	r1, [r2, #524]
 470 00b0 FA68     		ldr	r2, [r7, #12]
 471 00b2 41EA0202 		orr	r2, r1, r2
 472 00b6 C3F80C22 		str	r2, [r3, #524]
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 473              		.loc 1 371 0
 474 00ba 374B     		ldr	r3, .L36
 475 00bc 7A68     		ldr	r2, [r7, #4]
 476 00be 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 477              		.loc 1 372 0
 478 00c0 7968     		ldr	r1, [r7, #4]
 479 00c2 0988     		ldrh	r1, [r1, #0]
 480 00c4 4FEA0140 		lsl	r0, r1, #16
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 481              		.loc 1 373 0
 482 00c8 7968     		ldr	r1, [r7, #4]
 483 00ca 4988     		ldrh	r1, [r1, #2]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 484              		.loc 1 372 0
 485 00cc 40EA0101 		orr	r1, r0, r1
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 486              		.loc 1 371 0
 487 00d0 02F14802 		add	r2, r2, #72
 488 00d4 43F83210 		str	r1, [r3, r2, lsl #3]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 489              		.loc 1 375 0
 490 00d8 2F49     		ldr	r1, .L36
 491 00da 7B68     		ldr	r3, [r7, #4]
 492 00dc 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 493              		.loc 1 376 0
 494 00de 7A68     		ldr	r2, [r7, #4]
 495 00e0 9288     		ldrh	r2, [r2, #4]
 496 00e2 4FEA0240 		lsl	r0, r2, #16
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 497              		.loc 1 377 0
 498 00e6 7A68     		ldr	r2, [r7, #4]
 499 00e8 D288     		ldrh	r2, [r2, #6]
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 500              		.loc 1 376 0
 501 00ea 40EA0202 		orr	r2, r0, r2
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 502              		.loc 1 375 0
 503 00ee 03F14803 		add	r3, r3, #72
 504 00f2 4FEAC303 		lsl	r3, r3, #3
 505 00f6 CB18     		adds	r3, r1, r3
 506 00f8 5A60     		str	r2, [r3, #4]
 507              	.L30:
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 508              		.loc 1 381 0
 509 00fa 7B68     		ldr	r3, [r7, #4]
 510 00fc DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 511 00fe 002B     		cmp	r3, #0
 512 0100 0BD1     		bne	.L31
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 513              		.loc 1 384 0
 514 0102 254B     		ldr	r3, .L36
 515 0104 244A     		ldr	r2, .L36
 516 0106 D2F80412 		ldr	r1, [r2, #516]
 517 010a FA68     		ldr	r2, [r7, #12]
 518 010c 6FEA0202 		mvn	r2, r2
 519 0110 01EA0202 		and	r2, r1, r2
 520 0114 C3F80422 		str	r2, [r3, #516]
 521 0118 08E0     		b	.L32
 522              	.L31:
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 523              		.loc 1 389 0
 524 011a 1F4B     		ldr	r3, .L36
 525 011c 1E4A     		ldr	r2, .L36
 526 011e D2F80412 		ldr	r1, [r2, #516]
 527 0122 FA68     		ldr	r2, [r7, #12]
 528 0124 41EA0202 		orr	r2, r1, r2
 529 0128 C3F80422 		str	r2, [r3, #516]
 530              	.L32:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 531              		.loc 1 393 0
 532 012c 7B68     		ldr	r3, [r7, #4]
 533 012e 1B89     		ldrh	r3, [r3, #8]
 534 0130 002B     		cmp	r3, #0
 535 0132 0AD1     		bne	.L33
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 536              		.loc 1 396 0
 537 0134 184B     		ldr	r3, .L36
 538 0136 184A     		ldr	r2, .L36
 539 0138 D2F81412 		ldr	r1, [r2, #532]
 540 013c FA68     		ldr	r2, [r7, #12]
 541 013e 6FEA0202 		mvn	r2, r2
 542 0142 01EA0202 		and	r2, r1, r2
 543 0146 C3F81422 		str	r2, [r3, #532]
 544              	.L33:
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 545              		.loc 1 399 0
 546 014a 7B68     		ldr	r3, [r7, #4]
 547 014c 1B89     		ldrh	r3, [r3, #8]
 548 014e 012B     		cmp	r3, #1
 549 0150 08D1     		bne	.L34
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 550              		.loc 1 402 0
 551 0152 114B     		ldr	r3, .L36
 552 0154 104A     		ldr	r2, .L36
 553 0156 D2F81412 		ldr	r1, [r2, #532]
 554 015a FA68     		ldr	r2, [r7, #12]
 555 015c 41EA0202 		orr	r2, r1, r2
 556 0160 C3F81422 		str	r2, [r3, #532]
 557              	.L34:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 558              		.loc 1 406 0
 559 0164 7B68     		ldr	r3, [r7, #4]
 560 0166 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 561 0168 012B     		cmp	r3, #1
 562 016a 08D1     		bne	.L35
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 563              		.loc 1 408 0
 564 016c 0A4B     		ldr	r3, .L36
 565 016e 0A4A     		ldr	r2, .L36
 566 0170 D2F81C12 		ldr	r1, [r2, #540]
 567 0174 FA68     		ldr	r2, [r7, #12]
 568 0176 41EA0202 		orr	r2, r1, r2
 569 017a C3F81C22 		str	r2, [r3, #540]
 570              	.L35:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 571              		.loc 1 412 0
 572 017e 064B     		ldr	r3, .L36
 573 0180 054A     		ldr	r2, .L36
 574 0182 D2F80022 		ldr	r2, [r2, #512]
 575 0186 22F00102 		bic	r2, r2, #1
 576 018a C3F80022 		str	r2, [r3, #512]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 577              		.loc 1 413 0
 578 018e 07F11407 		add	r7, r7, #20
 579 0192 BD46     		mov	sp, r7
 580 0194 80BC     		pop	{r7}
 581 0196 7047     		bx	lr
 582              	.L37:
 583              		.align	2
 584              	.L36:
 585 0198 00640040 		.word	1073767424
 586              		.cfi_endproc
 587              	.LFE112:
 589              		.section	.text.CAN_StructInit,"ax",%progbits
 590              		.align	2
 591              		.global	CAN_StructInit
 592              		.thumb
 593              		.thumb_func
 595              	CAN_StructInit:
 596              	.LFB113:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 597              		.loc 1 421 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 602 0000 80B4     		push	{r7}
 603              	.LCFI9:
 604              		.cfi_def_cfa_offset 4
 605 0002 83B0     		sub	sp, sp, #12
 606              	.LCFI10:
 607              		.cfi_def_cfa_offset 16
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_offset 7, -4
 610              	.LCFI11:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 613              		.loc 1 425 0
 614 0008 7B68     		ldr	r3, [r7, #4]
 615 000a 4FF00002 		mov	r2, #0
 616 000e 9A71     		strb	r2, [r3, #6]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 617              		.loc 1 428 0
 618 0010 7B68     		ldr	r3, [r7, #4]
 619 0012 4FF00002 		mov	r2, #0
 620 0016 DA71     		strb	r2, [r3, #7]
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 621              		.loc 1 431 0
 622 0018 7B68     		ldr	r3, [r7, #4]
 623 001a 4FF00002 		mov	r2, #0
 624 001e 1A72     		strb	r2, [r3, #8]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 625              		.loc 1 434 0
 626 0020 7B68     		ldr	r3, [r7, #4]
 627 0022 4FF00002 		mov	r2, #0
 628 0026 5A72     		strb	r2, [r3, #9]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 629              		.loc 1 437 0
 630 0028 7B68     		ldr	r3, [r7, #4]
 631 002a 4FF00002 		mov	r2, #0
 632 002e 9A72     		strb	r2, [r3, #10]
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 633              		.loc 1 440 0
 634 0030 7B68     		ldr	r3, [r7, #4]
 635 0032 4FF00002 		mov	r2, #0
 636 0036 DA72     		strb	r2, [r3, #11]
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 637              		.loc 1 443 0
 638 0038 7B68     		ldr	r3, [r7, #4]
 639 003a 4FF00002 		mov	r2, #0
 640 003e 9A70     		strb	r2, [r3, #2]
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 641              		.loc 1 446 0
 642 0040 7B68     		ldr	r3, [r7, #4]
 643 0042 4FF00002 		mov	r2, #0
 644 0046 DA70     		strb	r2, [r3, #3]
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 645              		.loc 1 449 0
 646 0048 7B68     		ldr	r3, [r7, #4]
 647 004a 4FF00302 		mov	r2, #3
 648 004e 1A71     		strb	r2, [r3, #4]
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 649              		.loc 1 452 0
 650 0050 7B68     		ldr	r3, [r7, #4]
 651 0052 4FF00202 		mov	r2, #2
 652 0056 5A71     		strb	r2, [r3, #5]
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 653              		.loc 1 455 0
 654 0058 7B68     		ldr	r3, [r7, #4]
 655 005a 4FF00102 		mov	r2, #1
 656 005e 1A80     		strh	r2, [r3, #0]	@ movhi
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 657              		.loc 1 456 0
 658 0060 07F10C07 		add	r7, r7, #12
 659 0064 BD46     		mov	sp, r7
 660 0066 80BC     		pop	{r7}
 661 0068 7047     		bx	lr
 662              		.cfi_endproc
 663              	.LFE113:
 665 006a 00BF     		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 666              		.align	2
 667              		.global	CAN_SlaveStartBank
 668              		.thumb
 669              		.thumb_func
 671              	CAN_SlaveStartBank:
 672              	.LFB114:
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 673              		.loc 1 464 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 8
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              	.LCFI12:
 680              		.cfi_def_cfa_offset 4
 681 0002 83B0     		sub	sp, sp, #12
 682              	.LCFI13:
 683              		.cfi_def_cfa_offset 16
 684 0004 00AF     		add	r7, sp, #0
 685              		.cfi_offset 7, -4
 686              	.LCFI14:
 687              		.cfi_def_cfa_register 7
 688 0006 0346     		mov	r3, r0
 689 0008 FB71     		strb	r3, [r7, #7]
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 690              		.loc 1 469 0
 691 000a 154B     		ldr	r3, .L40
 692 000c 144A     		ldr	r2, .L40
 693 000e D2F80022 		ldr	r2, [r2, #512]
 694 0012 42F00102 		orr	r2, r2, #1
 695 0016 C3F80022 		str	r2, [r3, #512]
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 696              		.loc 1 472 0
 697 001a 114A     		ldr	r2, .L40
 698 001c 104B     		ldr	r3, .L40
 699 001e D3F80032 		ldr	r3, [r3, #512]
 700 0022 23F47C53 		bic	r3, r3, #16128
 701 0026 23F00E03 		bic	r3, r3, #14
 702 002a C2F80032 		str	r3, [r2, #512]
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 703              		.loc 1 473 0
 704 002e 0C4B     		ldr	r3, .L40
 705 0030 0B4A     		ldr	r2, .L40
 706 0032 D2F80012 		ldr	r1, [r2, #512]
 707 0036 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 708 0038 4FEA0222 		lsl	r2, r2, #8
 709 003c 41EA0202 		orr	r2, r1, r2
 710 0040 C3F80022 		str	r2, [r3, #512]
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 711              		.loc 1 476 0
 712 0044 064B     		ldr	r3, .L40
 713 0046 064A     		ldr	r2, .L40
 714 0048 D2F80022 		ldr	r2, [r2, #512]
 715 004c 22F00102 		bic	r2, r2, #1
 716 0050 C3F80022 		str	r2, [r3, #512]
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 717              		.loc 1 477 0
 718 0054 07F10C07 		add	r7, r7, #12
 719 0058 BD46     		mov	sp, r7
 720 005a 80BC     		pop	{r7}
 721 005c 7047     		bx	lr
 722              	.L41:
 723 005e 00BF     		.align	2
 724              	.L40:
 725 0060 00640040 		.word	1073767424
 726              		.cfi_endproc
 727              	.LFE114:
 729              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 730              		.align	2
 731              		.global	CAN_DBGFreeze
 732              		.thumb
 733              		.thumb_func
 735              	CAN_DBGFreeze:
 736              	.LFB115:
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 737              		.loc 1 489 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              	.LCFI15:
 744              		.cfi_def_cfa_offset 4
 745 0002 83B0     		sub	sp, sp, #12
 746              	.LCFI16:
 747              		.cfi_def_cfa_offset 16
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_offset 7, -4
 750              	.LCFI17:
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
 753 0008 0B46     		mov	r3, r1
 754 000a FB70     		strb	r3, [r7, #3]
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 755              		.loc 1 494 0
 756 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 757 000e 002B     		cmp	r3, #0
 758 0010 06D0     		beq	.L43
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 759              		.loc 1 497 0
 760 0012 7B68     		ldr	r3, [r7, #4]
 761 0014 1B68     		ldr	r3, [r3, #0]
 762 0016 43F48032 		orr	r2, r3, #65536
 763 001a 7B68     		ldr	r3, [r7, #4]
 764 001c 1A60     		str	r2, [r3, #0]
 765 001e 05E0     		b	.L42
 766              	.L43:
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 767              		.loc 1 502 0
 768 0020 7B68     		ldr	r3, [r7, #4]
 769 0022 1B68     		ldr	r3, [r3, #0]
 770 0024 23F48032 		bic	r2, r3, #65536
 771 0028 7B68     		ldr	r3, [r7, #4]
 772 002a 1A60     		str	r2, [r3, #0]
 773              	.L42:
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 774              		.loc 1 504 0
 775 002c 07F10C07 		add	r7, r7, #12
 776 0030 BD46     		mov	sp, r7
 777 0032 80BC     		pop	{r7}
 778 0034 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE115:
 782 0036 00BF     		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 783              		.align	2
 784              		.global	CAN_TTComModeCmd
 785              		.thumb
 786              		.thumb_func
 788              	CAN_TTComModeCmd:
 789              	.LFB116:
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 790              		.loc 1 519 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 8
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795 0000 80B4     		push	{r7}
 796              	.LCFI18:
 797              		.cfi_def_cfa_offset 4
 798 0002 83B0     		sub	sp, sp, #12
 799              	.LCFI19:
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              		.cfi_offset 7, -4
 803              	.LCFI20:
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 806 0008 0B46     		mov	r3, r1
 807 000a FB70     		strb	r3, [r7, #3]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 808              		.loc 1 523 0
 809 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 810 000e 002B     		cmp	r3, #0
 811 0010 1ED0     		beq	.L46
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 812              		.loc 1 526 0
 813 0012 7B68     		ldr	r3, [r7, #4]
 814 0014 1B68     		ldr	r3, [r3, #0]
 815 0016 43F08002 		orr	r2, r3, #128
 816 001a 7B68     		ldr	r3, [r7, #4]
 817 001c 1A60     		str	r2, [r3, #0]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 818              		.loc 1 529 0
 819 001e 7B68     		ldr	r3, [r7, #4]
 820 0020 D3F88431 		ldr	r3, [r3, #388]
 821 0024 43F48072 		orr	r2, r3, #256
 822 0028 7B68     		ldr	r3, [r7, #4]
 823 002a C3F88421 		str	r2, [r3, #388]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 824              		.loc 1 530 0
 825 002e 7B68     		ldr	r3, [r7, #4]
 826 0030 D3F89431 		ldr	r3, [r3, #404]
 827 0034 43F48072 		orr	r2, r3, #256
 828 0038 7B68     		ldr	r3, [r7, #4]
 829 003a C3F89421 		str	r2, [r3, #404]
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 830              		.loc 1 531 0
 831 003e 7B68     		ldr	r3, [r7, #4]
 832 0040 D3F8A431 		ldr	r3, [r3, #420]
 833 0044 43F48072 		orr	r2, r3, #256
 834 0048 7B68     		ldr	r3, [r7, #4]
 835 004a C3F8A421 		str	r2, [r3, #420]
 836 004e 1DE0     		b	.L45
 837              	.L46:
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 838              		.loc 1 536 0
 839 0050 7B68     		ldr	r3, [r7, #4]
 840 0052 1B68     		ldr	r3, [r3, #0]
 841 0054 23F08002 		bic	r2, r3, #128
 842 0058 7B68     		ldr	r3, [r7, #4]
 843 005a 1A60     		str	r2, [r3, #0]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 844              		.loc 1 539 0
 845 005c 7B68     		ldr	r3, [r7, #4]
 846 005e D3F88431 		ldr	r3, [r3, #388]
 847 0062 23F48072 		bic	r2, r3, #256
 848 0066 7B68     		ldr	r3, [r7, #4]
 849 0068 C3F88421 		str	r2, [r3, #388]
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 850              		.loc 1 540 0
 851 006c 7B68     		ldr	r3, [r7, #4]
 852 006e D3F89431 		ldr	r3, [r3, #404]
 853 0072 23F48072 		bic	r2, r3, #256
 854 0076 7B68     		ldr	r3, [r7, #4]
 855 0078 C3F89421 		str	r2, [r3, #404]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 856              		.loc 1 541 0
 857 007c 7B68     		ldr	r3, [r7, #4]
 858 007e D3F8A431 		ldr	r3, [r3, #420]
 859 0082 23F48072 		bic	r2, r3, #256
 860 0086 7B68     		ldr	r3, [r7, #4]
 861 0088 C3F8A421 		str	r2, [r3, #420]
 862              	.L45:
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 863              		.loc 1 543 0
 864 008c 07F10C07 		add	r7, r7, #12
 865 0090 BD46     		mov	sp, r7
 866 0092 80BC     		pop	{r7}
 867 0094 7047     		bx	lr
 868              		.cfi_endproc
 869              	.LFE116:
 871 0096 00BF     		.section	.text.CAN_Transmit,"ax",%progbits
 872              		.align	2
 873              		.global	CAN_Transmit
 874              		.thumb
 875              		.thumb_func
 877              	CAN_Transmit:
 878              	.LFB117:
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 879              		.loc 1 573 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 16
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884 0000 80B4     		push	{r7}
 885              	.LCFI21:
 886              		.cfi_def_cfa_offset 4
 887 0002 85B0     		sub	sp, sp, #20
 888              	.LCFI22:
 889              		.cfi_def_cfa_offset 24
 890 0004 00AF     		add	r7, sp, #0
 891              		.cfi_offset 7, -4
 892              	.LCFI23:
 893              		.cfi_def_cfa_register 7
 894 0006 7860     		str	r0, [r7, #4]
 895 0008 3960     		str	r1, [r7, #0]
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 896              		.loc 1 574 0
 897 000a 4FF00003 		mov	r3, #0
 898 000e FB73     		strb	r3, [r7, #15]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 899              		.loc 1 582 0
 900 0010 7B68     		ldr	r3, [r7, #4]
 901 0012 9B68     		ldr	r3, [r3, #8]
 902 0014 03F08063 		and	r3, r3, #67108864
 903 0018 002B     		cmp	r3, #0
 904 001a 03D0     		beq	.L49
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 905              		.loc 1 584 0
 906 001c 4FF00003 		mov	r3, #0
 907 0020 FB73     		strb	r3, [r7, #15]
 908 0022 16E0     		b	.L50
 909              	.L49:
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 910              		.loc 1 586 0
 911 0024 7B68     		ldr	r3, [r7, #4]
 912 0026 9B68     		ldr	r3, [r3, #8]
 913 0028 03F00063 		and	r3, r3, #134217728
 914 002c 002B     		cmp	r3, #0
 915 002e 03D0     		beq	.L51
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 916              		.loc 1 588 0
 917 0030 4FF00103 		mov	r3, #1
 918 0034 FB73     		strb	r3, [r7, #15]
 919 0036 0CE0     		b	.L50
 920              	.L51:
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 921              		.loc 1 590 0
 922 0038 7B68     		ldr	r3, [r7, #4]
 923 003a 9B68     		ldr	r3, [r3, #8]
 924 003c 03F08053 		and	r3, r3, #268435456
 925 0040 002B     		cmp	r3, #0
 926 0042 03D0     		beq	.L52
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 927              		.loc 1 592 0
 928 0044 4FF00203 		mov	r3, #2
 929 0048 FB73     		strb	r3, [r7, #15]
 930 004a 02E0     		b	.L50
 931              	.L52:
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 932              		.loc 1 596 0
 933 004c 4FF00403 		mov	r3, #4
 934 0050 FB73     		strb	r3, [r7, #15]
 935              	.L50:
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 936              		.loc 1 599 0
 937 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 938 0054 042B     		cmp	r3, #4
 939 0056 00F0C180 		beq	.L53
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 940              		.loc 1 602 0
 941 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 942 005c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 943 005e 7968     		ldr	r1, [r7, #4]
 944 0060 02F11802 		add	r2, r2, #24
 945 0064 4FEA0212 		lsl	r2, r2, #4
 946 0068 8A18     		adds	r2, r1, r2
 947 006a 1268     		ldr	r2, [r2, #0]
 948 006c 02F00102 		and	r2, r2, #1
 949 0070 7968     		ldr	r1, [r7, #4]
 950 0072 03F11803 		add	r3, r3, #24
 951 0076 4FEA0313 		lsl	r3, r3, #4
 952 007a CB18     		adds	r3, r1, r3
 953 007c 1A60     		str	r2, [r3, #0]
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 954              		.loc 1 603 0
 955 007e 3B68     		ldr	r3, [r7, #0]
 956 0080 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 957 0082 002B     		cmp	r3, #0
 958 0084 1AD1     		bne	.L54
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 959              		.loc 1 606 0
 960 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 961 0088 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 962 008a 7968     		ldr	r1, [r7, #4]
 963 008c 02F11802 		add	r2, r2, #24
 964 0090 4FEA0212 		lsl	r2, r2, #4
 965 0094 8A18     		adds	r2, r1, r2
 966 0096 1168     		ldr	r1, [r2, #0]
 967 0098 3A68     		ldr	r2, [r7, #0]
 968 009a 1268     		ldr	r2, [r2, #0]
 969 009c 4FEA4250 		lsl	r0, r2, #21
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 970              		.loc 1 607 0
 971 00a0 3A68     		ldr	r2, [r7, #0]
 972 00a2 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 973              		.loc 1 606 0
 974 00a4 40EA0202 		orr	r2, r0, r2
 975 00a8 41EA0202 		orr	r2, r1, r2
 976 00ac 7968     		ldr	r1, [r7, #4]
 977 00ae 03F11803 		add	r3, r3, #24
 978 00b2 4FEA0313 		lsl	r3, r3, #4
 979 00b6 CB18     		adds	r3, r1, r3
 980 00b8 1A60     		str	r2, [r3, #0]
 981 00ba 1CE0     		b	.L55
 982              	.L54:
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 983              		.loc 1 612 0
 984 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 985 00be FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 986 00c0 7968     		ldr	r1, [r7, #4]
 987 00c2 02F11802 		add	r2, r2, #24
 988 00c6 4FEA0212 		lsl	r2, r2, #4
 989 00ca 8A18     		adds	r2, r1, r2
 990 00cc 1168     		ldr	r1, [r2, #0]
 991 00ce 3A68     		ldr	r2, [r7, #0]
 992 00d0 5268     		ldr	r2, [r2, #4]
 993 00d2 4FEAC200 		lsl	r0, r2, #3
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 994              		.loc 1 613 0
 995 00d6 3A68     		ldr	r2, [r7, #0]
 996 00d8 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 997              		.loc 1 612 0
 998 00da 1043     		orrs	r0, r0, r2
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 999              		.loc 1 614 0
 1000 00dc 3A68     		ldr	r2, [r7, #0]
 1001 00de 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1002              		.loc 1 613 0
 1003 00e0 40EA0202 		orr	r2, r0, r2
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1004              		.loc 1 612 0
 1005 00e4 41EA0202 		orr	r2, r1, r2
 1006 00e8 7968     		ldr	r1, [r7, #4]
 1007 00ea 03F11803 		add	r3, r3, #24
 1008 00ee 4FEA0313 		lsl	r3, r3, #4
 1009 00f2 CB18     		adds	r3, r1, r3
 1010 00f4 1A60     		str	r2, [r3, #0]
 1011              	.L55:
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 1012              		.loc 1 618 0
 1013 00f6 3B68     		ldr	r3, [r7, #0]
 1014 00f8 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1015 00fa 03F00F03 		and	r3, r3, #15
 1016 00fe DAB2     		uxtb	r2, r3
 1017 0100 3B68     		ldr	r3, [r7, #0]
 1018 0102 9A72     		strb	r2, [r3, #10]
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 1019              		.loc 1 619 0
 1020 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1021 0106 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1022 0108 7968     		ldr	r1, [r7, #4]
 1023 010a 02F11802 		add	r2, r2, #24
 1024 010e 4FEA0212 		lsl	r2, r2, #4
 1025 0112 8A18     		adds	r2, r1, r2
 1026 0114 5268     		ldr	r2, [r2, #4]
 1027 0116 22F00F02 		bic	r2, r2, #15
 1028 011a 7968     		ldr	r1, [r7, #4]
 1029 011c 03F11803 		add	r3, r3, #24
 1030 0120 4FEA0313 		lsl	r3, r3, #4
 1031 0124 CB18     		adds	r3, r1, r3
 1032 0126 5A60     		str	r2, [r3, #4]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 1033              		.loc 1 620 0
 1034 0128 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1035 012a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1036 012c 7968     		ldr	r1, [r7, #4]
 1037 012e 02F11802 		add	r2, r2, #24
 1038 0132 4FEA0212 		lsl	r2, r2, #4
 1039 0136 8A18     		adds	r2, r1, r2
 1040 0138 5168     		ldr	r1, [r2, #4]
 1041 013a 3A68     		ldr	r2, [r7, #0]
 1042 013c 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 1043 013e 41EA0202 		orr	r2, r1, r2
 1044 0142 7968     		ldr	r1, [r7, #4]
 1045 0144 03F11803 		add	r3, r3, #24
 1046 0148 4FEA0313 		lsl	r3, r3, #4
 1047 014c CB18     		adds	r3, r1, r3
 1048 014e 5A60     		str	r2, [r3, #4]
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1049              		.loc 1 623 0
 1050 0150 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1051 0152 3A68     		ldr	r2, [r7, #0]
 1052 0154 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 1053 0156 4FEA0261 		lsl	r1, r2, #24
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1054              		.loc 1 624 0
 1055 015a 3A68     		ldr	r2, [r7, #0]
 1056 015c 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1057 015e 4FEA0242 		lsl	r2, r2, #16
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1058              		.loc 1 623 0
 1059 0162 1143     		orrs	r1, r1, r2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1060              		.loc 1 625 0
 1061 0164 3A68     		ldr	r2, [r7, #0]
 1062 0166 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 1063 0168 4FEA0222 		lsl	r2, r2, #8
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1064              		.loc 1 624 0
 1065 016c 1143     		orrs	r1, r1, r2
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 1066              		.loc 1 626 0
 1067 016e 3A68     		ldr	r2, [r7, #0]
 1068 0170 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1069              		.loc 1 625 0
 1070 0172 41EA0202 		orr	r2, r1, r2
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1071              		.loc 1 623 0
 1072 0176 7968     		ldr	r1, [r7, #4]
 1073 0178 4FEA0313 		lsl	r3, r3, #4
 1074 017c CB18     		adds	r3, r1, r3
 1075 017e 03F5C473 		add	r3, r3, #392
 1076 0182 1A60     		str	r2, [r3, #0]
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1077              		.loc 1 627 0
 1078 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1079 0186 3A68     		ldr	r2, [r7, #0]
 1080 0188 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 1081 018a 4FEA0261 		lsl	r1, r2, #24
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1082              		.loc 1 628 0
 1083 018e 3A68     		ldr	r2, [r7, #0]
 1084 0190 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 1085 0192 4FEA0242 		lsl	r2, r2, #16
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1086              		.loc 1 627 0
 1087 0196 1143     		orrs	r1, r1, r2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1088              		.loc 1 629 0
 1089 0198 3A68     		ldr	r2, [r7, #0]
 1090 019a 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1091 019c 4FEA0222 		lsl	r2, r2, #8
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1092              		.loc 1 628 0
 1093 01a0 1143     		orrs	r1, r1, r2
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 1094              		.loc 1 630 0
 1095 01a2 3A68     		ldr	r2, [r7, #0]
 1096 01a4 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1097              		.loc 1 629 0
 1098 01a6 41EA0202 		orr	r2, r1, r2
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1099              		.loc 1 627 0
 1100 01aa 7968     		ldr	r1, [r7, #4]
 1101 01ac 4FEA0313 		lsl	r3, r3, #4
 1102 01b0 CB18     		adds	r3, r1, r3
 1103 01b2 03F5C473 		add	r3, r3, #392
 1104 01b6 5A60     		str	r2, [r3, #4]
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 1105              		.loc 1 632 0
 1106 01b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1107 01ba FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1108 01bc 7968     		ldr	r1, [r7, #4]
 1109 01be 02F11802 		add	r2, r2, #24
 1110 01c2 4FEA0212 		lsl	r2, r2, #4
 1111 01c6 8A18     		adds	r2, r1, r2
 1112 01c8 1268     		ldr	r2, [r2, #0]
 1113 01ca 42F00102 		orr	r2, r2, #1
 1114 01ce 7968     		ldr	r1, [r7, #4]
 1115 01d0 03F11803 		add	r3, r3, #24
 1116 01d4 4FEA0313 		lsl	r3, r3, #4
 1117 01d8 CB18     		adds	r3, r1, r3
 1118 01da 1A60     		str	r2, [r3, #0]
 1119              	.L53:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 1120              		.loc 1 634 0
 1121 01dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1122              		.loc 1 635 0
 1123 01de 1846     		mov	r0, r3
 1124 01e0 07F11407 		add	r7, r7, #20
 1125 01e4 BD46     		mov	sp, r7
 1126 01e6 80BC     		pop	{r7}
 1127 01e8 7047     		bx	lr
 1128              		.cfi_endproc
 1129              	.LFE117:
 1131 01ea 00BF     		.section	.text.CAN_TransmitStatus,"ax",%progbits
 1132              		.align	2
 1133              		.global	CAN_TransmitStatus
 1134              		.thumb
 1135              		.thumb_func
 1137              	CAN_TransmitStatus:
 1138              	.LFB118:
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1139              		.loc 1 645 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 16
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 1144 0000 80B4     		push	{r7}
 1145              	.LCFI24:
 1146              		.cfi_def_cfa_offset 4
 1147 0002 85B0     		sub	sp, sp, #20
 1148              	.LCFI25:
 1149              		.cfi_def_cfa_offset 24
 1150 0004 00AF     		add	r7, sp, #0
 1151              		.cfi_offset 7, -4
 1152              	.LCFI26:
 1153              		.cfi_def_cfa_register 7
 1154 0006 7860     		str	r0, [r7, #4]
 1155 0008 0B46     		mov	r3, r1
 1156 000a FB70     		strb	r3, [r7, #3]
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 1157              		.loc 1 646 0
 1158 000c 4FF00003 		mov	r3, #0
 1159 0010 FB60     		str	r3, [r7, #12]
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 1160              		.loc 1 652 0
 1161 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1162 0014 012B     		cmp	r3, #1
 1163 0016 0AD0     		beq	.L59
 1164 0018 022B     		cmp	r3, #2
 1165 001a 0FD0     		beq	.L60
 1166 001c 002B     		cmp	r3, #0
 1167 001e 14D1     		bne	.L72
 1168              	.L58:
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 1169              		.loc 1 655 0
 1170 0020 7B68     		ldr	r3, [r7, #4]
 1171 0022 9A68     		ldr	r2, [r3, #8]
 1172 0024 2C4B     		ldr	r3, .L73
 1173 0026 02EA0303 		and	r3, r2, r3
 1174 002a FB60     		str	r3, [r7, #12]
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1175              		.loc 1 656 0
 1176 002c 11E0     		b	.L61
 1177              	.L59:
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 1178              		.loc 1 658 0
 1179 002e 7B68     		ldr	r3, [r7, #4]
 1180 0030 9A68     		ldr	r2, [r3, #8]
 1181 0032 2A4B     		ldr	r3, .L73+4
 1182 0034 02EA0303 		and	r3, r2, r3
 1183 0038 FB60     		str	r3, [r7, #12]
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1184              		.loc 1 659 0
 1185 003a 0AE0     		b	.L61
 1186              	.L60:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 1187              		.loc 1 661 0
 1188 003c 7B68     		ldr	r3, [r7, #4]
 1189 003e 9A68     		ldr	r2, [r3, #8]
 1190 0040 274B     		ldr	r3, .L73+8
 1191 0042 02EA0303 		and	r3, r2, r3
 1192 0046 FB60     		str	r3, [r7, #12]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1193              		.loc 1 662 0
 1194 0048 03E0     		b	.L61
 1195              	.L72:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 1196              		.loc 1 664 0
 1197 004a 4FF00003 		mov	r3, #0
 1198 004e FB60     		str	r3, [r7, #12]
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1199              		.loc 1 665 0
 1200 0050 00BF     		nop
 1201              	.L61:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 1202              		.loc 1 667 0
 1203 0052 FB68     		ldr	r3, [r7, #12]
 1204 0054 234A     		ldr	r2, .L73+12
 1205 0056 9342     		cmp	r3, r2
 1206 0058 1DD0     		beq	.L66
 1207 005a 224A     		ldr	r2, .L73+12
 1208 005c 9342     		cmp	r3, r2
 1209 005e 08D8     		bhi	.L70
 1210 0060 214A     		ldr	r2, .L73+16
 1211 0062 9342     		cmp	r3, r2
 1212 0064 13D0     		beq	.L64
 1213 0066 1C4A     		ldr	r2, .L73
 1214 0068 9342     		cmp	r3, r2
 1215 006a 1CD0     		beq	.L65
 1216 006c 002B     		cmp	r3, #0
 1217 006e 0AD0     		beq	.L63
 1218 0070 25E0     		b	.L62
 1219              	.L70:
 1220 0072 1E4A     		ldr	r2, .L73+20
 1221 0074 9342     		cmp	r3, r2
 1222 0076 12D0     		beq	.L68
 1223 0078 194A     		ldr	r2, .L73+8
 1224 007a 9342     		cmp	r3, r2
 1225 007c 1BD0     		beq	.L69
 1226 007e 174A     		ldr	r2, .L73+4
 1227 0080 9342     		cmp	r3, r2
 1228 0082 14D0     		beq	.L67
 1229 0084 1BE0     		b	.L62
 1230              	.L63:
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 1231              		.loc 1 670 0
 1232 0086 4FF00203 		mov	r3, #2
 1233 008a FB60     		str	r3, [r7, #12]
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1234              		.loc 1 671 0
 1235 008c 1BE0     		b	.L71
 1236              	.L64:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 1237              		.loc 1 673 0
 1238 008e 4FF00003 		mov	r3, #0
 1239 0092 FB60     		str	r3, [r7, #12]
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1240              		.loc 1 674 0
 1241 0094 17E0     		b	.L71
 1242              	.L66:
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 1243              		.loc 1 675 0
 1244 0096 4FF00003 		mov	r3, #0
 1245 009a FB60     		str	r3, [r7, #12]
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1246              		.loc 1 676 0
 1247 009c 13E0     		b	.L71
 1248              	.L68:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 1249              		.loc 1 677 0
 1250 009e 4FF00003 		mov	r3, #0
 1251 00a2 FB60     		str	r3, [r7, #12]
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1252              		.loc 1 678 0
 1253 00a4 0FE0     		b	.L71
 1254              	.L65:
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 1255              		.loc 1 680 0
 1256 00a6 4FF00103 		mov	r3, #1
 1257 00aa FB60     		str	r3, [r7, #12]
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1258              		.loc 1 681 0
 1259 00ac 0BE0     		b	.L71
 1260              	.L67:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 1261              		.loc 1 682 0
 1262 00ae 4FF00103 		mov	r3, #1
 1263 00b2 FB60     		str	r3, [r7, #12]
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1264              		.loc 1 683 0
 1265 00b4 07E0     		b	.L71
 1266              	.L69:
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 1267              		.loc 1 684 0
 1268 00b6 4FF00103 		mov	r3, #1
 1269 00ba FB60     		str	r3, [r7, #12]
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1270              		.loc 1 685 0
 1271 00bc 03E0     		b	.L71
 1272              	.L62:
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 1273              		.loc 1 686 0
 1274 00be 4FF00003 		mov	r3, #0
 1275 00c2 FB60     		str	r3, [r7, #12]
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1276              		.loc 1 687 0
 1277 00c4 00BF     		nop
 1278              	.L71:
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 1279              		.loc 1 689 0
 1280 00c6 FB68     		ldr	r3, [r7, #12]
 1281 00c8 DBB2     		uxtb	r3, r3
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1282              		.loc 1 690 0
 1283 00ca 1846     		mov	r0, r3
 1284 00cc 07F11407 		add	r7, r7, #20
 1285 00d0 BD46     		mov	sp, r7
 1286 00d2 80BC     		pop	{r7}
 1287 00d4 7047     		bx	lr
 1288              	.L74:
 1289 00d6 00BF     		.align	2
 1290              	.L73:
 1291 00d8 03000004 		.word	67108867
 1292 00dc 00030008 		.word	134218496
 1293 00e0 00000310 		.word	268632064
 1294 00e4 00010008 		.word	134217984
 1295 00e8 01000004 		.word	67108865
 1296 00ec 00000110 		.word	268500992
 1297              		.cfi_endproc
 1298              	.LFE118:
 1300              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 1301              		.align	2
 1302              		.global	CAN_CancelTransmit
 1303              		.thumb
 1304              		.thumb_func
 1306              	CAN_CancelTransmit:
 1307              	.LFB119:
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1308              		.loc 1 699 0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 8
 1311              		@ frame_needed = 1, uses_anonymous_args = 0
 1312              		@ link register save eliminated.
 1313 0000 80B4     		push	{r7}
 1314              	.LCFI27:
 1315              		.cfi_def_cfa_offset 4
 1316 0002 83B0     		sub	sp, sp, #12
 1317              	.LCFI28:
 1318              		.cfi_def_cfa_offset 16
 1319 0004 00AF     		add	r7, sp, #0
 1320              		.cfi_offset 7, -4
 1321              	.LCFI29:
 1322              		.cfi_def_cfa_register 7
 1323 0006 7860     		str	r0, [r7, #4]
 1324 0008 0B46     		mov	r3, r1
 1325 000a FB70     		strb	r3, [r7, #3]
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 1326              		.loc 1 704 0
 1327 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1328 000e 012B     		cmp	r3, #1
 1329 0010 0AD0     		beq	.L78
 1330 0012 022B     		cmp	r3, #2
 1331 0014 0FD0     		beq	.L79
 1332 0016 002B     		cmp	r3, #0
 1333 0018 15D1     		bne	.L81
 1334              	.L77:
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 1335              		.loc 1 706 0
 1336 001a 7B68     		ldr	r3, [r7, #4]
 1337 001c 9B68     		ldr	r3, [r3, #8]
 1338 001e 43F08002 		orr	r2, r3, #128
 1339 0022 7B68     		ldr	r3, [r7, #4]
 1340 0024 9A60     		str	r2, [r3, #8]
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1341              		.loc 1 707 0
 1342 0026 0FE0     		b	.L75
 1343              	.L78:
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 1344              		.loc 1 708 0
 1345 0028 7B68     		ldr	r3, [r7, #4]
 1346 002a 9B68     		ldr	r3, [r3, #8]
 1347 002c 43F40042 		orr	r2, r3, #32768
 1348 0030 7B68     		ldr	r3, [r7, #4]
 1349 0032 9A60     		str	r2, [r3, #8]
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1350              		.loc 1 709 0
 1351 0034 08E0     		b	.L75
 1352              	.L79:
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 1353              		.loc 1 710 0
 1354 0036 7B68     		ldr	r3, [r7, #4]
 1355 0038 9B68     		ldr	r3, [r3, #8]
 1356 003a 43F40002 		orr	r2, r3, #8388608
 1357 003e 7B68     		ldr	r3, [r7, #4]
 1358 0040 9A60     		str	r2, [r3, #8]
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1359              		.loc 1 711 0
 1360 0042 00BF     		nop
 1361 0044 00E0     		b	.L75
 1362              	.L81:
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1363              		.loc 1 713 0
 1364 0046 00BF     		nop
 1365              	.L75:
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1366              		.loc 1 715 0
 1367 0048 07F10C07 		add	r7, r7, #12
 1368 004c BD46     		mov	sp, r7
 1369 004e 80BC     		pop	{r7}
 1370 0050 7047     		bx	lr
 1371              		.cfi_endproc
 1372              	.LFE119:
 1374 0052 00BF     		.section	.text.CAN_Receive,"ax",%progbits
 1375              		.align	2
 1376              		.global	CAN_Receive
 1377              		.thumb
 1378              		.thumb_func
 1380              	CAN_Receive:
 1381              	.LFB120:
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1382              		.loc 1 746 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 16
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387 0000 80B4     		push	{r7}
 1388              	.LCFI30:
 1389              		.cfi_def_cfa_offset 4
 1390 0002 85B0     		sub	sp, sp, #20
 1391              	.LCFI31:
 1392              		.cfi_def_cfa_offset 24
 1393 0004 00AF     		add	r7, sp, #0
 1394              		.cfi_offset 7, -4
 1395              	.LCFI32:
 1396              		.cfi_def_cfa_register 7
 1397 0006 F860     		str	r0, [r7, #12]
 1398 0008 0B46     		mov	r3, r1
 1399 000a 7A60     		str	r2, [r7, #4]
 1400 000c FB72     		strb	r3, [r7, #11]
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1401              		.loc 1 751 0
 1402 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1403 0010 FA68     		ldr	r2, [r7, #12]
 1404 0012 03F11B03 		add	r3, r3, #27
 1405 0016 4FEA0313 		lsl	r3, r3, #4
 1406 001a D318     		adds	r3, r2, r3
 1407 001c 1B68     		ldr	r3, [r3, #0]
 1408 001e DBB2     		uxtb	r3, r3
 1409 0020 03F00403 		and	r3, r3, #4
 1410 0024 DAB2     		uxtb	r2, r3
 1411 0026 7B68     		ldr	r3, [r7, #4]
 1412 0028 1A72     		strb	r2, [r3, #8]
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1413              		.loc 1 752 0
 1414 002a 7B68     		ldr	r3, [r7, #4]
 1415 002c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1416 002e 002B     		cmp	r3, #0
 1417 0030 0CD1     		bne	.L83
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 1418              		.loc 1 754 0
 1419 0032 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1420 0034 FA68     		ldr	r2, [r7, #12]
 1421 0036 03F11B03 		add	r3, r3, #27
 1422 003a 4FEA0313 		lsl	r3, r3, #4
 1423 003e D318     		adds	r3, r2, r3
 1424 0040 1B68     		ldr	r3, [r3, #0]
 1425 0042 4FEA5352 		lsr	r2, r3, #21
 1426 0046 7B68     		ldr	r3, [r7, #4]
 1427 0048 1A60     		str	r2, [r3, #0]
 1428 004a 0BE0     		b	.L84
 1429              	.L83:
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1430              		.loc 1 758 0
 1431 004c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1432 004e FA68     		ldr	r2, [r7, #12]
 1433 0050 03F11B03 		add	r3, r3, #27
 1434 0054 4FEA0313 		lsl	r3, r3, #4
 1435 0058 D318     		adds	r3, r2, r3
 1436 005a 1B68     		ldr	r3, [r3, #0]
 1437 005c 4FEAD302 		lsr	r2, r3, #3
 1438 0060 7B68     		ldr	r3, [r7, #4]
 1439 0062 5A60     		str	r2, [r3, #4]
 1440              	.L84:
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1441              		.loc 1 761 0
 1442 0064 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1443 0066 FA68     		ldr	r2, [r7, #12]
 1444 0068 03F11B03 		add	r3, r3, #27
 1445 006c 4FEA0313 		lsl	r3, r3, #4
 1446 0070 D318     		adds	r3, r2, r3
 1447 0072 1B68     		ldr	r3, [r3, #0]
 1448 0074 DBB2     		uxtb	r3, r3
 1449 0076 03F00203 		and	r3, r3, #2
 1450 007a DAB2     		uxtb	r2, r3
 1451 007c 7B68     		ldr	r3, [r7, #4]
 1452 007e 5A72     		strb	r2, [r3, #9]
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 1453              		.loc 1 763 0
 1454 0080 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1455 0082 FA68     		ldr	r2, [r7, #12]
 1456 0084 03F11B03 		add	r3, r3, #27
 1457 0088 4FEA0313 		lsl	r3, r3, #4
 1458 008c D318     		adds	r3, r2, r3
 1459 008e 5B68     		ldr	r3, [r3, #4]
 1460 0090 DBB2     		uxtb	r3, r3
 1461 0092 03F00F03 		and	r3, r3, #15
 1462 0096 DAB2     		uxtb	r2, r3
 1463 0098 7B68     		ldr	r3, [r7, #4]
 1464 009a 9A72     		strb	r2, [r3, #10]
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 1465              		.loc 1 765 0
 1466 009c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1467 009e FA68     		ldr	r2, [r7, #12]
 1468 00a0 03F11B03 		add	r3, r3, #27
 1469 00a4 4FEA0313 		lsl	r3, r3, #4
 1470 00a8 D318     		adds	r3, r2, r3
 1471 00aa 5B68     		ldr	r3, [r3, #4]
 1472 00ac 4FEA1323 		lsr	r3, r3, #8
 1473 00b0 DAB2     		uxtb	r2, r3
 1474 00b2 7B68     		ldr	r3, [r7, #4]
 1475 00b4 DA74     		strb	r2, [r3, #19]
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1476              		.loc 1 767 0
 1477 00b6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1478 00b8 FA68     		ldr	r2, [r7, #12]
 1479 00ba 4FEA0313 		lsl	r3, r3, #4
 1480 00be D318     		adds	r3, r2, r3
 1481 00c0 03F5DC73 		add	r3, r3, #440
 1482 00c4 1B68     		ldr	r3, [r3, #0]
 1483 00c6 DAB2     		uxtb	r2, r3
 1484 00c8 7B68     		ldr	r3, [r7, #4]
 1485 00ca DA72     		strb	r2, [r3, #11]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1486              		.loc 1 768 0
 1487 00cc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1488 00ce FA68     		ldr	r2, [r7, #12]
 1489 00d0 4FEA0313 		lsl	r3, r3, #4
 1490 00d4 D318     		adds	r3, r2, r3
 1491 00d6 03F5DC73 		add	r3, r3, #440
 1492 00da 1B68     		ldr	r3, [r3, #0]
 1493 00dc 4FEA1323 		lsr	r3, r3, #8
 1494 00e0 DAB2     		uxtb	r2, r3
 1495 00e2 7B68     		ldr	r3, [r7, #4]
 1496 00e4 1A73     		strb	r2, [r3, #12]
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1497              		.loc 1 769 0
 1498 00e6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1499 00e8 FA68     		ldr	r2, [r7, #12]
 1500 00ea 4FEA0313 		lsl	r3, r3, #4
 1501 00ee D318     		adds	r3, r2, r3
 1502 00f0 03F5DC73 		add	r3, r3, #440
 1503 00f4 1B68     		ldr	r3, [r3, #0]
 1504 00f6 4FEA1343 		lsr	r3, r3, #16
 1505 00fa DAB2     		uxtb	r2, r3
 1506 00fc 7B68     		ldr	r3, [r7, #4]
 1507 00fe 5A73     		strb	r2, [r3, #13]
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1508              		.loc 1 770 0
 1509 0100 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1510 0102 FA68     		ldr	r2, [r7, #12]
 1511 0104 4FEA0313 		lsl	r3, r3, #4
 1512 0108 D318     		adds	r3, r2, r3
 1513 010a 03F5DC73 		add	r3, r3, #440
 1514 010e 1B68     		ldr	r3, [r3, #0]
 1515 0110 4FEA1363 		lsr	r3, r3, #24
 1516 0114 DAB2     		uxtb	r2, r3
 1517 0116 7B68     		ldr	r3, [r7, #4]
 1518 0118 9A73     		strb	r2, [r3, #14]
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1519              		.loc 1 771 0
 1520 011a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1521 011c FA68     		ldr	r2, [r7, #12]
 1522 011e 4FEA0313 		lsl	r3, r3, #4
 1523 0122 D318     		adds	r3, r2, r3
 1524 0124 03F5DC73 		add	r3, r3, #440
 1525 0128 5B68     		ldr	r3, [r3, #4]
 1526 012a DAB2     		uxtb	r2, r3
 1527 012c 7B68     		ldr	r3, [r7, #4]
 1528 012e DA73     		strb	r2, [r3, #15]
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1529              		.loc 1 772 0
 1530 0130 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1531 0132 FA68     		ldr	r2, [r7, #12]
 1532 0134 4FEA0313 		lsl	r3, r3, #4
 1533 0138 D318     		adds	r3, r2, r3
 1534 013a 03F5DC73 		add	r3, r3, #440
 1535 013e 5B68     		ldr	r3, [r3, #4]
 1536 0140 4FEA1323 		lsr	r3, r3, #8
 1537 0144 DAB2     		uxtb	r2, r3
 1538 0146 7B68     		ldr	r3, [r7, #4]
 1539 0148 1A74     		strb	r2, [r3, #16]
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1540              		.loc 1 773 0
 1541 014a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1542 014c FA68     		ldr	r2, [r7, #12]
 1543 014e 4FEA0313 		lsl	r3, r3, #4
 1544 0152 D318     		adds	r3, r2, r3
 1545 0154 03F5DC73 		add	r3, r3, #440
 1546 0158 5B68     		ldr	r3, [r3, #4]
 1547 015a 4FEA1343 		lsr	r3, r3, #16
 1548 015e DAB2     		uxtb	r2, r3
 1549 0160 7B68     		ldr	r3, [r7, #4]
 1550 0162 5A74     		strb	r2, [r3, #17]
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1551              		.loc 1 774 0
 1552 0164 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1553 0166 FA68     		ldr	r2, [r7, #12]
 1554 0168 4FEA0313 		lsl	r3, r3, #4
 1555 016c D318     		adds	r3, r2, r3
 1556 016e 03F5DC73 		add	r3, r3, #440
 1557 0172 5B68     		ldr	r3, [r3, #4]
 1558 0174 4FEA1363 		lsr	r3, r3, #24
 1559 0178 DAB2     		uxtb	r2, r3
 1560 017a 7B68     		ldr	r3, [r7, #4]
 1561 017c 9A74     		strb	r2, [r3, #18]
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1562              		.loc 1 777 0
 1563 017e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1564 0180 002B     		cmp	r3, #0
 1565 0182 06D1     		bne	.L85
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1566              		.loc 1 779 0
 1567 0184 FB68     		ldr	r3, [r7, #12]
 1568 0186 DB68     		ldr	r3, [r3, #12]
 1569 0188 43F02002 		orr	r2, r3, #32
 1570 018c FB68     		ldr	r3, [r7, #12]
 1571 018e DA60     		str	r2, [r3, #12]
 1572 0190 05E0     		b	.L82
 1573              	.L85:
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1574              		.loc 1 784 0
 1575 0192 FB68     		ldr	r3, [r7, #12]
 1576 0194 1B69     		ldr	r3, [r3, #16]
 1577 0196 43F02002 		orr	r2, r3, #32
 1578 019a FB68     		ldr	r3, [r7, #12]
 1579 019c 1A61     		str	r2, [r3, #16]
 1580              	.L82:
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1581              		.loc 1 786 0
 1582 019e 07F11407 		add	r7, r7, #20
 1583 01a2 BD46     		mov	sp, r7
 1584 01a4 80BC     		pop	{r7}
 1585 01a6 7047     		bx	lr
 1586              		.cfi_endproc
 1587              	.LFE120:
 1589              		.section	.text.CAN_FIFORelease,"ax",%progbits
 1590              		.align	2
 1591              		.global	CAN_FIFORelease
 1592              		.thumb
 1593              		.thumb_func
 1595              	CAN_FIFORelease:
 1596              	.LFB121:
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1597              		.loc 1 795 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 8
 1600              		@ frame_needed = 1, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602 0000 80B4     		push	{r7}
 1603              	.LCFI33:
 1604              		.cfi_def_cfa_offset 4
 1605 0002 83B0     		sub	sp, sp, #12
 1606              	.LCFI34:
 1607              		.cfi_def_cfa_offset 16
 1608 0004 00AF     		add	r7, sp, #0
 1609              		.cfi_offset 7, -4
 1610              	.LCFI35:
 1611              		.cfi_def_cfa_register 7
 1612 0006 7860     		str	r0, [r7, #4]
 1613 0008 0B46     		mov	r3, r1
 1614 000a FB70     		strb	r3, [r7, #3]
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1615              		.loc 1 800 0
 1616 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1617 000e 002B     		cmp	r3, #0
 1618 0010 06D1     		bne	.L88
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1619              		.loc 1 802 0
 1620 0012 7B68     		ldr	r3, [r7, #4]
 1621 0014 DB68     		ldr	r3, [r3, #12]
 1622 0016 43F02002 		orr	r2, r3, #32
 1623 001a 7B68     		ldr	r3, [r7, #4]
 1624 001c DA60     		str	r2, [r3, #12]
 1625 001e 05E0     		b	.L87
 1626              	.L88:
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1627              		.loc 1 807 0
 1628 0020 7B68     		ldr	r3, [r7, #4]
 1629 0022 1B69     		ldr	r3, [r3, #16]
 1630 0024 43F02002 		orr	r2, r3, #32
 1631 0028 7B68     		ldr	r3, [r7, #4]
 1632 002a 1A61     		str	r2, [r3, #16]
 1633              	.L87:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1634              		.loc 1 809 0
 1635 002c 07F10C07 		add	r7, r7, #12
 1636 0030 BD46     		mov	sp, r7
 1637 0032 80BC     		pop	{r7}
 1638 0034 7047     		bx	lr
 1639              		.cfi_endproc
 1640              	.LFE121:
 1642 0036 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1643              		.align	2
 1644              		.global	CAN_MessagePending
 1645              		.thumb
 1646              		.thumb_func
 1648              	CAN_MessagePending:
 1649              	.LFB122:
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1650              		.loc 1 818 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 16
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
 1655 0000 80B4     		push	{r7}
 1656              	.LCFI36:
 1657              		.cfi_def_cfa_offset 4
 1658 0002 85B0     		sub	sp, sp, #20
 1659              	.LCFI37:
 1660              		.cfi_def_cfa_offset 24
 1661 0004 00AF     		add	r7, sp, #0
 1662              		.cfi_offset 7, -4
 1663              	.LCFI38:
 1664              		.cfi_def_cfa_register 7
 1665 0006 7860     		str	r0, [r7, #4]
 1666 0008 0B46     		mov	r3, r1
 1667 000a FB70     		strb	r3, [r7, #3]
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1668              		.loc 1 819 0
 1669 000c 4FF00003 		mov	r3, #0
 1670 0010 FB73     		strb	r3, [r7, #15]
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1671              		.loc 1 823 0
 1672 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1673 0014 002B     		cmp	r3, #0
 1674 0016 06D1     		bne	.L91
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1675              		.loc 1 825 0
 1676 0018 7B68     		ldr	r3, [r7, #4]
 1677 001a DB68     		ldr	r3, [r3, #12]
 1678 001c DBB2     		uxtb	r3, r3
 1679 001e 03F00303 		and	r3, r3, #3
 1680 0022 FB73     		strb	r3, [r7, #15]
 1681 0024 0CE0     		b	.L92
 1682              	.L91:
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1683              		.loc 1 827 0
 1684 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1685 0028 012B     		cmp	r3, #1
 1686 002a 06D1     		bne	.L93
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1687              		.loc 1 829 0
 1688 002c 7B68     		ldr	r3, [r7, #4]
 1689 002e 1B69     		ldr	r3, [r3, #16]
 1690 0030 DBB2     		uxtb	r3, r3
 1691 0032 03F00303 		and	r3, r3, #3
 1692 0036 FB73     		strb	r3, [r7, #15]
 1693 0038 02E0     		b	.L92
 1694              	.L93:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1695              		.loc 1 833 0
 1696 003a 4FF00003 		mov	r3, #0
 1697 003e FB73     		strb	r3, [r7, #15]
 1698              	.L92:
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 1699              		.loc 1 835 0
 1700 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1701              		.loc 1 836 0
 1702 0042 1846     		mov	r0, r3
 1703 0044 07F11407 		add	r7, r7, #20
 1704 0048 BD46     		mov	sp, r7
 1705 004a 80BC     		pop	{r7}
 1706 004c 7047     		bx	lr
 1707              		.cfi_endproc
 1708              	.LFE122:
 1710 004e 00BF     		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1711              		.align	2
 1712              		.global	CAN_OperatingModeRequest
 1713              		.thumb
 1714              		.thumb_func
 1716              	CAN_OperatingModeRequest:
 1717              	.LFB123:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1718              		.loc 1 868 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 16
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723 0000 80B4     		push	{r7}
 1724              	.LCFI39:
 1725              		.cfi_def_cfa_offset 4
 1726 0002 85B0     		sub	sp, sp, #20
 1727              	.LCFI40:
 1728              		.cfi_def_cfa_offset 24
 1729 0004 00AF     		add	r7, sp, #0
 1730              		.cfi_offset 7, -4
 1731              	.LCFI41:
 1732              		.cfi_def_cfa_register 7
 1733 0006 7860     		str	r0, [r7, #4]
 1734 0008 0B46     		mov	r3, r1
 1735 000a FB70     		strb	r3, [r7, #3]
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1736              		.loc 1 869 0
 1737 000c 4FF00003 		mov	r3, #0
 1738 0010 FB73     		strb	r3, [r7, #15]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 1739              		.loc 1 872 0
 1740 0012 4FF6FF73 		movw	r3, #65535
 1741 0016 BB60     		str	r3, [r7, #8]
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1742              		.loc 1 878 0
 1743 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1744 001a 002B     		cmp	r3, #0
 1745 001c 23D1     		bne	.L95
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1746              		.loc 1 881 0
 1747 001e 7B68     		ldr	r3, [r7, #4]
 1748 0020 1B68     		ldr	r3, [r3, #0]
 1749 0022 23F00303 		bic	r3, r3, #3
 1750 0026 43F00102 		orr	r2, r3, #1
 1751 002a 7B68     		ldr	r3, [r7, #4]
 1752 002c 1A60     		str	r2, [r3, #0]
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1753              		.loc 1 884 0
 1754 002e 03E0     		b	.L96
 1755              	.L98:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1756              		.loc 1 886 0
 1757 0030 BB68     		ldr	r3, [r7, #8]
 1758 0032 03F1FF33 		add	r3, r3, #-1
 1759 0036 BB60     		str	r3, [r7, #8]
 1760              	.L96:
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1761              		.loc 1 884 0 discriminator 1
 1762 0038 7B68     		ldr	r3, [r7, #4]
 1763 003a 5B68     		ldr	r3, [r3, #4]
 1764 003c 03F00303 		and	r3, r3, #3
 1765 0040 012B     		cmp	r3, #1
 1766 0042 02D0     		beq	.L97
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1767              		.loc 1 884 0 is_stmt 0 discriminator 2
 1768 0044 BB68     		ldr	r3, [r7, #8]
 1769 0046 002B     		cmp	r3, #0
 1770 0048 F2D1     		bne	.L98
 1771              	.L97:
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1772              		.loc 1 888 0 is_stmt 1
 1773 004a 7B68     		ldr	r3, [r7, #4]
 1774 004c 5B68     		ldr	r3, [r3, #4]
 1775 004e 03F00303 		and	r3, r3, #3
 1776 0052 012B     		cmp	r3, #1
 1777 0054 03D0     		beq	.L99
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1778              		.loc 1 890 0
 1779 0056 4FF00003 		mov	r3, #0
 1780 005a FB73     		strb	r3, [r7, #15]
 1781 005c 52E0     		b	.L100
 1782              	.L99:
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1783              		.loc 1 894 0
 1784 005e 4FF00103 		mov	r3, #1
 1785 0062 FB73     		strb	r3, [r7, #15]
 1786 0064 4EE0     		b	.L100
 1787              	.L95:
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1788              		.loc 1 897 0
 1789 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1790 0068 012B     		cmp	r3, #1
 1791 006a 21D1     		bne	.L101
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1792              		.loc 1 900 0
 1793 006c 7B68     		ldr	r3, [r7, #4]
 1794 006e 1B68     		ldr	r3, [r3, #0]
 1795 0070 23F00302 		bic	r2, r3, #3
 1796 0074 7B68     		ldr	r3, [r7, #4]
 1797 0076 1A60     		str	r2, [r3, #0]
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1798              		.loc 1 903 0
 1799 0078 03E0     		b	.L102
 1800              	.L104:
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1801              		.loc 1 905 0
 1802 007a BB68     		ldr	r3, [r7, #8]
 1803 007c 03F1FF33 		add	r3, r3, #-1
 1804 0080 BB60     		str	r3, [r7, #8]
 1805              	.L102:
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1806              		.loc 1 903 0 discriminator 1
 1807 0082 7B68     		ldr	r3, [r7, #4]
 1808 0084 5B68     		ldr	r3, [r3, #4]
 1809 0086 03F00303 		and	r3, r3, #3
 1810 008a 002B     		cmp	r3, #0
 1811 008c 02D0     		beq	.L103
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1812              		.loc 1 903 0 is_stmt 0 discriminator 2
 1813 008e BB68     		ldr	r3, [r7, #8]
 1814 0090 002B     		cmp	r3, #0
 1815 0092 F2D1     		bne	.L104
 1816              	.L103:
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1817              		.loc 1 907 0 is_stmt 1
 1818 0094 7B68     		ldr	r3, [r7, #4]
 1819 0096 5B68     		ldr	r3, [r3, #4]
 1820 0098 03F00303 		and	r3, r3, #3
 1821 009c 002B     		cmp	r3, #0
 1822 009e 03D0     		beq	.L105
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1823              		.loc 1 909 0
 1824 00a0 4FF00003 		mov	r3, #0
 1825 00a4 FB73     		strb	r3, [r7, #15]
 1826 00a6 2DE0     		b	.L100
 1827              	.L105:
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1828              		.loc 1 913 0
 1829 00a8 4FF00103 		mov	r3, #1
 1830 00ac FB73     		strb	r3, [r7, #15]
 1831 00ae 29E0     		b	.L100
 1832              	.L101:
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1833              		.loc 1 916 0
 1834 00b0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1835 00b2 022B     		cmp	r3, #2
 1836 00b4 23D1     		bne	.L106
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1837              		.loc 1 919 0
 1838 00b6 7B68     		ldr	r3, [r7, #4]
 1839 00b8 1B68     		ldr	r3, [r3, #0]
 1840 00ba 23F00303 		bic	r3, r3, #3
 1841 00be 43F00202 		orr	r2, r3, #2
 1842 00c2 7B68     		ldr	r3, [r7, #4]
 1843 00c4 1A60     		str	r2, [r3, #0]
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1844              		.loc 1 922 0
 1845 00c6 03E0     		b	.L107
 1846              	.L109:
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1847              		.loc 1 924 0
 1848 00c8 BB68     		ldr	r3, [r7, #8]
 1849 00ca 03F1FF33 		add	r3, r3, #-1
 1850 00ce BB60     		str	r3, [r7, #8]
 1851              	.L107:
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1852              		.loc 1 922 0 discriminator 1
 1853 00d0 7B68     		ldr	r3, [r7, #4]
 1854 00d2 5B68     		ldr	r3, [r3, #4]
 1855 00d4 03F00303 		and	r3, r3, #3
 1856 00d8 022B     		cmp	r3, #2
 1857 00da 02D0     		beq	.L108
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1858              		.loc 1 922 0 is_stmt 0 discriminator 2
 1859 00dc BB68     		ldr	r3, [r7, #8]
 1860 00de 002B     		cmp	r3, #0
 1861 00e0 F2D1     		bne	.L109
 1862              	.L108:
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1863              		.loc 1 926 0 is_stmt 1
 1864 00e2 7B68     		ldr	r3, [r7, #4]
 1865 00e4 5B68     		ldr	r3, [r3, #4]
 1866 00e6 03F00303 		and	r3, r3, #3
 1867 00ea 022B     		cmp	r3, #2
 1868 00ec 03D0     		beq	.L110
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1869              		.loc 1 928 0
 1870 00ee 4FF00003 		mov	r3, #0
 1871 00f2 FB73     		strb	r3, [r7, #15]
 1872 00f4 06E0     		b	.L100
 1873              	.L110:
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1874              		.loc 1 932 0
 1875 00f6 4FF00103 		mov	r3, #1
 1876 00fa FB73     		strb	r3, [r7, #15]
 1877 00fc 02E0     		b	.L100
 1878              	.L106:
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1879              		.loc 1 937 0
 1880 00fe 4FF00003 		mov	r3, #0
 1881 0102 FB73     		strb	r3, [r7, #15]
 1882              	.L100:
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 1883              		.loc 1 940 0
 1884 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1885              		.loc 1 941 0
 1886 0106 1846     		mov	r0, r3
 1887 0108 07F11407 		add	r7, r7, #20
 1888 010c BD46     		mov	sp, r7
 1889 010e 80BC     		pop	{r7}
 1890 0110 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE123:
 1894 0112 00BF     		.section	.text.CAN_Sleep,"ax",%progbits
 1895              		.align	2
 1896              		.global	CAN_Sleep
 1897              		.thumb
 1898              		.thumb_func
 1900              	CAN_Sleep:
 1901              	.LFB124:
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1902              		.loc 1 949 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 16
 1905              		@ frame_needed = 1, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
 1907 0000 80B4     		push	{r7}
 1908              	.LCFI42:
 1909              		.cfi_def_cfa_offset 4
 1910 0002 85B0     		sub	sp, sp, #20
 1911              	.LCFI43:
 1912              		.cfi_def_cfa_offset 24
 1913 0004 00AF     		add	r7, sp, #0
 1914              		.cfi_offset 7, -4
 1915              	.LCFI44:
 1916              		.cfi_def_cfa_register 7
 1917 0006 7860     		str	r0, [r7, #4]
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1918              		.loc 1 950 0
 1919 0008 4FF00003 		mov	r3, #0
 1920 000c FB73     		strb	r3, [r7, #15]
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1921              		.loc 1 956 0
 1922 000e 7B68     		ldr	r3, [r7, #4]
 1923 0010 1B68     		ldr	r3, [r3, #0]
 1924 0012 23F00303 		bic	r3, r3, #3
 1925 0016 43F00202 		orr	r2, r3, #2
 1926 001a 7B68     		ldr	r3, [r7, #4]
 1927 001c 1A60     		str	r2, [r3, #0]
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1928              		.loc 1 959 0
 1929 001e 7B68     		ldr	r3, [r7, #4]
 1930 0020 5B68     		ldr	r3, [r3, #4]
 1931 0022 03F00303 		and	r3, r3, #3
 1932 0026 022B     		cmp	r3, #2
 1933 0028 02D1     		bne	.L112
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 1934              		.loc 1 962 0
 1935 002a 4FF00103 		mov	r3, #1
 1936 002e FB73     		strb	r3, [r7, #15]
 1937              	.L112:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 1938              		.loc 1 965 0
 1939 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1940              		.loc 1 966 0
 1941 0032 1846     		mov	r0, r3
 1942 0034 07F11407 		add	r7, r7, #20
 1943 0038 BD46     		mov	sp, r7
 1944 003a 80BC     		pop	{r7}
 1945 003c 7047     		bx	lr
 1946              		.cfi_endproc
 1947              	.LFE124:
 1949 003e 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 1950              		.align	2
 1951              		.global	CAN_WakeUp
 1952              		.thumb
 1953              		.thumb_func
 1955              	CAN_WakeUp:
 1956              	.LFB125:
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1957              		.loc 1 974 0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 16
 1960              		@ frame_needed = 1, uses_anonymous_args = 0
 1961              		@ link register save eliminated.
 1962 0000 80B4     		push	{r7}
 1963              	.LCFI45:
 1964              		.cfi_def_cfa_offset 4
 1965 0002 85B0     		sub	sp, sp, #20
 1966              	.LCFI46:
 1967              		.cfi_def_cfa_offset 24
 1968 0004 00AF     		add	r7, sp, #0
 1969              		.cfi_offset 7, -4
 1970              	.LCFI47:
 1971              		.cfi_def_cfa_register 7
 1972 0006 7860     		str	r0, [r7, #4]
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 1973              		.loc 1 975 0
 1974 0008 4FF6FF73 		movw	r3, #65535
 1975 000c FB60     		str	r3, [r7, #12]
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1976              		.loc 1 976 0
 1977 000e 4FF00003 		mov	r3, #0
 1978 0012 FB72     		strb	r3, [r7, #11]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 1979              		.loc 1 982 0
 1980 0014 7B68     		ldr	r3, [r7, #4]
 1981 0016 1B68     		ldr	r3, [r3, #0]
 1982 0018 23F00202 		bic	r2, r3, #2
 1983 001c 7B68     		ldr	r3, [r7, #4]
 1984 001e 1A60     		str	r2, [r3, #0]
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1985              		.loc 1 985 0
 1986 0020 03E0     		b	.L114
 1987              	.L116:
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 1988              		.loc 1 987 0
 1989 0022 FB68     		ldr	r3, [r7, #12]
 1990 0024 03F1FF33 		add	r3, r3, #-1
 1991 0028 FB60     		str	r3, [r7, #12]
 1992              	.L114:
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1993              		.loc 1 985 0 discriminator 1
 1994 002a 7B68     		ldr	r3, [r7, #4]
 1995 002c 5B68     		ldr	r3, [r3, #4]
 1996 002e 03F00203 		and	r3, r3, #2
 1997 0032 002B     		cmp	r3, #0
 1998 0034 02D0     		beq	.L115
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1999              		.loc 1 985 0 is_stmt 0 discriminator 2
 2000 0036 FB68     		ldr	r3, [r7, #12]
 2001 0038 002B     		cmp	r3, #0
 2002 003a F2D1     		bne	.L116
 2003              	.L115:
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 2004              		.loc 1 989 0 is_stmt 1
 2005 003c 7B68     		ldr	r3, [r7, #4]
 2006 003e 5B68     		ldr	r3, [r3, #4]
 2007 0040 03F00203 		and	r3, r3, #2
 2008 0044 002B     		cmp	r3, #0
 2009 0046 02D1     		bne	.L117
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 2010              		.loc 1 992 0
 2011 0048 4FF00103 		mov	r3, #1
 2012 004c FB72     		strb	r3, [r7, #11]
 2013              	.L117:
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 2014              		.loc 1 995 0
 2015 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2016              		.loc 1 996 0
 2017 0050 1846     		mov	r0, r3
 2018 0052 07F11407 		add	r7, r7, #20
 2019 0056 BD46     		mov	sp, r7
 2020 0058 80BC     		pop	{r7}
 2021 005a 7047     		bx	lr
 2022              		.cfi_endproc
 2023              	.LFE125:
 2025              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 2026              		.align	2
 2027              		.global	CAN_GetLastErrorCode
 2028              		.thumb
 2029              		.thumb_func
 2031              	CAN_GetLastErrorCode:
 2032              	.LFB126:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2033              		.loc 1 1036 0
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 16
 2036              		@ frame_needed = 1, uses_anonymous_args = 0
 2037              		@ link register save eliminated.
 2038 0000 80B4     		push	{r7}
 2039              	.LCFI48:
 2040              		.cfi_def_cfa_offset 4
 2041 0002 85B0     		sub	sp, sp, #20
 2042              	.LCFI49:
 2043              		.cfi_def_cfa_offset 24
 2044 0004 00AF     		add	r7, sp, #0
 2045              		.cfi_offset 7, -4
 2046              	.LCFI50:
 2047              		.cfi_def_cfa_register 7
 2048 0006 7860     		str	r0, [r7, #4]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 2049              		.loc 1 1037 0
 2050 0008 4FF00003 		mov	r3, #0
 2051 000c FB73     		strb	r3, [r7, #15]
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 2052              		.loc 1 1043 0
 2053 000e 7B68     		ldr	r3, [r7, #4]
 2054 0010 9B69     		ldr	r3, [r3, #24]
 2055 0012 DBB2     		uxtb	r3, r3
 2056 0014 03F07003 		and	r3, r3, #112
 2057 0018 FB73     		strb	r3, [r7, #15]
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 2058              		.loc 1 1046 0
 2059 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2060              		.loc 1 1047 0
 2061 001c 1846     		mov	r0, r3
 2062 001e 07F11407 		add	r7, r7, #20
 2063 0022 BD46     		mov	sp, r7
 2064 0024 80BC     		pop	{r7}
 2065 0026 7047     		bx	lr
 2066              		.cfi_endproc
 2067              	.LFE126:
 2069              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 2070              		.align	2
 2071              		.global	CAN_GetReceiveErrorCounter
 2072              		.thumb
 2073              		.thumb_func
 2075              	CAN_GetReceiveErrorCounter:
 2076              	.LFB127:
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2077              		.loc 1 1061 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 16
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
 2082 0000 80B4     		push	{r7}
 2083              	.LCFI51:
 2084              		.cfi_def_cfa_offset 4
 2085 0002 85B0     		sub	sp, sp, #20
 2086              	.LCFI52:
 2087              		.cfi_def_cfa_offset 24
 2088 0004 00AF     		add	r7, sp, #0
 2089              		.cfi_offset 7, -4
 2090              	.LCFI53:
 2091              		.cfi_def_cfa_register 7
 2092 0006 7860     		str	r0, [r7, #4]
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2093              		.loc 1 1062 0
 2094 0008 4FF00003 		mov	r3, #0
 2095 000c FB73     		strb	r3, [r7, #15]
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 2096              		.loc 1 1068 0
 2097 000e 7B68     		ldr	r3, [r7, #4]
 2098 0010 9B69     		ldr	r3, [r3, #24]
 2099 0012 4FEA1363 		lsr	r3, r3, #24
 2100 0016 FB73     		strb	r3, [r7, #15]
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2101              		.loc 1 1071 0
 2102 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2103              		.loc 1 1072 0
 2104 001a 1846     		mov	r0, r3
 2105 001c 07F11407 		add	r7, r7, #20
 2106 0020 BD46     		mov	sp, r7
 2107 0022 80BC     		pop	{r7}
 2108 0024 7047     		bx	lr
 2109              		.cfi_endproc
 2110              	.LFE127:
 2112 0026 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 2113              		.align	2
 2114              		.global	CAN_GetLSBTransmitErrorCounter
 2115              		.thumb
 2116              		.thumb_func
 2118              	CAN_GetLSBTransmitErrorCounter:
 2119              	.LFB128:
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2120              		.loc 1 1081 0
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 16
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
 2124              		@ link register save eliminated.
 2125 0000 80B4     		push	{r7}
 2126              	.LCFI54:
 2127              		.cfi_def_cfa_offset 4
 2128 0002 85B0     		sub	sp, sp, #20
 2129              	.LCFI55:
 2130              		.cfi_def_cfa_offset 24
 2131 0004 00AF     		add	r7, sp, #0
 2132              		.cfi_offset 7, -4
 2133              	.LCFI56:
 2134              		.cfi_def_cfa_register 7
 2135 0006 7860     		str	r0, [r7, #4]
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2136              		.loc 1 1082 0
 2137 0008 4FF00003 		mov	r3, #0
 2138 000c FB73     		strb	r3, [r7, #15]
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 2139              		.loc 1 1088 0
 2140 000e 7B68     		ldr	r3, [r7, #4]
 2141 0010 9B69     		ldr	r3, [r3, #24]
 2142 0012 03F47F03 		and	r3, r3, #16711680
 2143 0016 4FEA1343 		lsr	r3, r3, #16
 2144 001a FB73     		strb	r3, [r7, #15]
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2145              		.loc 1 1091 0
 2146 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2147              		.loc 1 1092 0
 2148 001e 1846     		mov	r0, r3
 2149 0020 07F11407 		add	r7, r7, #20
 2150 0024 BD46     		mov	sp, r7
 2151 0026 80BC     		pop	{r7}
 2152 0028 7047     		bx	lr
 2153              		.cfi_endproc
 2154              	.LFE128:
 2156 002a 00BF     		.section	.text.CAN_ITConfig,"ax",%progbits
 2157              		.align	2
 2158              		.global	CAN_ITConfig
 2159              		.thumb
 2160              		.thumb_func
 2162              	CAN_ITConfig:
 2163              	.LFB129:
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2164              		.loc 1 1288 0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 16
 2167              		@ frame_needed = 1, uses_anonymous_args = 0
 2168              		@ link register save eliminated.
 2169 0000 80B4     		push	{r7}
 2170              	.LCFI57:
 2171              		.cfi_def_cfa_offset 4
 2172 0002 85B0     		sub	sp, sp, #20
 2173              	.LCFI58:
 2174              		.cfi_def_cfa_offset 24
 2175 0004 00AF     		add	r7, sp, #0
 2176              		.cfi_offset 7, -4
 2177              	.LCFI59:
 2178              		.cfi_def_cfa_register 7
 2179 0006 F860     		str	r0, [r7, #12]
 2180 0008 B960     		str	r1, [r7, #8]
 2181 000a 1346     		mov	r3, r2
 2182 000c FB71     		strb	r3, [r7, #7]
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 2183              		.loc 1 1294 0
 2184 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2185 0010 002B     		cmp	r3, #0
 2186 0012 06D0     		beq	.L122
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 2187              		.loc 1 1297 0
 2188 0014 FB68     		ldr	r3, [r7, #12]
 2189 0016 5A69     		ldr	r2, [r3, #20]
 2190 0018 BB68     		ldr	r3, [r7, #8]
 2191 001a 1A43     		orrs	r2, r2, r3
 2192 001c FB68     		ldr	r3, [r7, #12]
 2193 001e 5A61     		str	r2, [r3, #20]
 2194 0020 07E0     		b	.L121
 2195              	.L122:
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 2196              		.loc 1 1302 0
 2197 0022 FB68     		ldr	r3, [r7, #12]
 2198 0024 5A69     		ldr	r2, [r3, #20]
 2199 0026 BB68     		ldr	r3, [r7, #8]
 2200 0028 6FEA0303 		mvn	r3, r3
 2201 002c 1A40     		ands	r2, r2, r3
 2202 002e FB68     		ldr	r3, [r7, #12]
 2203 0030 5A61     		str	r2, [r3, #20]
 2204              	.L121:
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2205              		.loc 1 1304 0
 2206 0032 07F11407 		add	r7, r7, #20
 2207 0036 BD46     		mov	sp, r7
 2208 0038 80BC     		pop	{r7}
 2209 003a 7047     		bx	lr
 2210              		.cfi_endproc
 2211              	.LFE129:
 2213              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 2214              		.align	2
 2215              		.global	CAN_GetFlagStatus
 2216              		.thumb
 2217              		.thumb_func
 2219              	CAN_GetFlagStatus:
 2220              	.LFB130:
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2221              		.loc 1 1328 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 16
 2224              		@ frame_needed = 1, uses_anonymous_args = 0
 2225              		@ link register save eliminated.
 2226 0000 80B4     		push	{r7}
 2227              	.LCFI60:
 2228              		.cfi_def_cfa_offset 4
 2229 0002 85B0     		sub	sp, sp, #20
 2230              	.LCFI61:
 2231              		.cfi_def_cfa_offset 24
 2232 0004 00AF     		add	r7, sp, #0
 2233              		.cfi_offset 7, -4
 2234              	.LCFI62:
 2235              		.cfi_def_cfa_register 7
 2236 0006 7860     		str	r0, [r7, #4]
 2237 0008 3960     		str	r1, [r7, #0]
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 2238              		.loc 1 1329 0
 2239 000a 4FF00003 		mov	r3, #0
 2240 000e FB73     		strb	r3, [r7, #15]
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 2241              		.loc 1 1336 0
 2242 0010 3B68     		ldr	r3, [r7, #0]
 2243 0012 03F47003 		and	r3, r3, #15728640
 2244 0016 002B     		cmp	r3, #0
 2245 0018 12D0     		beq	.L125
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2246              		.loc 1 1339 0
 2247 001a 7B68     		ldr	r3, [r7, #4]
 2248 001c 9A69     		ldr	r2, [r3, #24]
 2249 001e 3B68     		ldr	r3, [r7, #0]
 2250 0020 02EA0303 		and	r3, r2, r3
 2251 0024 23F07F43 		bic	r3, r3, #-16777216
 2252 0028 23F47003 		bic	r3, r3, #15728640
 2253 002c 002B     		cmp	r3, #0
 2254 002e 03D0     		beq	.L126
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2255              		.loc 1 1342 0
 2256 0030 4FF00103 		mov	r3, #1
 2257 0034 FB73     		strb	r3, [r7, #15]
 2258 0036 5DE0     		b	.L127
 2259              	.L126:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2260              		.loc 1 1347 0
 2261 0038 4FF00003 		mov	r3, #0
 2262 003c FB73     		strb	r3, [r7, #15]
 2263 003e 59E0     		b	.L127
 2264              	.L125:
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 2265              		.loc 1 1350 0
 2266 0040 3B68     		ldr	r3, [r7, #0]
 2267 0042 03F08073 		and	r3, r3, #16777216
 2268 0046 002B     		cmp	r3, #0
 2269 0048 12D0     		beq	.L128
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2270              		.loc 1 1353 0
 2271 004a 7B68     		ldr	r3, [r7, #4]
 2272 004c 5A68     		ldr	r2, [r3, #4]
 2273 004e 3B68     		ldr	r3, [r7, #0]
 2274 0050 02EA0303 		and	r3, r2, r3
 2275 0054 23F07F43 		bic	r3, r3, #-16777216
 2276 0058 23F47003 		bic	r3, r3, #15728640
 2277 005c 002B     		cmp	r3, #0
 2278 005e 03D0     		beq	.L129
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2279              		.loc 1 1356 0
 2280 0060 4FF00103 		mov	r3, #1
 2281 0064 FB73     		strb	r3, [r7, #15]
 2282 0066 45E0     		b	.L127
 2283              	.L129:
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2284              		.loc 1 1361 0
 2285 0068 4FF00003 		mov	r3, #0
 2286 006c FB73     		strb	r3, [r7, #15]
 2287 006e 41E0     		b	.L127
 2288              	.L128:
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 2289              		.loc 1 1364 0
 2290 0070 3B68     		ldr	r3, [r7, #0]
 2291 0072 03F00063 		and	r3, r3, #134217728
 2292 0076 002B     		cmp	r3, #0
 2293 0078 12D0     		beq	.L130
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2294              		.loc 1 1367 0
 2295 007a 7B68     		ldr	r3, [r7, #4]
 2296 007c 9A68     		ldr	r2, [r3, #8]
 2297 007e 3B68     		ldr	r3, [r7, #0]
 2298 0080 02EA0303 		and	r3, r2, r3
 2299 0084 23F07F43 		bic	r3, r3, #-16777216
 2300 0088 23F47003 		bic	r3, r3, #15728640
 2301 008c 002B     		cmp	r3, #0
 2302 008e 03D0     		beq	.L131
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2303              		.loc 1 1370 0
 2304 0090 4FF00103 		mov	r3, #1
 2305 0094 FB73     		strb	r3, [r7, #15]
 2306 0096 2DE0     		b	.L127
 2307              	.L131:
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2308              		.loc 1 1375 0
 2309 0098 4FF00003 		mov	r3, #0
 2310 009c FB73     		strb	r3, [r7, #15]
 2311 009e 29E0     		b	.L127
 2312              	.L130:
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 2313              		.loc 1 1378 0
 2314 00a0 3B68     		ldr	r3, [r7, #0]
 2315 00a2 03F00073 		and	r3, r3, #33554432
 2316 00a6 002B     		cmp	r3, #0
 2317 00a8 12D0     		beq	.L132
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2318              		.loc 1 1381 0
 2319 00aa 7B68     		ldr	r3, [r7, #4]
 2320 00ac DA68     		ldr	r2, [r3, #12]
 2321 00ae 3B68     		ldr	r3, [r7, #0]
 2322 00b0 02EA0303 		and	r3, r2, r3
 2323 00b4 23F07F43 		bic	r3, r3, #-16777216
 2324 00b8 23F47003 		bic	r3, r3, #15728640
 2325 00bc 002B     		cmp	r3, #0
 2326 00be 03D0     		beq	.L133
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2327              		.loc 1 1384 0
 2328 00c0 4FF00103 		mov	r3, #1
 2329 00c4 FB73     		strb	r3, [r7, #15]
 2330 00c6 15E0     		b	.L127
 2331              	.L133:
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2332              		.loc 1 1389 0
 2333 00c8 4FF00003 		mov	r3, #0
 2334 00cc FB73     		strb	r3, [r7, #15]
 2335 00ce 11E0     		b	.L127
 2336              	.L132:
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2337              		.loc 1 1395 0
 2338 00d0 7B68     		ldr	r3, [r7, #4]
 2339 00d2 1A69     		ldr	r2, [r3, #16]
 2340 00d4 3B68     		ldr	r3, [r7, #0]
 2341 00d6 02EA0303 		and	r3, r2, r3
 2342 00da 23F07F43 		bic	r3, r3, #-16777216
 2343 00de 23F47003 		bic	r3, r3, #15728640
 2344 00e2 002B     		cmp	r3, #0
 2345 00e4 03D0     		beq	.L134
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2346              		.loc 1 1398 0
 2347 00e6 4FF00103 		mov	r3, #1
 2348 00ea FB73     		strb	r3, [r7, #15]
 2349 00ec 02E0     		b	.L127
 2350              	.L134:
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2351              		.loc 1 1403 0
 2352 00ee 4FF00003 		mov	r3, #0
 2353 00f2 FB73     		strb	r3, [r7, #15]
 2354              	.L127:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
 2355              		.loc 1 1407 0
 2356 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2357              		.loc 1 1408 0
 2358 00f6 1846     		mov	r0, r3
 2359 00f8 07F11407 		add	r7, r7, #20
 2360 00fc BD46     		mov	sp, r7
 2361 00fe 80BC     		pop	{r7}
 2362 0100 7047     		bx	lr
 2363              		.cfi_endproc
 2364              	.LFE130:
 2366 0102 00BF     		.section	.text.CAN_ClearFlag,"ax",%progbits
 2367              		.align	2
 2368              		.global	CAN_ClearFlag
 2369              		.thumb
 2370              		.thumb_func
 2372              	CAN_ClearFlag:
 2373              	.LFB131:
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2374              		.loc 1 1428 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 16
 2377              		@ frame_needed = 1, uses_anonymous_args = 0
 2378              		@ link register save eliminated.
 2379 0000 80B4     		push	{r7}
 2380              	.LCFI63:
 2381              		.cfi_def_cfa_offset 4
 2382 0002 85B0     		sub	sp, sp, #20
 2383              	.LCFI64:
 2384              		.cfi_def_cfa_offset 24
 2385 0004 00AF     		add	r7, sp, #0
 2386              		.cfi_offset 7, -4
 2387              	.LCFI65:
 2388              		.cfi_def_cfa_register 7
 2389 0006 7860     		str	r0, [r7, #4]
 2390 0008 3960     		str	r1, [r7, #0]
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2391              		.loc 1 1429 0
 2392 000a 4FF00003 		mov	r3, #0
 2393 000e FB60     		str	r3, [r7, #12]
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 2394              		.loc 1 1434 0
 2395 0010 3A68     		ldr	r2, [r7, #0]
 2396 0012 184B     		ldr	r3, .L141
 2397 0014 9A42     		cmp	r2, r3
 2398 0016 04D1     		bne	.L136
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 2399              		.loc 1 1437 0
 2400 0018 7B68     		ldr	r3, [r7, #4]
 2401 001a 4FF00002 		mov	r2, #0
 2402 001e 9A61     		str	r2, [r3, #24]
 2403 0020 23E0     		b	.L135
 2404              	.L136:
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 2405              		.loc 1 1441 0
 2406 0022 3B68     		ldr	r3, [r7, #0]
 2407 0024 23F07F43 		bic	r3, r3, #-16777216
 2408 0028 23F47003 		bic	r3, r3, #15728640
 2409 002c FB60     		str	r3, [r7, #12]
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 2410              		.loc 1 1443 0
 2411 002e 3B68     		ldr	r3, [r7, #0]
 2412 0030 03F00073 		and	r3, r3, #33554432
 2413 0034 002B     		cmp	r3, #0
 2414 0036 03D0     		beq	.L138
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 2415              		.loc 1 1446 0
 2416 0038 7B68     		ldr	r3, [r7, #4]
 2417 003a FA68     		ldr	r2, [r7, #12]
 2418 003c DA60     		str	r2, [r3, #12]
 2419 003e 14E0     		b	.L135
 2420              	.L138:
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 2421              		.loc 1 1448 0
 2422 0040 3B68     		ldr	r3, [r7, #0]
 2423 0042 03F08063 		and	r3, r3, #67108864
 2424 0046 002B     		cmp	r3, #0
 2425 0048 03D0     		beq	.L139
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 2426              		.loc 1 1451 0
 2427 004a 7B68     		ldr	r3, [r7, #4]
 2428 004c FA68     		ldr	r2, [r7, #12]
 2429 004e 1A61     		str	r2, [r3, #16]
 2430 0050 0BE0     		b	.L135
 2431              	.L139:
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 2432              		.loc 1 1453 0
 2433 0052 3B68     		ldr	r3, [r7, #0]
 2434 0054 03F00063 		and	r3, r3, #134217728
 2435 0058 002B     		cmp	r3, #0
 2436 005a 03D0     		beq	.L140
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 2437              		.loc 1 1456 0
 2438 005c 7B68     		ldr	r3, [r7, #4]
 2439 005e FA68     		ldr	r2, [r7, #12]
 2440 0060 9A60     		str	r2, [r3, #8]
 2441 0062 02E0     		b	.L135
 2442              	.L140:
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 2443              		.loc 1 1461 0
 2444 0064 7B68     		ldr	r3, [r7, #4]
 2445 0066 FA68     		ldr	r2, [r7, #12]
 2446 0068 5A60     		str	r2, [r3, #4]
 2447              	.L135:
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2448              		.loc 1 1464 0
 2449 006a 07F11407 		add	r7, r7, #20
 2450 006e BD46     		mov	sp, r7
 2451 0070 80BC     		pop	{r7}
 2452 0072 7047     		bx	lr
 2453              	.L142:
 2454              		.align	2
 2455              	.L141:
 2456 0074 7000F030 		.word	821035120
 2457              		.cfi_endproc
 2458              	.LFE131:
 2460              		.section	.text.CAN_GetITStatus,"ax",%progbits
 2461              		.align	2
 2462              		.global	CAN_GetITStatus
 2463              		.thumb
 2464              		.thumb_func
 2466              	CAN_GetITStatus:
 2467              	.LFB132:
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2468              		.loc 1 1488 0
 2469              		.cfi_startproc
 2470              		@ args = 0, pretend = 0, frame = 16
 2471              		@ frame_needed = 1, uses_anonymous_args = 0
 2472 0000 80B5     		push	{r7, lr}
 2473              	.LCFI66:
 2474              		.cfi_def_cfa_offset 8
 2475 0002 84B0     		sub	sp, sp, #16
 2476              	.LCFI67:
 2477              		.cfi_def_cfa_offset 24
 2478 0004 00AF     		add	r7, sp, #0
 2479              		.cfi_offset 14, -4
 2480              		.cfi_offset 7, -8
 2481              	.LCFI68:
 2482              		.cfi_def_cfa_register 7
 2483 0006 7860     		str	r0, [r7, #4]
 2484 0008 3960     		str	r1, [r7, #0]
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2485              		.loc 1 1489 0
 2486 000a 4FF00003 		mov	r3, #0
 2487 000e FB73     		strb	r3, [r7, #15]
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 2488              		.loc 1 1495 0
 2489 0010 7B68     		ldr	r3, [r7, #4]
 2490 0012 5A69     		ldr	r2, [r3, #20]
 2491 0014 3B68     		ldr	r3, [r7, #0]
 2492 0016 02EA0303 		and	r3, r2, r3
 2493 001a 002B     		cmp	r3, #0
 2494 001c 00F0C180 		beq	.L144
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 2495              		.loc 1 1498 0
 2496 0020 3B68     		ldr	r3, [r7, #0]
 2497 0022 402B     		cmp	r3, #64
 2498 0024 68D0     		beq	.L152
 2499 0026 402B     		cmp	r3, #64
 2500 0028 0FD8     		bhi	.L160
 2501 002a 042B     		cmp	r3, #4
 2502 002c 3CD0     		beq	.L148
 2503 002e 042B     		cmp	r3, #4
 2504 0030 04D8     		bhi	.L161
 2505 0032 012B     		cmp	r3, #1
 2506 0034 25D0     		beq	.L146
 2507 0036 022B     		cmp	r3, #2
 2508 0038 2CD0     		beq	.L147
 2509 003a AEE0     		b	.L145
 2510              	.L161:
 2511 003c 102B     		cmp	r3, #16
 2512 003e 47D0     		beq	.L150
 2513 0040 202B     		cmp	r3, #32
 2514 0042 4FD0     		beq	.L151
 2515 0044 082B     		cmp	r3, #8
 2516 0046 39D0     		beq	.L149
 2517 0048 A7E0     		b	.L145
 2518              	.L160:
 2519 004a B3F5006F 		cmp	r3, #2048
 2520 004e 00F08F80 		beq	.L156
 2521 0052 B3F5006F 		cmp	r3, #2048
 2522 0056 09D8     		bhi	.L162
 2523 0058 B3F5007F 		cmp	r3, #512
 2524 005c 74D0     		beq	.L154
 2525 005e B3F5806F 		cmp	r3, #1024
 2526 0062 7BD0     		beq	.L155
 2527 0064 B3F5807F 		cmp	r3, #256
 2528 0068 64D0     		beq	.L153
 2529 006a 96E0     		b	.L145
 2530              	.L162:
 2531 006c B3F5803F 		cmp	r3, #65536
 2532 0070 4CD0     		beq	.L158
 2533 0072 B3F5003F 		cmp	r3, #131072
 2534 0076 53D0     		beq	.L159
 2535 0078 B3F5004F 		cmp	r3, #32768
 2536 007c 00F08280 		beq	.L157
 2537 0080 8BE0     		b	.L145
 2538              	.L146:
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 2539              		.loc 1 1502 0
 2540 0082 7B68     		ldr	r3, [r7, #4]
 2541 0084 9B68     		ldr	r3, [r3, #8]
 2542 0086 1846     		mov	r0, r3
 2543 0088 4A49     		ldr	r1, .L165
 2544 008a FFF7FEFF 		bl	CheckITStatus
 2545 008e 0346     		mov	r3, r0
 2546 0090 FB73     		strb	r3, [r7, #15]
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2547              		.loc 1 1503 0
 2548 0092 89E0     		b	.L164
 2549              	.L147:
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 2550              		.loc 1 1506 0
 2551 0094 7B68     		ldr	r3, [r7, #4]
 2552 0096 DB68     		ldr	r3, [r3, #12]
 2553 0098 1846     		mov	r0, r3
 2554 009a 4FF00301 		mov	r1, #3
 2555 009e FFF7FEFF 		bl	CheckITStatus
 2556 00a2 0346     		mov	r3, r0
 2557 00a4 FB73     		strb	r3, [r7, #15]
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2558              		.loc 1 1507 0
 2559 00a6 7FE0     		b	.L164
 2560              	.L148:
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 2561              		.loc 1 1510 0
 2562 00a8 7B68     		ldr	r3, [r7, #4]
 2563 00aa DB68     		ldr	r3, [r3, #12]
 2564 00ac 1846     		mov	r0, r3
 2565 00ae 4FF00801 		mov	r1, #8
 2566 00b2 FFF7FEFF 		bl	CheckITStatus
 2567 00b6 0346     		mov	r3, r0
 2568 00b8 FB73     		strb	r3, [r7, #15]
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2569              		.loc 1 1511 0
 2570 00ba 75E0     		b	.L164
 2571              	.L149:
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 2572              		.loc 1 1514 0
 2573 00bc 7B68     		ldr	r3, [r7, #4]
 2574 00be DB68     		ldr	r3, [r3, #12]
 2575 00c0 1846     		mov	r0, r3
 2576 00c2 4FF01001 		mov	r1, #16
 2577 00c6 FFF7FEFF 		bl	CheckITStatus
 2578 00ca 0346     		mov	r3, r0
 2579 00cc FB73     		strb	r3, [r7, #15]
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2580              		.loc 1 1515 0
 2581 00ce 6BE0     		b	.L164
 2582              	.L150:
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 2583              		.loc 1 1518 0
 2584 00d0 7B68     		ldr	r3, [r7, #4]
 2585 00d2 1B69     		ldr	r3, [r3, #16]
 2586 00d4 1846     		mov	r0, r3
 2587 00d6 4FF00301 		mov	r1, #3
 2588 00da FFF7FEFF 		bl	CheckITStatus
 2589 00de 0346     		mov	r3, r0
 2590 00e0 FB73     		strb	r3, [r7, #15]
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2591              		.loc 1 1519 0
 2592 00e2 61E0     		b	.L164
 2593              	.L151:
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 2594              		.loc 1 1522 0
 2595 00e4 7B68     		ldr	r3, [r7, #4]
 2596 00e6 1B69     		ldr	r3, [r3, #16]
 2597 00e8 1846     		mov	r0, r3
 2598 00ea 4FF00801 		mov	r1, #8
 2599 00ee FFF7FEFF 		bl	CheckITStatus
 2600 00f2 0346     		mov	r3, r0
 2601 00f4 FB73     		strb	r3, [r7, #15]
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2602              		.loc 1 1523 0
 2603 00f6 57E0     		b	.L164
 2604              	.L152:
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 2605              		.loc 1 1526 0
 2606 00f8 7B68     		ldr	r3, [r7, #4]
 2607 00fa 1B69     		ldr	r3, [r3, #16]
 2608 00fc 1846     		mov	r0, r3
 2609 00fe 4FF01001 		mov	r1, #16
 2610 0102 FFF7FEFF 		bl	CheckITStatus
 2611 0106 0346     		mov	r3, r0
 2612 0108 FB73     		strb	r3, [r7, #15]
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2613              		.loc 1 1527 0
 2614 010a 4DE0     		b	.L164
 2615              	.L158:
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 2616              		.loc 1 1530 0
 2617 010c 7B68     		ldr	r3, [r7, #4]
 2618 010e 5B68     		ldr	r3, [r3, #4]
 2619 0110 1846     		mov	r0, r3
 2620 0112 4FF00801 		mov	r1, #8
 2621 0116 FFF7FEFF 		bl	CheckITStatus
 2622 011a 0346     		mov	r3, r0
 2623 011c FB73     		strb	r3, [r7, #15]
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2624              		.loc 1 1531 0
 2625 011e 43E0     		b	.L164
 2626              	.L159:
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 2627              		.loc 1 1534 0
 2628 0120 7B68     		ldr	r3, [r7, #4]
 2629 0122 5B68     		ldr	r3, [r3, #4]
 2630 0124 1846     		mov	r0, r3
 2631 0126 4FF01001 		mov	r1, #16
 2632 012a FFF7FEFF 		bl	CheckITStatus
 2633 012e 0346     		mov	r3, r0
 2634 0130 FB73     		strb	r3, [r7, #15]
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2635              		.loc 1 1535 0
 2636 0132 39E0     		b	.L164
 2637              	.L153:
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 2638              		.loc 1 1538 0
 2639 0134 7B68     		ldr	r3, [r7, #4]
 2640 0136 9B69     		ldr	r3, [r3, #24]
 2641 0138 1846     		mov	r0, r3
 2642 013a 4FF00101 		mov	r1, #1
 2643 013e FFF7FEFF 		bl	CheckITStatus
 2644 0142 0346     		mov	r3, r0
 2645 0144 FB73     		strb	r3, [r7, #15]
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2646              		.loc 1 1539 0
 2647 0146 2FE0     		b	.L164
 2648              	.L154:
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 2649              		.loc 1 1542 0
 2650 0148 7B68     		ldr	r3, [r7, #4]
 2651 014a 9B69     		ldr	r3, [r3, #24]
 2652 014c 1846     		mov	r0, r3
 2653 014e 4FF00201 		mov	r1, #2
 2654 0152 FFF7FEFF 		bl	CheckITStatus
 2655 0156 0346     		mov	r3, r0
 2656 0158 FB73     		strb	r3, [r7, #15]
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2657              		.loc 1 1543 0
 2658 015a 25E0     		b	.L164
 2659              	.L155:
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 2660              		.loc 1 1546 0
 2661 015c 7B68     		ldr	r3, [r7, #4]
 2662 015e 9B69     		ldr	r3, [r3, #24]
 2663 0160 1846     		mov	r0, r3
 2664 0162 4FF00401 		mov	r1, #4
 2665 0166 FFF7FEFF 		bl	CheckITStatus
 2666 016a 0346     		mov	r3, r0
 2667 016c FB73     		strb	r3, [r7, #15]
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2668              		.loc 1 1547 0
 2669 016e 1BE0     		b	.L164
 2670              	.L156:
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 2671              		.loc 1 1550 0
 2672 0170 7B68     		ldr	r3, [r7, #4]
 2673 0172 9B69     		ldr	r3, [r3, #24]
 2674 0174 1846     		mov	r0, r3
 2675 0176 4FF07001 		mov	r1, #112
 2676 017a FFF7FEFF 		bl	CheckITStatus
 2677 017e 0346     		mov	r3, r0
 2678 0180 FB73     		strb	r3, [r7, #15]
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2679              		.loc 1 1551 0
 2680 0182 11E0     		b	.L164
 2681              	.L157:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 2682              		.loc 1 1554 0
 2683 0184 7B68     		ldr	r3, [r7, #4]
 2684 0186 5B68     		ldr	r3, [r3, #4]
 2685 0188 1846     		mov	r0, r3
 2686 018a 4FF00401 		mov	r1, #4
 2687 018e FFF7FEFF 		bl	CheckITStatus
 2688 0192 0346     		mov	r3, r0
 2689 0194 FB73     		strb	r3, [r7, #15]
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2690              		.loc 1 1555 0
 2691 0196 00BF     		nop
 2692 0198 06E0     		b	.L164
 2693              	.L145:
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 2694              		.loc 1 1558 0
 2695 019a 4FF00003 		mov	r3, #0
 2696 019e FB73     		strb	r3, [r7, #15]
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2697              		.loc 1 1559 0
 2698 01a0 02E0     		b	.L164
 2699              	.L144:
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 2700              		.loc 1 1565 0
 2701 01a2 4FF00003 		mov	r3, #0
 2702 01a6 FB73     		strb	r3, [r7, #15]
 2703              	.L164:
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
 2704              		.loc 1 1569 0
 2705 01a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2706              		.loc 1 1570 0
 2707 01aa 1846     		mov	r0, r3
 2708 01ac 07F11007 		add	r7, r7, #16
 2709 01b0 BD46     		mov	sp, r7
 2710 01b2 80BD     		pop	{r7, pc}
 2711              	.L166:
 2712              		.align	2
 2713              	.L165:
 2714 01b4 01010100 		.word	65793
 2715              		.cfi_endproc
 2716              	.LFE132:
 2718              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 2719              		.align	2
 2720              		.global	CAN_ClearITPendingBit
 2721              		.thumb
 2722              		.thumb_func
 2724              	CAN_ClearITPendingBit:
 2725              	.LFB133:
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2726              		.loc 1 1592 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 8
 2729              		@ frame_needed = 1, uses_anonymous_args = 0
 2730              		@ link register save eliminated.
 2731 0000 80B4     		push	{r7}
 2732              	.LCFI69:
 2733              		.cfi_def_cfa_offset 4
 2734 0002 83B0     		sub	sp, sp, #12
 2735              	.LCFI70:
 2736              		.cfi_def_cfa_offset 16
 2737 0004 00AF     		add	r7, sp, #0
 2738              		.cfi_offset 7, -4
 2739              	.LCFI71:
 2740              		.cfi_def_cfa_register 7
 2741 0006 7860     		str	r0, [r7, #4]
 2742 0008 3960     		str	r1, [r7, #0]
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2743              		.loc 1 1597 0
 2744 000a 3B68     		ldr	r3, [r7, #0]
 2745 000c B3F5807F 		cmp	r3, #256
 2746 0010 49D0     		beq	.L174
 2747 0012 B3F5807F 		cmp	r3, #256
 2748 0016 0DD8     		bhi	.L181
 2749 0018 082B     		cmp	r3, #8
 2750 001a 2BD0     		beq	.L171
 2751 001c 082B     		cmp	r3, #8
 2752 001e 04D8     		bhi	.L182
 2753 0020 012B     		cmp	r3, #1
 2754 0022 1ED0     		beq	.L169
 2755 0024 042B     		cmp	r3, #4
 2756 0026 20D0     		beq	.L170
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2757              		.loc 1 1656 0
 2758 0028 5EE0     		b	.L167
 2759              	.L182:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2760              		.loc 1 1597 0
 2761 002a 202B     		cmp	r3, #32
 2762 002c 27D0     		beq	.L172
 2763 002e 402B     		cmp	r3, #64
 2764 0030 2AD0     		beq	.L173
 2765              		.loc 1 1656 0
 2766 0032 59E0     		b	.L167
 2767              	.L181:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2768              		.loc 1 1597 0
 2769 0034 B3F5006F 		cmp	r3, #2048
 2770 0038 44D0     		beq	.L177
 2771 003a B3F5006F 		cmp	r3, #2048
 2772 003e 06D8     		bhi	.L183
 2773 0040 B3F5007F 		cmp	r3, #512
 2774 0044 34D0     		beq	.L175
 2775 0046 B3F5806F 		cmp	r3, #1024
 2776 004a 36D0     		beq	.L176
 2777              		.loc 1 1656 0
 2778 004c 4CE0     		b	.L167
 2779              	.L183:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2780              		.loc 1 1597 0
 2781 004e B3F5803F 		cmp	r3, #65536
 2782 0052 1ED0     		beq	.L179
 2783 0054 B3F5003F 		cmp	r3, #131072
 2784 0058 20D0     		beq	.L180
 2785 005a B3F5004F 		cmp	r3, #32768
 2786 005e 3AD0     		beq	.L178
 2787              		.loc 1 1656 0
 2788 0060 42E0     		b	.L167
 2789              	.L169:
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 2790              		.loc 1 1601 0
 2791 0062 7B68     		ldr	r3, [r7, #4]
 2792 0064 234A     		ldr	r2, .L185
 2793 0066 9A60     		str	r2, [r3, #8]
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2794              		.loc 1 1602 0
 2795 0068 3EE0     		b	.L167
 2796              	.L170:
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 2797              		.loc 1 1605 0
 2798 006a 7B68     		ldr	r3, [r7, #4]
 2799 006c 4FF00802 		mov	r2, #8
 2800 0070 DA60     		str	r2, [r3, #12]
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2801              		.loc 1 1606 0
 2802 0072 39E0     		b	.L167
 2803              	.L171:
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 2804              		.loc 1 1609 0
 2805 0074 7B68     		ldr	r3, [r7, #4]
 2806 0076 4FF01002 		mov	r2, #16
 2807 007a DA60     		str	r2, [r3, #12]
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2808              		.loc 1 1610 0
 2809 007c 34E0     		b	.L167
 2810              	.L172:
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 2811              		.loc 1 1613 0
 2812 007e 7B68     		ldr	r3, [r7, #4]
 2813 0080 4FF00802 		mov	r2, #8
 2814 0084 1A61     		str	r2, [r3, #16]
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2815              		.loc 1 1614 0
 2816 0086 2FE0     		b	.L167
 2817              	.L173:
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 2818              		.loc 1 1617 0
 2819 0088 7B68     		ldr	r3, [r7, #4]
 2820 008a 4FF01002 		mov	r2, #16
 2821 008e 1A61     		str	r2, [r3, #16]
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2822              		.loc 1 1618 0
 2823 0090 2AE0     		b	.L167
 2824              	.L179:
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 2825              		.loc 1 1621 0
 2826 0092 7B68     		ldr	r3, [r7, #4]
 2827 0094 4FF00802 		mov	r2, #8
 2828 0098 5A60     		str	r2, [r3, #4]
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2829              		.loc 1 1622 0
 2830 009a 25E0     		b	.L167
 2831              	.L180:
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 2832              		.loc 1 1625 0
 2833 009c 7B68     		ldr	r3, [r7, #4]
 2834 009e 4FF01002 		mov	r2, #16
 2835 00a2 5A60     		str	r2, [r3, #4]
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2836              		.loc 1 1626 0
 2837 00a4 20E0     		b	.L167
 2838              	.L174:
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
 2839              		.loc 1 1629 0
 2840 00a6 7B68     		ldr	r3, [r7, #4]
 2841 00a8 4FF00402 		mov	r2, #4
 2842 00ac 5A60     		str	r2, [r3, #4]
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2843              		.loc 1 1631 0
 2844 00ae 1BE0     		b	.L167
 2845              	.L175:
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2846              		.loc 1 1634 0
 2847 00b0 7B68     		ldr	r3, [r7, #4]
 2848 00b2 4FF00402 		mov	r2, #4
 2849 00b6 5A60     		str	r2, [r3, #4]
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2850              		.loc 1 1636 0
 2851 00b8 16E0     		b	.L167
 2852              	.L176:
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2853              		.loc 1 1639 0
 2854 00ba 7B68     		ldr	r3, [r7, #4]
 2855 00bc 4FF00402 		mov	r2, #4
 2856 00c0 5A60     		str	r2, [r3, #4]
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2857              		.loc 1 1641 0
 2858 00c2 11E0     		b	.L167
 2859              	.L177:
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2860              		.loc 1 1644 0
 2861 00c4 7B68     		ldr	r3, [r7, #4]
 2862 00c6 4FF00002 		mov	r2, #0
 2863 00ca 9A61     		str	r2, [r3, #24]
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2864              		.loc 1 1646 0
 2865 00cc 7B68     		ldr	r3, [r7, #4]
 2866 00ce 4FF00402 		mov	r2, #4
 2867 00d2 5A60     		str	r2, [r3, #4]
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2868              		.loc 1 1647 0
 2869 00d4 08E0     		b	.L167
 2870              	.L178:
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2871              		.loc 1 1650 0
 2872 00d6 7B68     		ldr	r3, [r7, #4]
 2873 00d8 4FF00002 		mov	r2, #0
 2874 00dc 9A61     		str	r2, [r3, #24]
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2875              		.loc 1 1652 0
 2876 00de 7B68     		ldr	r3, [r7, #4]
 2877 00e0 4FF00402 		mov	r2, #4
 2878 00e4 5A60     		str	r2, [r3, #4]
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2879              		.loc 1 1654 0
 2880 00e6 00BF     		nop
 2881              	.L167:
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2882              		.loc 1 1658 0
 2883 00e8 07F10C07 		add	r7, r7, #12
 2884 00ec BD46     		mov	sp, r7
 2885 00ee 80BC     		pop	{r7}
 2886 00f0 7047     		bx	lr
 2887              	.L186:
 2888 00f2 00BF     		.align	2
 2889              	.L185:
 2890 00f4 01010100 		.word	65793
 2891              		.cfi_endproc
 2892              	.LFE133:
 2894              		.section	.text.CheckITStatus,"ax",%progbits
 2895              		.align	2
 2896              		.thumb
 2897              		.thumb_func
 2899              	CheckITStatus:
 2900              	.LFB134:
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2901              		.loc 1 1670 0
 2902              		.cfi_startproc
 2903              		@ args = 0, pretend = 0, frame = 16
 2904              		@ frame_needed = 1, uses_anonymous_args = 0
 2905              		@ link register save eliminated.
 2906 0000 80B4     		push	{r7}
 2907              	.LCFI72:
 2908              		.cfi_def_cfa_offset 4
 2909 0002 85B0     		sub	sp, sp, #20
 2910              	.LCFI73:
 2911              		.cfi_def_cfa_offset 24
 2912 0004 00AF     		add	r7, sp, #0
 2913              		.cfi_offset 7, -4
 2914              	.LCFI74:
 2915              		.cfi_def_cfa_register 7
 2916 0006 7860     		str	r0, [r7, #4]
 2917 0008 3960     		str	r1, [r7, #0]
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 2918              		.loc 1 1671 0
 2919 000a 4FF00003 		mov	r3, #0
 2920 000e FB73     		strb	r3, [r7, #15]
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 2921              		.loc 1 1673 0
 2922 0010 7A68     		ldr	r2, [r7, #4]
 2923 0012 3B68     		ldr	r3, [r7, #0]
 2924 0014 02EA0303 		and	r3, r2, r3
 2925 0018 002B     		cmp	r3, #0
 2926 001a 03D0     		beq	.L188
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 2927              		.loc 1 1676 0
 2928 001c 4FF00103 		mov	r3, #1
 2929 0020 FB73     		strb	r3, [r7, #15]
 2930 0022 02E0     		b	.L189
 2931              	.L188:
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 2932              		.loc 1 1681 0
 2933 0024 4FF00003 		mov	r3, #0
 2934 0028 FB73     		strb	r3, [r7, #15]
 2935              	.L189:
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
 2936              		.loc 1 1683 0
 2937 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2938              		.loc 1 1684 0
 2939 002c 1846     		mov	r0, r3
 2940 002e 07F11407 		add	r7, r7, #20
 2941 0032 BD46     		mov	sp, r7
 2942 0034 80BC     		pop	{r7}
 2943 0036 7047     		bx	lr
 2944              		.cfi_endproc
 2945              	.LFE134:
 2947              		.text
 2948              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
     /tmp/cc4WJjGF.s:25     .text.CAN_DeInit:00000000 $t
     /tmp/cc4WJjGF.s:30     .text.CAN_DeInit:00000000 CAN_DeInit
     /tmp/cc4WJjGF.s:80     .text.CAN_DeInit:0000004c $d
     /tmp/cc4WJjGF.s:85     .text.CAN_Init:00000000 $t
     /tmp/cc4WJjGF.s:90     .text.CAN_Init:00000000 CAN_Init
     /tmp/cc4WJjGF.s:367    .text.CAN_FilterInit:00000000 $t
     /tmp/cc4WJjGF.s:372    .text.CAN_FilterInit:00000000 CAN_FilterInit
     /tmp/cc4WJjGF.s:585    .text.CAN_FilterInit:00000198 $d
     /tmp/cc4WJjGF.s:590    .text.CAN_StructInit:00000000 $t
     /tmp/cc4WJjGF.s:595    .text.CAN_StructInit:00000000 CAN_StructInit
     /tmp/cc4WJjGF.s:666    .text.CAN_SlaveStartBank:00000000 $t
     /tmp/cc4WJjGF.s:671    .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
     /tmp/cc4WJjGF.s:725    .text.CAN_SlaveStartBank:00000060 $d
     /tmp/cc4WJjGF.s:730    .text.CAN_DBGFreeze:00000000 $t
     /tmp/cc4WJjGF.s:735    .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
     /tmp/cc4WJjGF.s:783    .text.CAN_TTComModeCmd:00000000 $t
     /tmp/cc4WJjGF.s:788    .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
     /tmp/cc4WJjGF.s:872    .text.CAN_Transmit:00000000 $t
     /tmp/cc4WJjGF.s:877    .text.CAN_Transmit:00000000 CAN_Transmit
     /tmp/cc4WJjGF.s:1132   .text.CAN_TransmitStatus:00000000 $t
     /tmp/cc4WJjGF.s:1137   .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
     /tmp/cc4WJjGF.s:1291   .text.CAN_TransmitStatus:000000d8 $d
     /tmp/cc4WJjGF.s:1301   .text.CAN_CancelTransmit:00000000 $t
     /tmp/cc4WJjGF.s:1306   .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
     /tmp/cc4WJjGF.s:1375   .text.CAN_Receive:00000000 $t
     /tmp/cc4WJjGF.s:1380   .text.CAN_Receive:00000000 CAN_Receive
     /tmp/cc4WJjGF.s:1590   .text.CAN_FIFORelease:00000000 $t
     /tmp/cc4WJjGF.s:1595   .text.CAN_FIFORelease:00000000 CAN_FIFORelease
     /tmp/cc4WJjGF.s:1643   .text.CAN_MessagePending:00000000 $t
     /tmp/cc4WJjGF.s:1648   .text.CAN_MessagePending:00000000 CAN_MessagePending
     /tmp/cc4WJjGF.s:1711   .text.CAN_OperatingModeRequest:00000000 $t
     /tmp/cc4WJjGF.s:1716   .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
     /tmp/cc4WJjGF.s:1895   .text.CAN_Sleep:00000000 $t
     /tmp/cc4WJjGF.s:1900   .text.CAN_Sleep:00000000 CAN_Sleep
     /tmp/cc4WJjGF.s:1950   .text.CAN_WakeUp:00000000 $t
     /tmp/cc4WJjGF.s:1955   .text.CAN_WakeUp:00000000 CAN_WakeUp
     /tmp/cc4WJjGF.s:2026   .text.CAN_GetLastErrorCode:00000000 $t
     /tmp/cc4WJjGF.s:2031   .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
     /tmp/cc4WJjGF.s:2070   .text.CAN_GetReceiveErrorCounter:00000000 $t
     /tmp/cc4WJjGF.s:2075   .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
     /tmp/cc4WJjGF.s:2113   .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
     /tmp/cc4WJjGF.s:2118   .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
     /tmp/cc4WJjGF.s:2157   .text.CAN_ITConfig:00000000 $t
     /tmp/cc4WJjGF.s:2162   .text.CAN_ITConfig:00000000 CAN_ITConfig
     /tmp/cc4WJjGF.s:2214   .text.CAN_GetFlagStatus:00000000 $t
     /tmp/cc4WJjGF.s:2219   .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
     /tmp/cc4WJjGF.s:2367   .text.CAN_ClearFlag:00000000 $t
     /tmp/cc4WJjGF.s:2372   .text.CAN_ClearFlag:00000000 CAN_ClearFlag
     /tmp/cc4WJjGF.s:2456   .text.CAN_ClearFlag:00000074 $d
     /tmp/cc4WJjGF.s:2461   .text.CAN_GetITStatus:00000000 $t
     /tmp/cc4WJjGF.s:2466   .text.CAN_GetITStatus:00000000 CAN_GetITStatus
     /tmp/cc4WJjGF.s:2899   .text.CheckITStatus:00000000 CheckITStatus
     /tmp/cc4WJjGF.s:2714   .text.CAN_GetITStatus:000001b4 $d
     /tmp/cc4WJjGF.s:2719   .text.CAN_ClearITPendingBit:00000000 $t
     /tmp/cc4WJjGF.s:2724   .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
     /tmp/cc4WJjGF.s:2890   .text.CAN_ClearITPendingBit:000000f4 $d
     /tmp/cc4WJjGF.s:2895   .text.CheckITStatus:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
