   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_cryp_aes.c"
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.CRYP_AES_ECB,"ax",%progbits
  25              		.align	2
  26              		.global	CRYP_AES_ECB
  27              		.thumb
  28              		.thumb_func
  30              	CRYP_AES_ECB:
  31              	.LFB110:
  32              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @file    stm32f4xx_cryp_aes.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          input message using AES in ECB/CBC/CTR modes.
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          peripheral.
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *  @verbatim
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          ===================================================================
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *                                   How to use this driver
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          ===================================================================
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          1. Enable The CRYP controller clock using 
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          2. Encrypt and decrypt using AES in ECB Mode using CRYP_AES_ECB()
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          3. Encrypt and decrypt using AES in CBC Mode using CRYP_AES_CBC()
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          4. Encrypt and decrypt using AES in CTR Mode using CRYP_AES_CTR()
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *  @endverbatim
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @attention
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************  
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Includes ------------------------------------------------------------------*/
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** #include "stm32f4xx_cryp.h"
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP 
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief CRYP driver modules
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private typedef -----------------------------------------------------------*/
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private define ------------------------------------------------------------*/
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** #define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private macro -------------------------------------------------------------*/
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private variables ---------------------------------------------------------*/
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private function prototypes -----------------------------------------------*/
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private functions ---------------------------------------------------------*/
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Private_Functions
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */ 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Group6 High Level AES functions
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  *  @brief   High Level AES functions 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  *
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** @verbatim   
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                           High Level AES functions
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** @endverbatim
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in ECB Mode
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t* Input, uint32_t Ilength, uint8_t* Output)
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
  33              		.loc 1 100 0
  34              		.cfi_startproc
  35              		@ args = 8, pretend = 0, frame = 232
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 90B5     		push	{r4, r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 12
  40 0002 BBB0     		sub	sp, sp, #236
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 248
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_offset 14, -4
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 4, -12
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 B960     		str	r1, [r7, #8]
  50 0008 3B60     		str	r3, [r7, #0]
  51 000a 0346     		mov	r3, r0
  52 000c FB73     		strb	r3, [r7, #15]
  53 000e 1346     		mov	r3, r2	@ movhi
  54 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
  55              		.loc 1 103 0
  56 0012 4FF00003 		mov	r3, #0
  57 0016 7B61     		str	r3, [r7, #20]
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
  58              		.loc 1 104 0
  59 0018 4FF00003 		mov	r3, #0
  60 001c C7F8D430 		str	r3, [r7, #212]
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
  61              		.loc 1 105 0
  62 0020 4FF00103 		mov	r3, #1
  63 0024 87F8E730 		strb	r3, [r7, #231]
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
  64              		.loc 1 106 0
  65 0028 BB68     		ldr	r3, [r7, #8]
  66 002a C7F8D030 		str	r3, [r7, #208]
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
  67              		.loc 1 107 0
  68 002e 3B68     		ldr	r3, [r7, #0]
  69 0030 C7F8E030 		str	r3, [r7, #224]
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
  70              		.loc 1 108 0
  71 0034 D7F8FC30 		ldr	r3, [r7, #252]
  72 0038 C7F8DC30 		str	r3, [r7, #220]
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
  73              		.loc 1 109 0
  74 003c 4FF00003 		mov	r3, #0
  75 0040 C7F8D830 		str	r3, [r7, #216]
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
  76              		.loc 1 112 0
  77 0044 07F11803 		add	r3, r7, #24
  78 0048 1846     		mov	r0, r3
  79 004a FFF7FEFF 		bl	CRYP_KeyStructInit
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
  80              		.loc 1 114 0
  81 004e FB88     		ldrh	r3, [r7, #6]
  82 0050 C02B     		cmp	r3, #192
  83 0052 50D0     		beq	.L4
  84 0054 B3F5807F 		cmp	r3, #256
  85 0058 00F0BD80 		beq	.L5
  86 005c 802B     		cmp	r3, #128
  87 005e 40F03081 		bne	.L19
  88              	.L3:
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
  89              		.loc 1 117 0
  90 0062 4FF00003 		mov	r3, #0
  91 0066 FB87     		strh	r3, [r7, #62]	@ movhi
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
  92              		.loc 1 118 0
  93 0068 D7F8D030 		ldr	r3, [r7, #208]
  94 006c 1B68     		ldr	r3, [r3, #0]
  95 006e C7F8CC30 		str	r3, [r7, #204]
  96              	.LBB126:
  97              	.LBB127:
  98              		.file 2 "libs/CMSIS/Include/core_cmInstr.h"
   1:libs/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:libs/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:libs/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:libs/CMSIS/Include/core_cmInstr.h ****  * @version  V2.10
   5:libs/CMSIS/Include/core_cmInstr.h ****  * @date     19. July 2011
   6:libs/CMSIS/Include/core_cmInstr.h ****  *
   7:libs/CMSIS/Include/core_cmInstr.h ****  * @note
   8:libs/CMSIS/Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:libs/CMSIS/Include/core_cmInstr.h ****  *
  10:libs/CMSIS/Include/core_cmInstr.h ****  * @par
  11:libs/CMSIS/Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:libs/CMSIS/Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:libs/CMSIS/Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:libs/CMSIS/Include/core_cmInstr.h ****  *
  15:libs/CMSIS/Include/core_cmInstr.h ****  * @par
  16:libs/CMSIS/Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libs/CMSIS/Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libs/CMSIS/Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libs/CMSIS/Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libs/CMSIS/Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libs/CMSIS/Include/core_cmInstr.h ****  *
  22:libs/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  23:libs/CMSIS/Include/core_cmInstr.h **** 
  24:libs/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:libs/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:libs/CMSIS/Include/core_cmInstr.h **** 
  27:libs/CMSIS/Include/core_cmInstr.h **** 
  28:libs/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:libs/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:libs/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  31:libs/CMSIS/Include/core_cmInstr.h ****   @{
  32:libs/CMSIS/Include/core_cmInstr.h **** */
  33:libs/CMSIS/Include/core_cmInstr.h **** 
  34:libs/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:libs/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:libs/CMSIS/Include/core_cmInstr.h **** 
  37:libs/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:libs/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:libs/CMSIS/Include/core_cmInstr.h **** #endif
  40:libs/CMSIS/Include/core_cmInstr.h **** 
  41:libs/CMSIS/Include/core_cmInstr.h **** 
  42:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  43:libs/CMSIS/Include/core_cmInstr.h **** 
  44:libs/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:libs/CMSIS/Include/core_cmInstr.h ****  */
  46:libs/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  47:libs/CMSIS/Include/core_cmInstr.h **** 
  48:libs/CMSIS/Include/core_cmInstr.h **** 
  49:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:libs/CMSIS/Include/core_cmInstr.h **** 
  51:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:libs/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:libs/CMSIS/Include/core_cmInstr.h ****  */
  54:libs/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:libs/CMSIS/Include/core_cmInstr.h **** 
  56:libs/CMSIS/Include/core_cmInstr.h **** 
  57:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:libs/CMSIS/Include/core_cmInstr.h **** 
  59:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:libs/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:libs/CMSIS/Include/core_cmInstr.h ****  */
  62:libs/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:libs/CMSIS/Include/core_cmInstr.h **** 
  64:libs/CMSIS/Include/core_cmInstr.h **** 
  65:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  66:libs/CMSIS/Include/core_cmInstr.h **** 
  67:libs/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:libs/CMSIS/Include/core_cmInstr.h ****  */
  69:libs/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  70:libs/CMSIS/Include/core_cmInstr.h **** 
  71:libs/CMSIS/Include/core_cmInstr.h **** 
  72:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:libs/CMSIS/Include/core_cmInstr.h **** 
  74:libs/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:libs/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:libs/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:libs/CMSIS/Include/core_cmInstr.h ****  */
  78:libs/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:libs/CMSIS/Include/core_cmInstr.h **** 
  80:libs/CMSIS/Include/core_cmInstr.h **** 
  81:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:libs/CMSIS/Include/core_cmInstr.h **** 
  83:libs/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:libs/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:libs/CMSIS/Include/core_cmInstr.h ****  */
  86:libs/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:libs/CMSIS/Include/core_cmInstr.h **** 
  88:libs/CMSIS/Include/core_cmInstr.h **** 
  89:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:libs/CMSIS/Include/core_cmInstr.h **** 
  91:libs/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:libs/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:libs/CMSIS/Include/core_cmInstr.h ****  */
  94:libs/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:libs/CMSIS/Include/core_cmInstr.h **** 
  96:libs/CMSIS/Include/core_cmInstr.h **** 
  97:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:libs/CMSIS/Include/core_cmInstr.h **** 
  99:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:libs/CMSIS/Include/core_cmInstr.h **** 
 101:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 103:libs/CMSIS/Include/core_cmInstr.h ****  */
 104:libs/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 105:libs/CMSIS/Include/core_cmInstr.h **** 
 106:libs/CMSIS/Include/core_cmInstr.h **** 
 107:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:libs/CMSIS/Include/core_cmInstr.h **** 
 109:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:libs/CMSIS/Include/core_cmInstr.h **** 
 111:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 113:libs/CMSIS/Include/core_cmInstr.h ****  */
 114:libs/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:libs/CMSIS/Include/core_cmInstr.h **** {
 116:libs/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 117:libs/CMSIS/Include/core_cmInstr.h ****   bx lr
 118:libs/CMSIS/Include/core_cmInstr.h **** }
 119:libs/CMSIS/Include/core_cmInstr.h **** 
 120:libs/CMSIS/Include/core_cmInstr.h **** 
 121:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:libs/CMSIS/Include/core_cmInstr.h **** 
 123:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:libs/CMSIS/Include/core_cmInstr.h **** 
 125:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:libs/CMSIS/Include/core_cmInstr.h ****  */
 128:libs/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:libs/CMSIS/Include/core_cmInstr.h **** {
 130:libs/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 131:libs/CMSIS/Include/core_cmInstr.h ****   bx lr
 132:libs/CMSIS/Include/core_cmInstr.h **** }
 133:libs/CMSIS/Include/core_cmInstr.h **** 
 134:libs/CMSIS/Include/core_cmInstr.h **** 
 135:libs/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:libs/CMSIS/Include/core_cmInstr.h **** 
 137:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:libs/CMSIS/Include/core_cmInstr.h **** 
 139:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:libs/CMSIS/Include/core_cmInstr.h **** 
 141:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 143:libs/CMSIS/Include/core_cmInstr.h ****  */
 144:libs/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:libs/CMSIS/Include/core_cmInstr.h **** 
 146:libs/CMSIS/Include/core_cmInstr.h **** 
 147:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:libs/CMSIS/Include/core_cmInstr.h **** 
 149:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:libs/CMSIS/Include/core_cmInstr.h **** 
 151:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:libs/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:libs/CMSIS/Include/core_cmInstr.h ****  */
 154:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:libs/CMSIS/Include/core_cmInstr.h **** 
 156:libs/CMSIS/Include/core_cmInstr.h **** 
 157:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:libs/CMSIS/Include/core_cmInstr.h **** 
 159:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:libs/CMSIS/Include/core_cmInstr.h **** 
 161:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:libs/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:libs/CMSIS/Include/core_cmInstr.h ****  */
 164:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:libs/CMSIS/Include/core_cmInstr.h **** 
 166:libs/CMSIS/Include/core_cmInstr.h **** 
 167:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:libs/CMSIS/Include/core_cmInstr.h **** 
 169:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:libs/CMSIS/Include/core_cmInstr.h **** 
 171:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:libs/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:libs/CMSIS/Include/core_cmInstr.h ****  */
 174:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:libs/CMSIS/Include/core_cmInstr.h **** 
 176:libs/CMSIS/Include/core_cmInstr.h **** 
 177:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:libs/CMSIS/Include/core_cmInstr.h **** 
 179:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:libs/CMSIS/Include/core_cmInstr.h **** 
 181:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 185:libs/CMSIS/Include/core_cmInstr.h ****  */
 186:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:libs/CMSIS/Include/core_cmInstr.h **** 
 188:libs/CMSIS/Include/core_cmInstr.h **** 
 189:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:libs/CMSIS/Include/core_cmInstr.h **** 
 191:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:libs/CMSIS/Include/core_cmInstr.h **** 
 193:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 197:libs/CMSIS/Include/core_cmInstr.h ****  */
 198:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:libs/CMSIS/Include/core_cmInstr.h **** 
 200:libs/CMSIS/Include/core_cmInstr.h **** 
 201:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:libs/CMSIS/Include/core_cmInstr.h **** 
 203:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:libs/CMSIS/Include/core_cmInstr.h **** 
 205:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 209:libs/CMSIS/Include/core_cmInstr.h ****  */
 210:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:libs/CMSIS/Include/core_cmInstr.h **** 
 212:libs/CMSIS/Include/core_cmInstr.h **** 
 213:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:libs/CMSIS/Include/core_cmInstr.h **** 
 215:libs/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:libs/CMSIS/Include/core_cmInstr.h **** 
 217:libs/CMSIS/Include/core_cmInstr.h ****  */
 218:libs/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:libs/CMSIS/Include/core_cmInstr.h **** 
 220:libs/CMSIS/Include/core_cmInstr.h **** 
 221:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 222:libs/CMSIS/Include/core_cmInstr.h **** 
 223:libs/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 224:libs/CMSIS/Include/core_cmInstr.h **** 
 225:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:libs/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 228:libs/CMSIS/Include/core_cmInstr.h ****  */
 229:libs/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:libs/CMSIS/Include/core_cmInstr.h **** 
 231:libs/CMSIS/Include/core_cmInstr.h **** 
 232:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:libs/CMSIS/Include/core_cmInstr.h **** 
 234:libs/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:libs/CMSIS/Include/core_cmInstr.h **** 
 236:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:libs/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 239:libs/CMSIS/Include/core_cmInstr.h ****  */
 240:libs/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 241:libs/CMSIS/Include/core_cmInstr.h **** 
 242:libs/CMSIS/Include/core_cmInstr.h **** 
 243:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:libs/CMSIS/Include/core_cmInstr.h **** 
 245:libs/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:libs/CMSIS/Include/core_cmInstr.h **** 
 247:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:libs/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:libs/CMSIS/Include/core_cmInstr.h ****  */
 250:libs/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:libs/CMSIS/Include/core_cmInstr.h **** 
 252:libs/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:libs/CMSIS/Include/core_cmInstr.h **** 
 254:libs/CMSIS/Include/core_cmInstr.h **** 
 255:libs/CMSIS/Include/core_cmInstr.h **** 
 256:libs/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:libs/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:libs/CMSIS/Include/core_cmInstr.h **** 
 259:libs/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 260:libs/CMSIS/Include/core_cmInstr.h **** 
 261:libs/CMSIS/Include/core_cmInstr.h **** 
 262:libs/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:libs/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:libs/CMSIS/Include/core_cmInstr.h **** 
 265:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 266:libs/CMSIS/Include/core_cmInstr.h **** 
 267:libs/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:libs/CMSIS/Include/core_cmInstr.h ****  */
 269:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:libs/CMSIS/Include/core_cmInstr.h **** {
 271:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:libs/CMSIS/Include/core_cmInstr.h **** }
 273:libs/CMSIS/Include/core_cmInstr.h **** 
 274:libs/CMSIS/Include/core_cmInstr.h **** 
 275:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:libs/CMSIS/Include/core_cmInstr.h **** 
 277:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:libs/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 279:libs/CMSIS/Include/core_cmInstr.h ****  */
 280:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:libs/CMSIS/Include/core_cmInstr.h **** {
 282:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:libs/CMSIS/Include/core_cmInstr.h **** }
 284:libs/CMSIS/Include/core_cmInstr.h **** 
 285:libs/CMSIS/Include/core_cmInstr.h **** 
 286:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:libs/CMSIS/Include/core_cmInstr.h **** 
 288:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:libs/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:libs/CMSIS/Include/core_cmInstr.h ****  */
 291:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:libs/CMSIS/Include/core_cmInstr.h **** {
 293:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:libs/CMSIS/Include/core_cmInstr.h **** }
 295:libs/CMSIS/Include/core_cmInstr.h **** 
 296:libs/CMSIS/Include/core_cmInstr.h **** 
 297:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 298:libs/CMSIS/Include/core_cmInstr.h **** 
 299:libs/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:libs/CMSIS/Include/core_cmInstr.h ****  */
 301:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:libs/CMSIS/Include/core_cmInstr.h **** {
 303:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:libs/CMSIS/Include/core_cmInstr.h **** }
 305:libs/CMSIS/Include/core_cmInstr.h **** 
 306:libs/CMSIS/Include/core_cmInstr.h **** 
 307:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:libs/CMSIS/Include/core_cmInstr.h **** 
 309:libs/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:libs/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:libs/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:libs/CMSIS/Include/core_cmInstr.h ****  */
 313:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:libs/CMSIS/Include/core_cmInstr.h **** {
 315:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:libs/CMSIS/Include/core_cmInstr.h **** }
 317:libs/CMSIS/Include/core_cmInstr.h **** 
 318:libs/CMSIS/Include/core_cmInstr.h **** 
 319:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:libs/CMSIS/Include/core_cmInstr.h **** 
 321:libs/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:libs/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:libs/CMSIS/Include/core_cmInstr.h ****  */
 324:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:libs/CMSIS/Include/core_cmInstr.h **** {
 326:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 327:libs/CMSIS/Include/core_cmInstr.h **** }
 328:libs/CMSIS/Include/core_cmInstr.h **** 
 329:libs/CMSIS/Include/core_cmInstr.h **** 
 330:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:libs/CMSIS/Include/core_cmInstr.h **** 
 332:libs/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:libs/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:libs/CMSIS/Include/core_cmInstr.h ****  */
 335:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:libs/CMSIS/Include/core_cmInstr.h **** {
 337:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb");
 338:libs/CMSIS/Include/core_cmInstr.h **** }
 339:libs/CMSIS/Include/core_cmInstr.h **** 
 340:libs/CMSIS/Include/core_cmInstr.h **** 
 341:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:libs/CMSIS/Include/core_cmInstr.h **** 
 343:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:libs/CMSIS/Include/core_cmInstr.h **** 
 345:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 347:libs/CMSIS/Include/core_cmInstr.h ****  */
 348:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:libs/CMSIS/Include/core_cmInstr.h **** {
 350:libs/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 351:libs/CMSIS/Include/core_cmInstr.h ****   
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
  99              		.loc 2 352 0
 100 0072 D7F8CC30 		ldr	r3, [r7, #204]
 101              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 102 0076 1CBA     		rev r4, r3
 103              	@ 0 "" 2
 104              		.thumb
 105 0078 C7F8C840 		str	r4, [r7, #200]
 353:libs/CMSIS/Include/core_cmInstr.h ****   return(result);
 106              		.loc 2 353 0
 107 007c D7F8C830 		ldr	r3, [r7, #200]
 108              	.LBE127:
 109              	.LBE126:
 110              		.loc 1 118 0
 111 0080 BB62     		str	r3, [r7, #40]
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 112              		.loc 1 119 0
 113 0082 D7F8D030 		ldr	r3, [r7, #208]
 114 0086 03F10403 		add	r3, r3, #4
 115 008a C7F8D030 		str	r3, [r7, #208]
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 116              		.loc 1 120 0
 117 008e D7F8D030 		ldr	r3, [r7, #208]
 118 0092 1B68     		ldr	r3, [r3, #0]
 119 0094 C7F8C430 		str	r3, [r7, #196]
 120              	.LBB128:
 121              	.LBB129:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 122              		.loc 2 352 0
 123 0098 D7F8C430 		ldr	r3, [r7, #196]
 124              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 125 009c 1CBA     		rev r4, r3
 126              	@ 0 "" 2
 127              		.thumb
 128 009e C7F8C040 		str	r4, [r7, #192]
 129              		.loc 2 353 0
 130 00a2 D7F8C030 		ldr	r3, [r7, #192]
 131              	.LBE129:
 132              	.LBE128:
 133              		.loc 1 120 0
 134 00a6 FB62     		str	r3, [r7, #44]
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 135              		.loc 1 121 0
 136 00a8 D7F8D030 		ldr	r3, [r7, #208]
 137 00ac 03F10403 		add	r3, r3, #4
 138 00b0 C7F8D030 		str	r3, [r7, #208]
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 139              		.loc 1 122 0
 140 00b4 D7F8D030 		ldr	r3, [r7, #208]
 141 00b8 1B68     		ldr	r3, [r3, #0]
 142 00ba C7F8BC30 		str	r3, [r7, #188]
 143              	.LBB130:
 144              	.LBB131:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 145              		.loc 2 352 0
 146 00be D7F8BC30 		ldr	r3, [r7, #188]
 147              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 148 00c2 1CBA     		rev r4, r3
 149              	@ 0 "" 2
 150              		.thumb
 151 00c4 C7F8B840 		str	r4, [r7, #184]
 152              		.loc 2 353 0
 153 00c8 D7F8B830 		ldr	r3, [r7, #184]
 154              	.LBE131:
 155              	.LBE130:
 156              		.loc 1 122 0
 157 00cc 3B63     		str	r3, [r7, #48]
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 158              		.loc 1 123 0
 159 00ce D7F8D030 		ldr	r3, [r7, #208]
 160 00d2 03F10403 		add	r3, r3, #4
 161 00d6 C7F8D030 		str	r3, [r7, #208]
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 162              		.loc 1 124 0
 163 00da D7F8D030 		ldr	r3, [r7, #208]
 164 00de 1B68     		ldr	r3, [r3, #0]
 165 00e0 C7F8B430 		str	r3, [r7, #180]
 166              	.LBB132:
 167              	.LBB133:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 168              		.loc 2 352 0
 169 00e4 D7F8B430 		ldr	r3, [r7, #180]
 170              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 171 00e8 1CBA     		rev r4, r3
 172              	@ 0 "" 2
 173              		.thumb
 174 00ea C7F8B040 		str	r4, [r7, #176]
 175              		.loc 2 353 0
 176 00ee D7F8B030 		ldr	r3, [r7, #176]
 177              	.LBE133:
 178              	.LBE132:
 179              		.loc 1 124 0
 180 00f2 7B63     		str	r3, [r7, #52]
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 181              		.loc 1 125 0
 182 00f4 E6E0     		b	.L6
 183              	.L4:
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 184              		.loc 1 127 0
 185 00f6 4FF48073 		mov	r3, #256
 186 00fa FB87     		strh	r3, [r7, #62]	@ movhi
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 187              		.loc 1 128 0
 188 00fc D7F8D030 		ldr	r3, [r7, #208]
 189 0100 1B68     		ldr	r3, [r3, #0]
 190 0102 C7F8AC30 		str	r3, [r7, #172]
 191              	.LBB134:
 192              	.LBB135:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 193              		.loc 2 352 0
 194 0106 D7F8AC30 		ldr	r3, [r7, #172]
 195              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 196 010a 1CBA     		rev r4, r3
 197              	@ 0 "" 2
 198              		.thumb
 199 010c C7F8A840 		str	r4, [r7, #168]
 200              		.loc 2 353 0
 201 0110 D7F8A830 		ldr	r3, [r7, #168]
 202              	.LBE135:
 203              	.LBE134:
 204              		.loc 1 128 0
 205 0114 3B62     		str	r3, [r7, #32]
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 206              		.loc 1 129 0
 207 0116 D7F8D030 		ldr	r3, [r7, #208]
 208 011a 03F10403 		add	r3, r3, #4
 209 011e C7F8D030 		str	r3, [r7, #208]
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 210              		.loc 1 130 0
 211 0122 D7F8D030 		ldr	r3, [r7, #208]
 212 0126 1B68     		ldr	r3, [r3, #0]
 213 0128 C7F8A430 		str	r3, [r7, #164]
 214              	.LBB136:
 215              	.LBB137:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 216              		.loc 2 352 0
 217 012c D7F8A430 		ldr	r3, [r7, #164]
 218              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 219 0130 1CBA     		rev r4, r3
 220              	@ 0 "" 2
 221              		.thumb
 222 0132 C7F8A040 		str	r4, [r7, #160]
 223              		.loc 2 353 0
 224 0136 D7F8A030 		ldr	r3, [r7, #160]
 225              	.LBE137:
 226              	.LBE136:
 227              		.loc 1 130 0
 228 013a 7B62     		str	r3, [r7, #36]
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 229              		.loc 1 131 0
 230 013c D7F8D030 		ldr	r3, [r7, #208]
 231 0140 03F10403 		add	r3, r3, #4
 232 0144 C7F8D030 		str	r3, [r7, #208]
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 233              		.loc 1 132 0
 234 0148 D7F8D030 		ldr	r3, [r7, #208]
 235 014c 1B68     		ldr	r3, [r3, #0]
 236 014e C7F89C30 		str	r3, [r7, #156]
 237              	.LBB138:
 238              	.LBB139:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 239              		.loc 2 352 0
 240 0152 D7F89C30 		ldr	r3, [r7, #156]
 241              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 242 0156 1CBA     		rev r4, r3
 243              	@ 0 "" 2
 244              		.thumb
 245 0158 C7F89840 		str	r4, [r7, #152]
 246              		.loc 2 353 0
 247 015c D7F89830 		ldr	r3, [r7, #152]
 248              	.LBE139:
 249              	.LBE138:
 250              		.loc 1 132 0
 251 0160 BB62     		str	r3, [r7, #40]
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 252              		.loc 1 133 0
 253 0162 D7F8D030 		ldr	r3, [r7, #208]
 254 0166 03F10403 		add	r3, r3, #4
 255 016a C7F8D030 		str	r3, [r7, #208]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 256              		.loc 1 134 0
 257 016e D7F8D030 		ldr	r3, [r7, #208]
 258 0172 1B68     		ldr	r3, [r3, #0]
 259 0174 C7F89430 		str	r3, [r7, #148]
 260              	.LBB140:
 261              	.LBB141:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 262              		.loc 2 352 0
 263 0178 D7F89430 		ldr	r3, [r7, #148]
 264              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 265 017c 1CBA     		rev r4, r3
 266              	@ 0 "" 2
 267              		.thumb
 268 017e C7F89040 		str	r4, [r7, #144]
 269              		.loc 2 353 0
 270 0182 D7F89030 		ldr	r3, [r7, #144]
 271              	.LBE141:
 272              	.LBE140:
 273              		.loc 1 134 0
 274 0186 FB62     		str	r3, [r7, #44]
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 275              		.loc 1 135 0
 276 0188 D7F8D030 		ldr	r3, [r7, #208]
 277 018c 03F10403 		add	r3, r3, #4
 278 0190 C7F8D030 		str	r3, [r7, #208]
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 279              		.loc 1 136 0
 280 0194 D7F8D030 		ldr	r3, [r7, #208]
 281 0198 1B68     		ldr	r3, [r3, #0]
 282 019a C7F88C30 		str	r3, [r7, #140]
 283              	.LBB142:
 284              	.LBB143:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 285              		.loc 2 352 0
 286 019e D7F88C30 		ldr	r3, [r7, #140]
 287              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 288 01a2 1CBA     		rev r4, r3
 289              	@ 0 "" 2
 290              		.thumb
 291 01a4 C7F88840 		str	r4, [r7, #136]
 292              		.loc 2 353 0
 293 01a8 D7F88830 		ldr	r3, [r7, #136]
 294              	.LBE143:
 295              	.LBE142:
 296              		.loc 1 136 0
 297 01ac 3B63     		str	r3, [r7, #48]
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 298              		.loc 1 137 0
 299 01ae D7F8D030 		ldr	r3, [r7, #208]
 300 01b2 03F10403 		add	r3, r3, #4
 301 01b6 C7F8D030 		str	r3, [r7, #208]
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 302              		.loc 1 138 0
 303 01ba D7F8D030 		ldr	r3, [r7, #208]
 304 01be 1B68     		ldr	r3, [r3, #0]
 305 01c0 C7F88430 		str	r3, [r7, #132]
 306              	.LBB144:
 307              	.LBB145:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 308              		.loc 2 352 0
 309 01c4 D7F88430 		ldr	r3, [r7, #132]
 310              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 311 01c8 1CBA     		rev r4, r3
 312              	@ 0 "" 2
 313              		.thumb
 314 01ca C7F88040 		str	r4, [r7, #128]
 315              		.loc 2 353 0
 316 01ce D7F88030 		ldr	r3, [r7, #128]
 317              	.LBE145:
 318              	.LBE144:
 319              		.loc 1 138 0
 320 01d2 7B63     		str	r3, [r7, #52]
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 321              		.loc 1 139 0
 322 01d4 76E0     		b	.L6
 323              	.L5:
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 324              		.loc 1 141 0
 325 01d6 4FF40073 		mov	r3, #512
 326 01da FB87     		strh	r3, [r7, #62]	@ movhi
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 327              		.loc 1 142 0
 328 01dc D7F8D030 		ldr	r3, [r7, #208]
 329 01e0 1B68     		ldr	r3, [r3, #0]
 330 01e2 FB67     		str	r3, [r7, #124]
 331              	.LBB146:
 332              	.LBB147:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 333              		.loc 2 352 0
 334 01e4 FB6F     		ldr	r3, [r7, #124]
 335              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 336 01e6 1CBA     		rev r4, r3
 337              	@ 0 "" 2
 338              		.thumb
 339 01e8 BC67     		str	r4, [r7, #120]
 340              		.loc 2 353 0
 341 01ea BB6F     		ldr	r3, [r7, #120]
 342              	.LBE147:
 343              	.LBE146:
 344              		.loc 1 142 0
 345 01ec BB61     		str	r3, [r7, #24]
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 346              		.loc 1 143 0
 347 01ee D7F8D030 		ldr	r3, [r7, #208]
 348 01f2 03F10403 		add	r3, r3, #4
 349 01f6 C7F8D030 		str	r3, [r7, #208]
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 350              		.loc 1 144 0
 351 01fa D7F8D030 		ldr	r3, [r7, #208]
 352 01fe 1B68     		ldr	r3, [r3, #0]
 353 0200 7B67     		str	r3, [r7, #116]
 354              	.LBB148:
 355              	.LBB149:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 356              		.loc 2 352 0
 357 0202 7B6F     		ldr	r3, [r7, #116]
 358              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 359 0204 1CBA     		rev r4, r3
 360              	@ 0 "" 2
 361              		.thumb
 362 0206 3C67     		str	r4, [r7, #112]
 363              		.loc 2 353 0
 364 0208 3B6F     		ldr	r3, [r7, #112]
 365              	.LBE149:
 366              	.LBE148:
 367              		.loc 1 144 0
 368 020a FB61     		str	r3, [r7, #28]
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 369              		.loc 1 145 0
 370 020c D7F8D030 		ldr	r3, [r7, #208]
 371 0210 03F10403 		add	r3, r3, #4
 372 0214 C7F8D030 		str	r3, [r7, #208]
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 373              		.loc 1 146 0
 374 0218 D7F8D030 		ldr	r3, [r7, #208]
 375 021c 1B68     		ldr	r3, [r3, #0]
 376 021e FB66     		str	r3, [r7, #108]
 377              	.LBB150:
 378              	.LBB151:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 379              		.loc 2 352 0
 380 0220 FB6E     		ldr	r3, [r7, #108]
 381              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 382 0222 1CBA     		rev r4, r3
 383              	@ 0 "" 2
 384              		.thumb
 385 0224 BC66     		str	r4, [r7, #104]
 386              		.loc 2 353 0
 387 0226 BB6E     		ldr	r3, [r7, #104]
 388              	.LBE151:
 389              	.LBE150:
 390              		.loc 1 146 0
 391 0228 3B62     		str	r3, [r7, #32]
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 392              		.loc 1 147 0
 393 022a D7F8D030 		ldr	r3, [r7, #208]
 394 022e 03F10403 		add	r3, r3, #4
 395 0232 C7F8D030 		str	r3, [r7, #208]
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 396              		.loc 1 148 0
 397 0236 D7F8D030 		ldr	r3, [r7, #208]
 398 023a 1B68     		ldr	r3, [r3, #0]
 399 023c 7B66     		str	r3, [r7, #100]
 400              	.LBB152:
 401              	.LBB153:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 402              		.loc 2 352 0
 403 023e 7B6E     		ldr	r3, [r7, #100]
 404              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 405 0240 1CBA     		rev r4, r3
 406              	@ 0 "" 2
 407              		.thumb
 408 0242 3C66     		str	r4, [r7, #96]
 409              		.loc 2 353 0
 410 0244 3B6E     		ldr	r3, [r7, #96]
 411              	.LBE153:
 412              	.LBE152:
 413              		.loc 1 148 0
 414 0246 7B62     		str	r3, [r7, #36]
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 415              		.loc 1 149 0
 416 0248 D7F8D030 		ldr	r3, [r7, #208]
 417 024c 03F10403 		add	r3, r3, #4
 418 0250 C7F8D030 		str	r3, [r7, #208]
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 419              		.loc 1 150 0
 420 0254 D7F8D030 		ldr	r3, [r7, #208]
 421 0258 1B68     		ldr	r3, [r3, #0]
 422 025a FB65     		str	r3, [r7, #92]
 423              	.LBB154:
 424              	.LBB155:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 425              		.loc 2 352 0
 426 025c FB6D     		ldr	r3, [r7, #92]
 427              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 428 025e 1CBA     		rev r4, r3
 429              	@ 0 "" 2
 430              		.thumb
 431 0260 BC65     		str	r4, [r7, #88]
 432              		.loc 2 353 0
 433 0262 BB6D     		ldr	r3, [r7, #88]
 434              	.LBE155:
 435              	.LBE154:
 436              		.loc 1 150 0
 437 0264 BB62     		str	r3, [r7, #40]
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 438              		.loc 1 151 0
 439 0266 D7F8D030 		ldr	r3, [r7, #208]
 440 026a 03F10403 		add	r3, r3, #4
 441 026e C7F8D030 		str	r3, [r7, #208]
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 442              		.loc 1 152 0
 443 0272 D7F8D030 		ldr	r3, [r7, #208]
 444 0276 1B68     		ldr	r3, [r3, #0]
 445 0278 7B65     		str	r3, [r7, #84]
 446              	.LBB156:
 447              	.LBB157:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 448              		.loc 2 352 0
 449 027a 7B6D     		ldr	r3, [r7, #84]
 450              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 451 027c 1CBA     		rev r4, r3
 452              	@ 0 "" 2
 453              		.thumb
 454 027e 3C65     		str	r4, [r7, #80]
 455              		.loc 2 353 0
 456 0280 3B6D     		ldr	r3, [r7, #80]
 457              	.LBE157:
 458              	.LBE156:
 459              		.loc 1 152 0
 460 0282 FB62     		str	r3, [r7, #44]
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 461              		.loc 1 153 0
 462 0284 D7F8D030 		ldr	r3, [r7, #208]
 463 0288 03F10403 		add	r3, r3, #4
 464 028c C7F8D030 		str	r3, [r7, #208]
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 465              		.loc 1 154 0
 466 0290 D7F8D030 		ldr	r3, [r7, #208]
 467 0294 1B68     		ldr	r3, [r3, #0]
 468 0296 FB64     		str	r3, [r7, #76]
 469              	.LBB158:
 470              	.LBB159:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 471              		.loc 2 352 0
 472 0298 FB6C     		ldr	r3, [r7, #76]
 473              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 474 029a 1CBA     		rev r4, r3
 475              	@ 0 "" 2
 476              		.thumb
 477 029c BC64     		str	r4, [r7, #72]
 478              		.loc 2 353 0
 479 029e BB6C     		ldr	r3, [r7, #72]
 480              	.LBE159:
 481              	.LBE158:
 482              		.loc 1 154 0
 483 02a0 3B63     		str	r3, [r7, #48]
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 484              		.loc 1 155 0
 485 02a2 D7F8D030 		ldr	r3, [r7, #208]
 486 02a6 03F10403 		add	r3, r3, #4
 487 02aa C7F8D030 		str	r3, [r7, #208]
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 488              		.loc 1 156 0
 489 02ae D7F8D030 		ldr	r3, [r7, #208]
 490 02b2 1B68     		ldr	r3, [r3, #0]
 491 02b4 7B64     		str	r3, [r7, #68]
 492              	.LBB160:
 493              	.LBB161:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 494              		.loc 2 352 0
 495 02b6 7B6C     		ldr	r3, [r7, #68]
 496              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 497 02b8 1CBA     		rev r4, r3
 498              	@ 0 "" 2
 499              		.thumb
 500 02ba 3C64     		str	r4, [r7, #64]
 501              		.loc 2 353 0
 502 02bc 3B6C     		ldr	r3, [r7, #64]
 503              	.LBE161:
 504              	.LBE160:
 505              		.loc 1 156 0
 506 02be 7B63     		str	r3, [r7, #52]
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 507              		.loc 1 157 0
 508 02c0 00E0     		b	.L6
 509              	.L19:
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 510              		.loc 1 159 0
 511 02c2 00BF     		nop
 512              	.L6:
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 513              		.loc 1 163 0
 514 02c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 515 02c6 002B     		cmp	r3, #0
 516 02c8 38D1     		bne	.L7
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 517              		.loc 1 166 0
 518 02ca FFF7FEFF 		bl	CRYP_FIFOFlush
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 519              		.loc 1 169 0
 520 02ce 4FF00403 		mov	r3, #4
 521 02d2 3B87     		strh	r3, [r7, #56]	@ movhi
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 522              		.loc 1 170 0
 523 02d4 4FF03803 		mov	r3, #56
 524 02d8 7B87     		strh	r3, [r7, #58]	@ movhi
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 525              		.loc 1 171 0
 526 02da 4FF00003 		mov	r3, #0
 527 02de BB87     		strh	r3, [r7, #60]	@ movhi
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 528              		.loc 1 172 0
 529 02e0 07F13803 		add	r3, r7, #56
 530 02e4 1846     		mov	r0, r3
 531 02e6 FFF7FEFF 		bl	CRYP_Init
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 532              		.loc 1 175 0
 533 02ea 07F11803 		add	r3, r7, #24
 534 02ee 1846     		mov	r0, r3
 535 02f0 FFF7FEFF 		bl	CRYP_KeyInit
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 536              		.loc 1 178 0
 537 02f4 4FF00100 		mov	r0, #1
 538 02f8 FFF7FEFF 		bl	CRYP_Cmd
 539              	.L9:
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 540              		.loc 1 183 0 discriminator 1
 541 02fc 4FF01000 		mov	r0, #16
 542 0300 FFF7FEFF 		bl	CRYP_GetFlagStatus
 543 0304 0346     		mov	r3, r0
 544 0306 C7F8D430 		str	r3, [r7, #212]
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 545              		.loc 1 184 0 discriminator 1
 546 030a 7B69     		ldr	r3, [r7, #20]
 547 030c 03F10103 		add	r3, r3, #1
 548 0310 7B61     		str	r3, [r7, #20]
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 549              		.loc 1 185 0 discriminator 1
 550 0312 7B69     		ldr	r3, [r7, #20]
 551 0314 B3F5803F 		cmp	r3, #65536
 552 0318 03D0     		beq	.L8
 553 031a D7F8D430 		ldr	r3, [r7, #212]
 554 031e 002B     		cmp	r3, #0
 555 0320 ECD1     		bne	.L9
 556              	.L8:
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 557              		.loc 1 187 0
 558 0322 D7F8D430 		ldr	r3, [r7, #212]
 559 0326 002B     		cmp	r3, #0
 560 0328 04D0     		beq	.L10
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 561              		.loc 1 189 0
 562 032a 4FF00003 		mov	r3, #0
 563 032e 87F8E730 		strb	r3, [r7, #231]
 564 0332 0BE0     		b	.L11
 565              	.L10:
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 566              		.loc 1 194 0
 567 0334 4FF00403 		mov	r3, #4
 568 0338 3B87     		strh	r3, [r7, #56]	@ movhi
 569 033a 07E0     		b	.L11
 570              	.L7:
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 571              		.loc 1 201 0
 572 033c 07F11803 		add	r3, r7, #24
 573 0340 1846     		mov	r0, r3
 574 0342 FFF7FEFF 		bl	CRYP_KeyInit
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 575              		.loc 1 204 0
 576 0346 4FF00003 		mov	r3, #0
 577 034a 3B87     		strh	r3, [r7, #56]	@ movhi
 578              	.L11:
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
 579              		.loc 1 207 0
 580 034c 4FF02003 		mov	r3, #32
 581 0350 7B87     		strh	r3, [r7, #58]	@ movhi
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 582              		.loc 1 208 0
 583 0352 4FF08003 		mov	r3, #128
 584 0356 BB87     		strh	r3, [r7, #60]	@ movhi
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 585              		.loc 1 209 0
 586 0358 07F13803 		add	r3, r7, #56
 587 035c 1846     		mov	r0, r3
 588 035e FFF7FEFF 		bl	CRYP_Init
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 589              		.loc 1 212 0
 590 0362 FFF7FEFF 		bl	CRYP_FIFOFlush
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 591              		.loc 1 215 0
 592 0366 4FF00100 		mov	r0, #1
 593 036a FFF7FEFF 		bl	CRYP_Cmd
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 594              		.loc 1 217 0
 595 036e 4FF00003 		mov	r3, #0
 596 0372 C7F8D830 		str	r3, [r7, #216]
 597 0376 84E0     		b	.L12
 598              	.L18:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 599              		.loc 1 221 0
 600 0378 D7F8E030 		ldr	r3, [r7, #224]
 601 037c 1B68     		ldr	r3, [r3, #0]
 602 037e 1846     		mov	r0, r3
 603 0380 FFF7FEFF 		bl	CRYP_DataIn
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 604              		.loc 1 222 0
 605 0384 D7F8E030 		ldr	r3, [r7, #224]
 606 0388 03F10403 		add	r3, r3, #4
 607 038c C7F8E030 		str	r3, [r7, #224]
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 608              		.loc 1 223 0
 609 0390 D7F8E030 		ldr	r3, [r7, #224]
 610 0394 1B68     		ldr	r3, [r3, #0]
 611 0396 1846     		mov	r0, r3
 612 0398 FFF7FEFF 		bl	CRYP_DataIn
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 613              		.loc 1 224 0
 614 039c D7F8E030 		ldr	r3, [r7, #224]
 615 03a0 03F10403 		add	r3, r3, #4
 616 03a4 C7F8E030 		str	r3, [r7, #224]
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 617              		.loc 1 225 0
 618 03a8 D7F8E030 		ldr	r3, [r7, #224]
 619 03ac 1B68     		ldr	r3, [r3, #0]
 620 03ae 1846     		mov	r0, r3
 621 03b0 FFF7FEFF 		bl	CRYP_DataIn
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 622              		.loc 1 226 0
 623 03b4 D7F8E030 		ldr	r3, [r7, #224]
 624 03b8 03F10403 		add	r3, r3, #4
 625 03bc C7F8E030 		str	r3, [r7, #224]
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 626              		.loc 1 227 0
 627 03c0 D7F8E030 		ldr	r3, [r7, #224]
 628 03c4 1B68     		ldr	r3, [r3, #0]
 629 03c6 1846     		mov	r0, r3
 630 03c8 FFF7FEFF 		bl	CRYP_DataIn
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 631              		.loc 1 228 0
 632 03cc D7F8E030 		ldr	r3, [r7, #224]
 633 03d0 03F10403 		add	r3, r3, #4
 634 03d4 C7F8E030 		str	r3, [r7, #224]
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 635              		.loc 1 231 0
 636 03d8 4FF00003 		mov	r3, #0
 637 03dc 7B61     		str	r3, [r7, #20]
 638              	.L14:
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 639              		.loc 1 234 0 discriminator 1
 640 03de 4FF01000 		mov	r0, #16
 641 03e2 FFF7FEFF 		bl	CRYP_GetFlagStatus
 642 03e6 0346     		mov	r3, r0
 643 03e8 C7F8D430 		str	r3, [r7, #212]
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 644              		.loc 1 235 0 discriminator 1
 645 03ec 7B69     		ldr	r3, [r7, #20]
 646 03ee 03F10103 		add	r3, r3, #1
 647 03f2 7B61     		str	r3, [r7, #20]
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 648              		.loc 1 236 0 discriminator 1
 649 03f4 7B69     		ldr	r3, [r7, #20]
 650 03f6 B3F5803F 		cmp	r3, #65536
 651 03fa 03D0     		beq	.L13
 652 03fc D7F8D430 		ldr	r3, [r7, #212]
 653 0400 002B     		cmp	r3, #0
 654 0402 ECD1     		bne	.L14
 655              	.L13:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 656              		.loc 1 238 0
 657 0404 D7F8D430 		ldr	r3, [r7, #212]
 658 0408 002B     		cmp	r3, #0
 659 040a 04D0     		beq	.L15
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 660              		.loc 1 240 0
 661 040c 4FF00003 		mov	r3, #0
 662 0410 87F8E730 		strb	r3, [r7, #231]
 663 0414 2FE0     		b	.L16
 664              	.L15:
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 665              		.loc 1 246 0
 666 0416 D7F8DC40 		ldr	r4, [r7, #220]
 667 041a FFF7FEFF 		bl	CRYP_DataOut
 668 041e 0346     		mov	r3, r0
 669 0420 2360     		str	r3, [r4, #0]
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 670              		.loc 1 247 0
 671 0422 D7F8DC30 		ldr	r3, [r7, #220]
 672 0426 03F10403 		add	r3, r3, #4
 673 042a C7F8DC30 		str	r3, [r7, #220]
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 674              		.loc 1 248 0
 675 042e D7F8DC40 		ldr	r4, [r7, #220]
 676 0432 FFF7FEFF 		bl	CRYP_DataOut
 677 0436 0346     		mov	r3, r0
 678 0438 2360     		str	r3, [r4, #0]
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 679              		.loc 1 249 0
 680 043a D7F8DC30 		ldr	r3, [r7, #220]
 681 043e 03F10403 		add	r3, r3, #4
 682 0442 C7F8DC30 		str	r3, [r7, #220]
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 683              		.loc 1 250 0
 684 0446 D7F8DC40 		ldr	r4, [r7, #220]
 685 044a FFF7FEFF 		bl	CRYP_DataOut
 686 044e 0346     		mov	r3, r0
 687 0450 2360     		str	r3, [r4, #0]
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 688              		.loc 1 251 0
 689 0452 D7F8DC30 		ldr	r3, [r7, #220]
 690 0456 03F10403 		add	r3, r3, #4
 691 045a C7F8DC30 		str	r3, [r7, #220]
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut(); 
 692              		.loc 1 252 0
 693 045e D7F8DC40 		ldr	r4, [r7, #220]
 694 0462 FFF7FEFF 		bl	CRYP_DataOut
 695 0466 0346     		mov	r3, r0
 696 0468 2360     		str	r3, [r4, #0]
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 697              		.loc 1 253 0
 698 046a D7F8DC30 		ldr	r3, [r7, #220]
 699 046e 03F10403 		add	r3, r3, #4
 700 0472 C7F8DC30 		str	r3, [r7, #220]
 701              	.L16:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 702              		.loc 1 217 0
 703 0476 D7F8D830 		ldr	r3, [r7, #216]
 704 047a 03F11003 		add	r3, r3, #16
 705 047e C7F8D830 		str	r3, [r7, #216]
 706              	.L12:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 707              		.loc 1 217 0 is_stmt 0 discriminator 1
 708 0482 D7F8D820 		ldr	r2, [r7, #216]
 709 0486 D7F8F830 		ldr	r3, [r7, #248]
 710 048a 9A42     		cmp	r2, r3
 711 048c 04D2     		bcs	.L17
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 712              		.loc 1 217 0 discriminator 2
 713 048e 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 714 0492 002B     		cmp	r3, #0
 715 0494 7FF470AF 		bne	.L18
 716              	.L17:
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 717              		.loc 1 258 0 is_stmt 1
 718 0498 4FF00000 		mov	r0, #0
 719 049c FFF7FEFF 		bl	CRYP_Cmd
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status; 
 720              		.loc 1 260 0
 721 04a0 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 722              		.loc 1 261 0
 723 04a4 1846     		mov	r0, r3
 724 04a6 07F1EC07 		add	r7, r7, #236
 725 04aa BD46     		mov	sp, r7
 726 04ac 90BD     		pop	{r4, r7, pc}
 727              		.cfi_endproc
 728              	.LFE110:
 730 04ae 00BF     		.section	.text.CRYP_AES_CBC,"ax",%progbits
 731              		.align	2
 732              		.global	CRYP_AES_CBC
 733              		.thumb
 734              		.thumb_func
 736              	CRYP_AES_CBC:
 737              	.LFB111:
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CBC Mode
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CBC(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key,
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
 738              		.loc 1 282 0
 739              		.cfi_startproc
 740              		@ args = 12, pretend = 0, frame = 280
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 90B5     		push	{r4, r7, lr}
 743              	.LCFI3:
 744              		.cfi_def_cfa_offset 12
 745 0002 C7B0     		sub	sp, sp, #284
 746              	.LCFI4:
 747              		.cfi_def_cfa_offset 296
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_offset 14, -4
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 4, -12
 752              	.LCFI5:
 753              		.cfi_def_cfa_register 7
 754 0006 07F10804 		add	r4, r7, #8
 755 000a 2160     		str	r1, [r4, #0]
 756 000c 07F10401 		add	r1, r7, #4
 757 0010 0A60     		str	r2, [r1, #0]
 758 0012 1A46     		mov	r2, r3
 759 0014 07F11003 		add	r3, r7, #16
 760 0018 03F1FF33 		add	r3, r3, #-1
 761 001c 0146     		mov	r1, r0
 762 001e 1970     		strb	r1, [r3, #0]
 763 0020 07F10203 		add	r3, r7, #2
 764 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 765              		.loc 1 286 0
 766 0026 07F11003 		add	r3, r7, #16
 767 002a 4FF00002 		mov	r2, #0
 768 002e 1A60     		str	r2, [r3, #0]
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 769              		.loc 1 287 0
 770 0030 4FF00003 		mov	r3, #0
 771 0034 C7F80431 		str	r3, [r7, #260]
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 772              		.loc 1 288 0
 773 0038 4FF00103 		mov	r3, #1
 774 003c 87F81731 		strb	r3, [r7, #279]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 775              		.loc 1 289 0
 776 0040 07F10403 		add	r3, r7, #4
 777 0044 1B68     		ldr	r3, [r3, #0]
 778 0046 C7F80031 		str	r3, [r7, #256]
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 779              		.loc 1 290 0
 780 004a D7F82831 		ldr	r3, [r7, #296]
 781 004e C7F81031 		str	r3, [r7, #272]
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 782              		.loc 1 291 0
 783 0052 D7F83031 		ldr	r3, [r7, #304]
 784 0056 C7F80C31 		str	r3, [r7, #268]
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 785              		.loc 1 292 0
 786 005a 07F10803 		add	r3, r7, #8
 787 005e 1B68     		ldr	r3, [r3, #0]
 788 0060 C7F8FC30 		str	r3, [r7, #252]
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 789              		.loc 1 293 0
 790 0064 4FF00003 		mov	r3, #0
 791 0068 C7F80831 		str	r3, [r7, #264]
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 792              		.loc 1 296 0
 793 006c 07F12403 		add	r3, r7, #36
 794 0070 1846     		mov	r0, r3
 795 0072 FFF7FEFF 		bl	CRYP_KeyStructInit
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 796              		.loc 1 298 0
 797 0076 07F10203 		add	r3, r7, #2
 798 007a 1B88     		ldrh	r3, [r3, #0]
 799 007c C02B     		cmp	r3, #192
 800 007e 51D0     		beq	.L23
 801 0080 B3F5807F 		cmp	r3, #256
 802 0084 00F0BF80 		beq	.L24
 803 0088 802B     		cmp	r3, #128
 804 008a 40F04981 		bne	.L38
 805              	.L22:
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 806              		.loc 1 301 0
 807 008e 4FF00003 		mov	r3, #0
 808 0092 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 809              		.loc 1 302 0
 810 0096 D7F80031 		ldr	r3, [r7, #256]
 811 009a 1B68     		ldr	r3, [r3, #0]
 812 009c C7F8F830 		str	r3, [r7, #248]
 813              	.LBB162:
 814              	.LBB163:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 815              		.loc 2 352 0
 816 00a0 D7F8F830 		ldr	r3, [r7, #248]
 817              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 818 00a4 1CBA     		rev r4, r3
 819              	@ 0 "" 2
 820              		.thumb
 821 00a6 C7F8F440 		str	r4, [r7, #244]
 822              		.loc 2 353 0
 823 00aa D7F8F430 		ldr	r3, [r7, #244]
 824              	.LBE163:
 825              	.LBE162:
 826              		.loc 1 302 0
 827 00ae 7B63     		str	r3, [r7, #52]
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 828              		.loc 1 303 0
 829 00b0 D7F80031 		ldr	r3, [r7, #256]
 830 00b4 03F10403 		add	r3, r3, #4
 831 00b8 C7F80031 		str	r3, [r7, #256]
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 832              		.loc 1 304 0
 833 00bc D7F80031 		ldr	r3, [r7, #256]
 834 00c0 1B68     		ldr	r3, [r3, #0]
 835 00c2 C7F8F030 		str	r3, [r7, #240]
 836              	.LBB164:
 837              	.LBB165:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 838              		.loc 2 352 0
 839 00c6 D7F8F030 		ldr	r3, [r7, #240]
 840              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 841 00ca 1CBA     		rev r4, r3
 842              	@ 0 "" 2
 843              		.thumb
 844 00cc C7F8EC40 		str	r4, [r7, #236]
 845              		.loc 2 353 0
 846 00d0 D7F8EC30 		ldr	r3, [r7, #236]
 847              	.LBE165:
 848              	.LBE164:
 849              		.loc 1 304 0
 850 00d4 BB63     		str	r3, [r7, #56]
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 851              		.loc 1 305 0
 852 00d6 D7F80031 		ldr	r3, [r7, #256]
 853 00da 03F10403 		add	r3, r3, #4
 854 00de C7F80031 		str	r3, [r7, #256]
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 855              		.loc 1 306 0
 856 00e2 D7F80031 		ldr	r3, [r7, #256]
 857 00e6 1B68     		ldr	r3, [r3, #0]
 858 00e8 C7F8E830 		str	r3, [r7, #232]
 859              	.LBB166:
 860              	.LBB167:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 861              		.loc 2 352 0
 862 00ec D7F8E830 		ldr	r3, [r7, #232]
 863              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 864 00f0 1CBA     		rev r4, r3
 865              	@ 0 "" 2
 866              		.thumb
 867 00f2 C7F8E440 		str	r4, [r7, #228]
 868              		.loc 2 353 0
 869 00f6 D7F8E430 		ldr	r3, [r7, #228]
 870              	.LBE167:
 871              	.LBE166:
 872              		.loc 1 306 0
 873 00fa FB63     		str	r3, [r7, #60]
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 874              		.loc 1 307 0
 875 00fc D7F80031 		ldr	r3, [r7, #256]
 876 0100 03F10403 		add	r3, r3, #4
 877 0104 C7F80031 		str	r3, [r7, #256]
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 878              		.loc 1 308 0
 879 0108 D7F80031 		ldr	r3, [r7, #256]
 880 010c 1B68     		ldr	r3, [r3, #0]
 881 010e C7F8E030 		str	r3, [r7, #224]
 882              	.LBB168:
 883              	.LBB169:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 884              		.loc 2 352 0
 885 0112 D7F8E030 		ldr	r3, [r7, #224]
 886              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 887 0116 1CBA     		rev r4, r3
 888              	@ 0 "" 2
 889              		.thumb
 890 0118 C7F8DC40 		str	r4, [r7, #220]
 891              		.loc 2 353 0
 892 011c D7F8DC30 		ldr	r3, [r7, #220]
 893              	.LBE169:
 894              	.LBE168:
 895              		.loc 1 308 0
 896 0120 3B64     		str	r3, [r7, #64]
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 897              		.loc 1 309 0
 898 0122 FEE0     		b	.L25
 899              	.L23:
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 900              		.loc 1 311 0
 901 0124 4FF48073 		mov	r3, #256
 902 0128 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 903              		.loc 1 312 0
 904 012c D7F80031 		ldr	r3, [r7, #256]
 905 0130 1B68     		ldr	r3, [r3, #0]
 906 0132 C7F8D830 		str	r3, [r7, #216]
 907              	.LBB170:
 908              	.LBB171:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 909              		.loc 2 352 0
 910 0136 D7F8D830 		ldr	r3, [r7, #216]
 911              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 912 013a 1CBA     		rev r4, r3
 913              	@ 0 "" 2
 914              		.thumb
 915 013c C7F8D440 		str	r4, [r7, #212]
 916              		.loc 2 353 0
 917 0140 D7F8D430 		ldr	r3, [r7, #212]
 918              	.LBE171:
 919              	.LBE170:
 920              		.loc 1 312 0
 921 0144 FB62     		str	r3, [r7, #44]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 922              		.loc 1 313 0
 923 0146 D7F80031 		ldr	r3, [r7, #256]
 924 014a 03F10403 		add	r3, r3, #4
 925 014e C7F80031 		str	r3, [r7, #256]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 926              		.loc 1 314 0
 927 0152 D7F80031 		ldr	r3, [r7, #256]
 928 0156 1B68     		ldr	r3, [r3, #0]
 929 0158 C7F8D030 		str	r3, [r7, #208]
 930              	.LBB172:
 931              	.LBB173:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 932              		.loc 2 352 0
 933 015c D7F8D030 		ldr	r3, [r7, #208]
 934              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 935 0160 1CBA     		rev r4, r3
 936              	@ 0 "" 2
 937              		.thumb
 938 0162 C7F8CC40 		str	r4, [r7, #204]
 939              		.loc 2 353 0
 940 0166 D7F8CC30 		ldr	r3, [r7, #204]
 941              	.LBE173:
 942              	.LBE172:
 943              		.loc 1 314 0
 944 016a 3B63     		str	r3, [r7, #48]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 945              		.loc 1 315 0
 946 016c D7F80031 		ldr	r3, [r7, #256]
 947 0170 03F10403 		add	r3, r3, #4
 948 0174 C7F80031 		str	r3, [r7, #256]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 949              		.loc 1 316 0
 950 0178 D7F80031 		ldr	r3, [r7, #256]
 951 017c 1B68     		ldr	r3, [r3, #0]
 952 017e C7F8C830 		str	r3, [r7, #200]
 953              	.LBB174:
 954              	.LBB175:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 955              		.loc 2 352 0
 956 0182 D7F8C830 		ldr	r3, [r7, #200]
 957              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 958 0186 1CBA     		rev r4, r3
 959              	@ 0 "" 2
 960              		.thumb
 961 0188 C7F8C440 		str	r4, [r7, #196]
 962              		.loc 2 353 0
 963 018c D7F8C430 		ldr	r3, [r7, #196]
 964              	.LBE175:
 965              	.LBE174:
 966              		.loc 1 316 0
 967 0190 7B63     		str	r3, [r7, #52]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 968              		.loc 1 317 0
 969 0192 D7F80031 		ldr	r3, [r7, #256]
 970 0196 03F10403 		add	r3, r3, #4
 971 019a C7F80031 		str	r3, [r7, #256]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 972              		.loc 1 318 0
 973 019e D7F80031 		ldr	r3, [r7, #256]
 974 01a2 1B68     		ldr	r3, [r3, #0]
 975 01a4 C7F8C030 		str	r3, [r7, #192]
 976              	.LBB176:
 977              	.LBB177:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 978              		.loc 2 352 0
 979 01a8 D7F8C030 		ldr	r3, [r7, #192]
 980              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 981 01ac 1CBA     		rev r4, r3
 982              	@ 0 "" 2
 983              		.thumb
 984 01ae C7F8BC40 		str	r4, [r7, #188]
 985              		.loc 2 353 0
 986 01b2 D7F8BC30 		ldr	r3, [r7, #188]
 987              	.LBE177:
 988              	.LBE176:
 989              		.loc 1 318 0
 990 01b6 BB63     		str	r3, [r7, #56]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 991              		.loc 1 319 0
 992 01b8 D7F80031 		ldr	r3, [r7, #256]
 993 01bc 03F10403 		add	r3, r3, #4
 994 01c0 C7F80031 		str	r3, [r7, #256]
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 995              		.loc 1 320 0
 996 01c4 D7F80031 		ldr	r3, [r7, #256]
 997 01c8 1B68     		ldr	r3, [r3, #0]
 998 01ca C7F8B830 		str	r3, [r7, #184]
 999              	.LBB178:
 1000              	.LBB179:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1001              		.loc 2 352 0
 1002 01ce D7F8B830 		ldr	r3, [r7, #184]
 1003              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1004 01d2 1CBA     		rev r4, r3
 1005              	@ 0 "" 2
 1006              		.thumb
 1007 01d4 C7F8B440 		str	r4, [r7, #180]
 1008              		.loc 2 353 0
 1009 01d8 D7F8B430 		ldr	r3, [r7, #180]
 1010              	.LBE179:
 1011              	.LBE178:
 1012              		.loc 1 320 0
 1013 01dc FB63     		str	r3, [r7, #60]
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1014              		.loc 1 321 0
 1015 01de D7F80031 		ldr	r3, [r7, #256]
 1016 01e2 03F10403 		add	r3, r3, #4
 1017 01e6 C7F80031 		str	r3, [r7, #256]
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1018              		.loc 1 322 0
 1019 01ea D7F80031 		ldr	r3, [r7, #256]
 1020 01ee 1B68     		ldr	r3, [r3, #0]
 1021 01f0 C7F8B030 		str	r3, [r7, #176]
 1022              	.LBB180:
 1023              	.LBB181:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1024              		.loc 2 352 0
 1025 01f4 D7F8B030 		ldr	r3, [r7, #176]
 1026              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1027 01f8 1CBA     		rev r4, r3
 1028              	@ 0 "" 2
 1029              		.thumb
 1030 01fa C7F8AC40 		str	r4, [r7, #172]
 1031              		.loc 2 353 0
 1032 01fe D7F8AC30 		ldr	r3, [r7, #172]
 1033              	.LBE181:
 1034              	.LBE180:
 1035              		.loc 1 322 0
 1036 0202 3B64     		str	r3, [r7, #64]
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1037              		.loc 1 323 0
 1038 0204 8DE0     		b	.L25
 1039              	.L24:
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 1040              		.loc 1 325 0
 1041 0206 4FF40073 		mov	r3, #512
 1042 020a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1043              		.loc 1 326 0
 1044 020e D7F80031 		ldr	r3, [r7, #256]
 1045 0212 1B68     		ldr	r3, [r3, #0]
 1046 0214 C7F8A830 		str	r3, [r7, #168]
 1047              	.LBB182:
 1048              	.LBB183:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1049              		.loc 2 352 0
 1050 0218 D7F8A830 		ldr	r3, [r7, #168]
 1051              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1052 021c 1CBA     		rev r4, r3
 1053              	@ 0 "" 2
 1054              		.thumb
 1055 021e C7F8A440 		str	r4, [r7, #164]
 1056              		.loc 2 353 0
 1057 0222 D7F8A430 		ldr	r3, [r7, #164]
 1058              	.LBE183:
 1059              	.LBE182:
 1060              		.loc 1 326 0
 1061 0226 7B62     		str	r3, [r7, #36]
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1062              		.loc 1 327 0
 1063 0228 D7F80031 		ldr	r3, [r7, #256]
 1064 022c 03F10403 		add	r3, r3, #4
 1065 0230 C7F80031 		str	r3, [r7, #256]
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 1066              		.loc 1 328 0
 1067 0234 D7F80031 		ldr	r3, [r7, #256]
 1068 0238 1B68     		ldr	r3, [r3, #0]
 1069 023a C7F8A030 		str	r3, [r7, #160]
 1070              	.LBB184:
 1071              	.LBB185:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1072              		.loc 2 352 0
 1073 023e D7F8A030 		ldr	r3, [r7, #160]
 1074              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1075 0242 1CBA     		rev r4, r3
 1076              	@ 0 "" 2
 1077              		.thumb
 1078 0244 C7F89C40 		str	r4, [r7, #156]
 1079              		.loc 2 353 0
 1080 0248 D7F89C30 		ldr	r3, [r7, #156]
 1081              	.LBE185:
 1082              	.LBE184:
 1083              		.loc 1 328 0
 1084 024c BB62     		str	r3, [r7, #40]
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1085              		.loc 1 329 0
 1086 024e D7F80031 		ldr	r3, [r7, #256]
 1087 0252 03F10403 		add	r3, r3, #4
 1088 0256 C7F80031 		str	r3, [r7, #256]
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1089              		.loc 1 330 0
 1090 025a D7F80031 		ldr	r3, [r7, #256]
 1091 025e 1B68     		ldr	r3, [r3, #0]
 1092 0260 C7F89830 		str	r3, [r7, #152]
 1093              	.LBB186:
 1094              	.LBB187:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1095              		.loc 2 352 0
 1096 0264 D7F89830 		ldr	r3, [r7, #152]
 1097              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1098 0268 1CBA     		rev r4, r3
 1099              	@ 0 "" 2
 1100              		.thumb
 1101 026a C7F89440 		str	r4, [r7, #148]
 1102              		.loc 2 353 0
 1103 026e D7F89430 		ldr	r3, [r7, #148]
 1104              	.LBE187:
 1105              	.LBE186:
 1106              		.loc 1 330 0
 1107 0272 FB62     		str	r3, [r7, #44]
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1108              		.loc 1 331 0
 1109 0274 D7F80031 		ldr	r3, [r7, #256]
 1110 0278 03F10403 		add	r3, r3, #4
 1111 027c C7F80031 		str	r3, [r7, #256]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1112              		.loc 1 332 0
 1113 0280 D7F80031 		ldr	r3, [r7, #256]
 1114 0284 1B68     		ldr	r3, [r3, #0]
 1115 0286 C7F89030 		str	r3, [r7, #144]
 1116              	.LBB188:
 1117              	.LBB189:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1118              		.loc 2 352 0
 1119 028a D7F89030 		ldr	r3, [r7, #144]
 1120              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1121 028e 1CBA     		rev r4, r3
 1122              	@ 0 "" 2
 1123              		.thumb
 1124 0290 C7F88C40 		str	r4, [r7, #140]
 1125              		.loc 2 353 0
 1126 0294 D7F88C30 		ldr	r3, [r7, #140]
 1127              	.LBE189:
 1128              	.LBE188:
 1129              		.loc 1 332 0
 1130 0298 3B63     		str	r3, [r7, #48]
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1131              		.loc 1 333 0
 1132 029a D7F80031 		ldr	r3, [r7, #256]
 1133 029e 03F10403 		add	r3, r3, #4
 1134 02a2 C7F80031 		str	r3, [r7, #256]
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1135              		.loc 1 334 0
 1136 02a6 D7F80031 		ldr	r3, [r7, #256]
 1137 02aa 1B68     		ldr	r3, [r3, #0]
 1138 02ac C7F88830 		str	r3, [r7, #136]
 1139              	.LBB190:
 1140              	.LBB191:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1141              		.loc 2 352 0
 1142 02b0 D7F88830 		ldr	r3, [r7, #136]
 1143              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1144 02b4 1CBA     		rev r4, r3
 1145              	@ 0 "" 2
 1146              		.thumb
 1147 02b6 C7F88440 		str	r4, [r7, #132]
 1148              		.loc 2 353 0
 1149 02ba D7F88430 		ldr	r3, [r7, #132]
 1150              	.LBE191:
 1151              	.LBE190:
 1152              		.loc 1 334 0
 1153 02be 7B63     		str	r3, [r7, #52]
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1154              		.loc 1 335 0
 1155 02c0 D7F80031 		ldr	r3, [r7, #256]
 1156 02c4 03F10403 		add	r3, r3, #4
 1157 02c8 C7F80031 		str	r3, [r7, #256]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1158              		.loc 1 336 0
 1159 02cc D7F80031 		ldr	r3, [r7, #256]
 1160 02d0 1B68     		ldr	r3, [r3, #0]
 1161 02d2 C7F88030 		str	r3, [r7, #128]
 1162              	.LBB192:
 1163              	.LBB193:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1164              		.loc 2 352 0
 1165 02d6 D7F88030 		ldr	r3, [r7, #128]
 1166              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1167 02da 1CBA     		rev r4, r3
 1168              	@ 0 "" 2
 1169              		.thumb
 1170 02dc FC67     		str	r4, [r7, #124]
 1171              		.loc 2 353 0
 1172 02de FB6F     		ldr	r3, [r7, #124]
 1173              	.LBE193:
 1174              	.LBE192:
 1175              		.loc 1 336 0
 1176 02e0 BB63     		str	r3, [r7, #56]
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1177              		.loc 1 337 0
 1178 02e2 D7F80031 		ldr	r3, [r7, #256]
 1179 02e6 03F10403 		add	r3, r3, #4
 1180 02ea C7F80031 		str	r3, [r7, #256]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1181              		.loc 1 338 0
 1182 02ee D7F80031 		ldr	r3, [r7, #256]
 1183 02f2 1B68     		ldr	r3, [r3, #0]
 1184 02f4 BB67     		str	r3, [r7, #120]
 1185              	.LBB194:
 1186              	.LBB195:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1187              		.loc 2 352 0
 1188 02f6 BB6F     		ldr	r3, [r7, #120]
 1189              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1190 02f8 1CBA     		rev r4, r3
 1191              	@ 0 "" 2
 1192              		.thumb
 1193 02fa 7C67     		str	r4, [r7, #116]
 1194              		.loc 2 353 0
 1195 02fc 7B6F     		ldr	r3, [r7, #116]
 1196              	.LBE195:
 1197              	.LBE194:
 1198              		.loc 1 338 0
 1199 02fe FB63     		str	r3, [r7, #60]
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1200              		.loc 1 339 0
 1201 0300 D7F80031 		ldr	r3, [r7, #256]
 1202 0304 03F10403 		add	r3, r3, #4
 1203 0308 C7F80031 		str	r3, [r7, #256]
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1204              		.loc 1 340 0
 1205 030c D7F80031 		ldr	r3, [r7, #256]
 1206 0310 1B68     		ldr	r3, [r3, #0]
 1207 0312 3B67     		str	r3, [r7, #112]
 1208              	.LBB196:
 1209              	.LBB197:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1210              		.loc 2 352 0
 1211 0314 3B6F     		ldr	r3, [r7, #112]
 1212              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1213 0316 1CBA     		rev r4, r3
 1214              	@ 0 "" 2
 1215              		.thumb
 1216 0318 FC66     		str	r4, [r7, #108]
 1217              		.loc 2 353 0
 1218 031a FB6E     		ldr	r3, [r7, #108]
 1219              	.LBE197:
 1220              	.LBE196:
 1221              		.loc 1 340 0
 1222 031c 3B64     		str	r3, [r7, #64]
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1223              		.loc 1 341 0
 1224 031e 00E0     		b	.L25
 1225              	.L38:
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1226              		.loc 1 343 0
 1227 0320 00BF     		nop
 1228              	.L25:
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1229              		.loc 1 347 0
 1230 0322 D7F8FC30 		ldr	r3, [r7, #252]
 1231 0326 1B68     		ldr	r3, [r3, #0]
 1232 0328 BB66     		str	r3, [r7, #104]
 1233              	.LBB198:
 1234              	.LBB199:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1235              		.loc 2 352 0
 1236 032a BB6E     		ldr	r3, [r7, #104]
 1237              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1238 032c 1CBA     		rev r4, r3
 1239              	@ 0 "" 2
 1240              		.thumb
 1241 032e 7C66     		str	r4, [r7, #100]
 1242              		.loc 2 353 0
 1243 0330 7B6E     		ldr	r3, [r7, #100]
 1244              		.loc 1 347 0
 1245 0332 1A46     		mov	r2, r3
 1246              	.LBE199:
 1247              	.LBE198:
 1248 0334 07F11403 		add	r3, r7, #20
 1249 0338 1A60     		str	r2, [r3, #0]
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1250              		.loc 1 348 0
 1251 033a D7F8FC30 		ldr	r3, [r7, #252]
 1252 033e 03F10403 		add	r3, r3, #4
 1253 0342 C7F8FC30 		str	r3, [r7, #252]
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1254              		.loc 1 349 0
 1255 0346 D7F8FC30 		ldr	r3, [r7, #252]
 1256 034a 1B68     		ldr	r3, [r3, #0]
 1257 034c 3B66     		str	r3, [r7, #96]
 1258              	.LBB200:
 1259              	.LBB201:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1260              		.loc 2 352 0
 1261 034e 3B6E     		ldr	r3, [r7, #96]
 1262              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1263 0350 1CBA     		rev r4, r3
 1264              	@ 0 "" 2
 1265              		.thumb
 1266 0352 FC65     		str	r4, [r7, #92]
 1267              		.loc 2 353 0
 1268 0354 FB6D     		ldr	r3, [r7, #92]
 1269              		.loc 1 349 0
 1270 0356 1A46     		mov	r2, r3
 1271              	.LBE201:
 1272              	.LBE200:
 1273 0358 07F11403 		add	r3, r7, #20
 1274 035c 5A60     		str	r2, [r3, #4]
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1275              		.loc 1 350 0
 1276 035e D7F8FC30 		ldr	r3, [r7, #252]
 1277 0362 03F10403 		add	r3, r3, #4
 1278 0366 C7F8FC30 		str	r3, [r7, #252]
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1279              		.loc 1 351 0
 1280 036a D7F8FC30 		ldr	r3, [r7, #252]
 1281 036e 1B68     		ldr	r3, [r3, #0]
 1282 0370 BB65     		str	r3, [r7, #88]
 1283              	.LBB202:
 1284              	.LBB203:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1285              		.loc 2 352 0
 1286 0372 BB6D     		ldr	r3, [r7, #88]
 1287              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1288 0374 1CBA     		rev r4, r3
 1289              	@ 0 "" 2
 1290              		.thumb
 1291 0376 7C65     		str	r4, [r7, #84]
 1292              		.loc 2 353 0
 1293 0378 7B6D     		ldr	r3, [r7, #84]
 1294              		.loc 1 351 0
 1295 037a 1A46     		mov	r2, r3
 1296              	.LBE203:
 1297              	.LBE202:
 1298 037c 07F11403 		add	r3, r7, #20
 1299 0380 9A60     		str	r2, [r3, #8]
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1300              		.loc 1 352 0
 1301 0382 D7F8FC30 		ldr	r3, [r7, #252]
 1302 0386 03F10403 		add	r3, r3, #4
 1303 038a C7F8FC30 		str	r3, [r7, #252]
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1304              		.loc 1 353 0
 1305 038e D7F8FC30 		ldr	r3, [r7, #252]
 1306 0392 1B68     		ldr	r3, [r3, #0]
 1307 0394 3B65     		str	r3, [r7, #80]
 1308              	.LBB204:
 1309              	.LBB205:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1310              		.loc 2 352 0
 1311 0396 3B6D     		ldr	r3, [r7, #80]
 1312              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1313 0398 1CBA     		rev r4, r3
 1314              	@ 0 "" 2
 1315              		.thumb
 1316 039a FC64     		str	r4, [r7, #76]
 1317              		.loc 2 353 0
 1318 039c FB6C     		ldr	r3, [r7, #76]
 1319              		.loc 1 353 0
 1320 039e 1A46     		mov	r2, r3
 1321              	.LBE205:
 1322              	.LBE204:
 1323 03a0 07F11403 		add	r3, r7, #20
 1324 03a4 DA60     		str	r2, [r3, #12]
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 1325              		.loc 1 357 0
 1326 03a6 07F11003 		add	r3, r7, #16
 1327 03aa 03F1FF33 		add	r3, r3, #-1
 1328 03ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1329 03b0 002B     		cmp	r3, #0
 1330 03b2 42D1     		bne	.L26
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 1331              		.loc 1 360 0
 1332 03b4 FFF7FEFF 		bl	CRYP_FIFOFlush
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1333              		.loc 1 363 0
 1334 03b8 4FF00403 		mov	r3, #4
 1335 03bc A7F84430 		strh	r3, [r7, #68]	@ movhi
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 1336              		.loc 1 364 0
 1337 03c0 4FF03803 		mov	r3, #56
 1338 03c4 A7F84630 		strh	r3, [r7, #70]	@ movhi
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 1339              		.loc 1 365 0
 1340 03c8 4FF00003 		mov	r3, #0
 1341 03cc A7F84830 		strh	r3, [r7, #72]	@ movhi
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 1342              		.loc 1 367 0
 1343 03d0 07F14403 		add	r3, r7, #68
 1344 03d4 1846     		mov	r0, r3
 1345 03d6 FFF7FEFF 		bl	CRYP_Init
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1346              		.loc 1 370 0
 1347 03da 07F12403 		add	r3, r7, #36
 1348 03de 1846     		mov	r0, r3
 1349 03e0 FFF7FEFF 		bl	CRYP_KeyInit
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 1350              		.loc 1 373 0
 1351 03e4 4FF00100 		mov	r0, #1
 1352 03e8 FFF7FEFF 		bl	CRYP_Cmd
 1353              	.L28:
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1354              		.loc 1 378 0 discriminator 1
 1355 03ec 4FF01000 		mov	r0, #16
 1356 03f0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1357 03f4 0346     		mov	r3, r0
 1358 03f6 C7F80431 		str	r3, [r7, #260]
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 1359              		.loc 1 379 0 discriminator 1
 1360 03fa 07F11003 		add	r3, r7, #16
 1361 03fe 1B68     		ldr	r3, [r3, #0]
 1362 0400 03F10102 		add	r2, r3, #1
 1363 0404 07F11003 		add	r3, r7, #16
 1364 0408 1A60     		str	r2, [r3, #0]
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1365              		.loc 1 380 0 discriminator 1
 1366 040a 07F11003 		add	r3, r7, #16
 1367 040e 1B68     		ldr	r3, [r3, #0]
 1368 0410 B3F5803F 		cmp	r3, #65536
 1369 0414 03D0     		beq	.L27
 1370 0416 D7F80431 		ldr	r3, [r7, #260]
 1371 041a 002B     		cmp	r3, #0
 1372 041c E6D1     		bne	.L28
 1373              	.L27:
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1374              		.loc 1 382 0
 1375 041e D7F80431 		ldr	r3, [r7, #260]
 1376 0422 002B     		cmp	r3, #0
 1377 0424 04D0     		beq	.L29
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1378              		.loc 1 384 0
 1379 0426 4FF00003 		mov	r3, #0
 1380 042a 87F81731 		strb	r3, [r7, #279]
 1381 042e 0DE0     		b	.L30
 1382              	.L29:
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1383              		.loc 1 389 0
 1384 0430 4FF00403 		mov	r3, #4
 1385 0434 A7F84430 		strh	r3, [r7, #68]	@ movhi
 1386 0438 08E0     		b	.L30
 1387              	.L26:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1388              		.loc 1 395 0
 1389 043a 07F12403 		add	r3, r7, #36
 1390 043e 1846     		mov	r0, r3
 1391 0440 FFF7FEFF 		bl	CRYP_KeyInit
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 1392              		.loc 1 398 0
 1393 0444 4FF00003 		mov	r3, #0
 1394 0448 A7F84430 		strh	r3, [r7, #68]	@ movhi
 1395              	.L30:
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CBC;
 1396              		.loc 1 400 0
 1397 044c 4FF02803 		mov	r3, #40
 1398 0450 A7F84630 		strh	r3, [r7, #70]	@ movhi
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1399              		.loc 1 401 0
 1400 0454 4FF08003 		mov	r3, #128
 1401 0458 A7F84830 		strh	r3, [r7, #72]	@ movhi
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 1402              		.loc 1 402 0
 1403 045c 07F14403 		add	r3, r7, #68
 1404 0460 1846     		mov	r0, r3
 1405 0462 FFF7FEFF 		bl	CRYP_Init
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1406              		.loc 1 405 0
 1407 0466 07F11403 		add	r3, r7, #20
 1408 046a 1846     		mov	r0, r3
 1409 046c FFF7FEFF 		bl	CRYP_IVInit
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 1410              		.loc 1 408 0
 1411 0470 FFF7FEFF 		bl	CRYP_FIFOFlush
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 1412              		.loc 1 411 0
 1413 0474 4FF00100 		mov	r0, #1
 1414 0478 FFF7FEFF 		bl	CRYP_Cmd
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1415              		.loc 1 414 0
 1416 047c 4FF00003 		mov	r3, #0
 1417 0480 C7F80831 		str	r3, [r7, #264]
 1418 0484 8CE0     		b	.L31
 1419              	.L37:
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1420              		.loc 1 418 0
 1421 0486 D7F81031 		ldr	r3, [r7, #272]
 1422 048a 1B68     		ldr	r3, [r3, #0]
 1423 048c 1846     		mov	r0, r3
 1424 048e FFF7FEFF 		bl	CRYP_DataIn
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1425              		.loc 1 419 0
 1426 0492 D7F81031 		ldr	r3, [r7, #272]
 1427 0496 03F10403 		add	r3, r3, #4
 1428 049a C7F81031 		str	r3, [r7, #272]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1429              		.loc 1 420 0
 1430 049e D7F81031 		ldr	r3, [r7, #272]
 1431 04a2 1B68     		ldr	r3, [r3, #0]
 1432 04a4 1846     		mov	r0, r3
 1433 04a6 FFF7FEFF 		bl	CRYP_DataIn
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1434              		.loc 1 421 0
 1435 04aa D7F81031 		ldr	r3, [r7, #272]
 1436 04ae 03F10403 		add	r3, r3, #4
 1437 04b2 C7F81031 		str	r3, [r7, #272]
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1438              		.loc 1 422 0
 1439 04b6 D7F81031 		ldr	r3, [r7, #272]
 1440 04ba 1B68     		ldr	r3, [r3, #0]
 1441 04bc 1846     		mov	r0, r3
 1442 04be FFF7FEFF 		bl	CRYP_DataIn
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1443              		.loc 1 423 0
 1444 04c2 D7F81031 		ldr	r3, [r7, #272]
 1445 04c6 03F10403 		add	r3, r3, #4
 1446 04ca C7F81031 		str	r3, [r7, #272]
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1447              		.loc 1 424 0
 1448 04ce D7F81031 		ldr	r3, [r7, #272]
 1449 04d2 1B68     		ldr	r3, [r3, #0]
 1450 04d4 1846     		mov	r0, r3
 1451 04d6 FFF7FEFF 		bl	CRYP_DataIn
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1452              		.loc 1 425 0
 1453 04da D7F81031 		ldr	r3, [r7, #272]
 1454 04de 03F10403 		add	r3, r3, #4
 1455 04e2 C7F81031 		str	r3, [r7, #272]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 1456              		.loc 1 427 0
 1457 04e6 07F11003 		add	r3, r7, #16
 1458 04ea 4FF00002 		mov	r2, #0
 1459 04ee 1A60     		str	r2, [r3, #0]
 1460              	.L33:
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1461              		.loc 1 430 0 discriminator 1
 1462 04f0 4FF01000 		mov	r0, #16
 1463 04f4 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1464 04f8 0346     		mov	r3, r0
 1465 04fa C7F80431 		str	r3, [r7, #260]
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 1466              		.loc 1 431 0 discriminator 1
 1467 04fe 07F11003 		add	r3, r7, #16
 1468 0502 1B68     		ldr	r3, [r3, #0]
 1469 0504 03F10102 		add	r2, r3, #1
 1470 0508 07F11003 		add	r3, r7, #16
 1471 050c 1A60     		str	r2, [r3, #0]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1472              		.loc 1 432 0 discriminator 1
 1473 050e 07F11003 		add	r3, r7, #16
 1474 0512 1B68     		ldr	r3, [r3, #0]
 1475 0514 B3F5803F 		cmp	r3, #65536
 1476 0518 03D0     		beq	.L32
 1477 051a D7F80431 		ldr	r3, [r7, #260]
 1478 051e 002B     		cmp	r3, #0
 1479 0520 E6D1     		bne	.L33
 1480              	.L32:
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1481              		.loc 1 434 0
 1482 0522 D7F80431 		ldr	r3, [r7, #260]
 1483 0526 002B     		cmp	r3, #0
 1484 0528 04D0     		beq	.L34
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1485              		.loc 1 436 0
 1486 052a 4FF00003 		mov	r3, #0
 1487 052e 87F81731 		strb	r3, [r7, #279]
 1488 0532 2FE0     		b	.L35
 1489              	.L34:
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1490              		.loc 1 442 0
 1491 0534 D7F80C41 		ldr	r4, [r7, #268]
 1492 0538 FFF7FEFF 		bl	CRYP_DataOut
 1493 053c 0346     		mov	r3, r0
 1494 053e 2360     		str	r3, [r4, #0]
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1495              		.loc 1 443 0
 1496 0540 D7F80C31 		ldr	r3, [r7, #268]
 1497 0544 03F10403 		add	r3, r3, #4
 1498 0548 C7F80C31 		str	r3, [r7, #268]
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1499              		.loc 1 444 0
 1500 054c D7F80C41 		ldr	r4, [r7, #268]
 1501 0550 FFF7FEFF 		bl	CRYP_DataOut
 1502 0554 0346     		mov	r3, r0
 1503 0556 2360     		str	r3, [r4, #0]
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1504              		.loc 1 445 0
 1505 0558 D7F80C31 		ldr	r3, [r7, #268]
 1506 055c 03F10403 		add	r3, r3, #4
 1507 0560 C7F80C31 		str	r3, [r7, #268]
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1508              		.loc 1 446 0
 1509 0564 D7F80C41 		ldr	r4, [r7, #268]
 1510 0568 FFF7FEFF 		bl	CRYP_DataOut
 1511 056c 0346     		mov	r3, r0
 1512 056e 2360     		str	r3, [r4, #0]
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1513              		.loc 1 447 0
 1514 0570 D7F80C31 		ldr	r3, [r7, #268]
 1515 0574 03F10403 		add	r3, r3, #4
 1516 0578 C7F80C31 		str	r3, [r7, #268]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1517              		.loc 1 448 0
 1518 057c D7F80C41 		ldr	r4, [r7, #268]
 1519 0580 FFF7FEFF 		bl	CRYP_DataOut
 1520 0584 0346     		mov	r3, r0
 1521 0586 2360     		str	r3, [r4, #0]
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1522              		.loc 1 449 0
 1523 0588 D7F80C31 		ldr	r3, [r7, #268]
 1524 058c 03F10403 		add	r3, r3, #4
 1525 0590 C7F80C31 		str	r3, [r7, #268]
 1526              	.L35:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1527              		.loc 1 414 0
 1528 0594 D7F80831 		ldr	r3, [r7, #264]
 1529 0598 03F11003 		add	r3, r3, #16
 1530 059c C7F80831 		str	r3, [r7, #264]
 1531              	.L31:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1532              		.loc 1 414 0 is_stmt 0 discriminator 1
 1533 05a0 D7F80821 		ldr	r2, [r7, #264]
 1534 05a4 D7F82C31 		ldr	r3, [r7, #300]
 1535 05a8 9A42     		cmp	r2, r3
 1536 05aa 04D2     		bcs	.L36
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1537              		.loc 1 414 0 discriminator 2
 1538 05ac 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1539 05b0 002B     		cmp	r3, #0
 1540 05b2 7FF468AF 		bne	.L37
 1541              	.L36:
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1542              		.loc 1 454 0 is_stmt 1
 1543 05b6 4FF00000 		mov	r0, #0
 1544 05ba FFF7FEFF 		bl	CRYP_Cmd
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status;
 1545              		.loc 1 456 0
 1546 05be 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 1547              		.loc 1 457 0
 1548 05c2 1846     		mov	r0, r3
 1549 05c4 07F58E77 		add	r7, r7, #284
 1550 05c8 BD46     		mov	sp, r7
 1551 05ca 90BD     		pop	{r4, r7, pc}
 1552              		.cfi_endproc
 1553              	.LFE111:
 1555              		.section	.text.CRYP_AES_CTR,"ax",%progbits
 1556              		.align	2
 1557              		.global	CRYP_AES_CTR
 1558              		.thumb
 1559              		.thumb_func
 1561              	CRYP_AES_CTR:
 1562              	.LFB112:
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CTR Mode
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *           This parameter can be one of the following values:
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CTR(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key, 
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
 1563              		.loc 1 478 0
 1564              		.cfi_startproc
 1565              		@ args = 12, pretend = 0, frame = 280
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567 0000 90B5     		push	{r4, r7, lr}
 1568              	.LCFI6:
 1569              		.cfi_def_cfa_offset 12
 1570 0002 C7B0     		sub	sp, sp, #284
 1571              	.LCFI7:
 1572              		.cfi_def_cfa_offset 296
 1573 0004 00AF     		add	r7, sp, #0
 1574              		.cfi_offset 14, -4
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 4, -12
 1577              	.LCFI8:
 1578              		.cfi_def_cfa_register 7
 1579 0006 07F10804 		add	r4, r7, #8
 1580 000a 2160     		str	r1, [r4, #0]
 1581 000c 07F10401 		add	r1, r7, #4
 1582 0010 0A60     		str	r2, [r1, #0]
 1583 0012 1A46     		mov	r2, r3
 1584 0014 07F11003 		add	r3, r7, #16
 1585 0018 03F1FF33 		add	r3, r3, #-1
 1586 001c 0146     		mov	r1, r0
 1587 001e 1970     		strb	r1, [r3, #0]
 1588 0020 07F10203 		add	r3, r7, #2
 1589 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1590              		.loc 1 482 0
 1591 0026 07F11003 		add	r3, r7, #16
 1592 002a 4FF00002 		mov	r2, #0
 1593 002e 1A60     		str	r2, [r3, #0]
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 1594              		.loc 1 483 0
 1595 0030 4FF00003 		mov	r3, #0
 1596 0034 C7F80431 		str	r3, [r7, #260]
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 1597              		.loc 1 484 0
 1598 0038 4FF00103 		mov	r3, #1
 1599 003c 87F81731 		strb	r3, [r7, #279]
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 1600              		.loc 1 485 0
 1601 0040 07F10403 		add	r3, r7, #4
 1602 0044 1B68     		ldr	r3, [r3, #0]
 1603 0046 C7F80031 		str	r3, [r7, #256]
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1604              		.loc 1 486 0
 1605 004a D7F82831 		ldr	r3, [r7, #296]
 1606 004e C7F81031 		str	r3, [r7, #272]
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1607              		.loc 1 487 0
 1608 0052 D7F83031 		ldr	r3, [r7, #304]
 1609 0056 C7F80C31 		str	r3, [r7, #268]
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 1610              		.loc 1 488 0
 1611 005a 07F10803 		add	r3, r7, #8
 1612 005e 1B68     		ldr	r3, [r3, #0]
 1613 0060 C7F8FC30 		str	r3, [r7, #252]
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 1614              		.loc 1 489 0
 1615 0064 4FF00003 		mov	r3, #0
 1616 0068 C7F80831 		str	r3, [r7, #264]
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1617              		.loc 1 492 0
 1618 006c 07F12403 		add	r3, r7, #36
 1619 0070 1846     		mov	r0, r3
 1620 0072 FFF7FEFF 		bl	CRYP_KeyStructInit
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1621              		.loc 1 494 0
 1622 0076 07F10203 		add	r3, r7, #2
 1623 007a 1B88     		ldrh	r3, [r3, #0]
 1624 007c C02B     		cmp	r3, #192
 1625 007e 51D0     		beq	.L42
 1626 0080 B3F5807F 		cmp	r3, #256
 1627 0084 00F0BF80 		beq	.L43
 1628 0088 802B     		cmp	r3, #128
 1629 008a 40F04981 		bne	.L54
 1630              	.L41:
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 1631              		.loc 1 497 0
 1632 008e 4FF00003 		mov	r3, #0
 1633 0092 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1634              		.loc 1 498 0
 1635 0096 D7F80031 		ldr	r3, [r7, #256]
 1636 009a 1B68     		ldr	r3, [r3, #0]
 1637 009c C7F8F830 		str	r3, [r7, #248]
 1638              	.LBB206:
 1639              	.LBB207:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1640              		.loc 2 352 0
 1641 00a0 D7F8F830 		ldr	r3, [r7, #248]
 1642              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1643 00a4 1CBA     		rev r4, r3
 1644              	@ 0 "" 2
 1645              		.thumb
 1646 00a6 C7F8F440 		str	r4, [r7, #244]
 1647              		.loc 2 353 0
 1648 00aa D7F8F430 		ldr	r3, [r7, #244]
 1649              	.LBE207:
 1650              	.LBE206:
 1651              		.loc 1 498 0
 1652 00ae 7B63     		str	r3, [r7, #52]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1653              		.loc 1 499 0
 1654 00b0 D7F80031 		ldr	r3, [r7, #256]
 1655 00b4 03F10403 		add	r3, r3, #4
 1656 00b8 C7F80031 		str	r3, [r7, #256]
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1657              		.loc 1 500 0
 1658 00bc D7F80031 		ldr	r3, [r7, #256]
 1659 00c0 1B68     		ldr	r3, [r3, #0]
 1660 00c2 C7F8F030 		str	r3, [r7, #240]
 1661              	.LBB208:
 1662              	.LBB209:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1663              		.loc 2 352 0
 1664 00c6 D7F8F030 		ldr	r3, [r7, #240]
 1665              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1666 00ca 1CBA     		rev r4, r3
 1667              	@ 0 "" 2
 1668              		.thumb
 1669 00cc C7F8EC40 		str	r4, [r7, #236]
 1670              		.loc 2 353 0
 1671 00d0 D7F8EC30 		ldr	r3, [r7, #236]
 1672              	.LBE209:
 1673              	.LBE208:
 1674              		.loc 1 500 0
 1675 00d4 BB63     		str	r3, [r7, #56]
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1676              		.loc 1 501 0
 1677 00d6 D7F80031 		ldr	r3, [r7, #256]
 1678 00da 03F10403 		add	r3, r3, #4
 1679 00de C7F80031 		str	r3, [r7, #256]
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1680              		.loc 1 502 0
 1681 00e2 D7F80031 		ldr	r3, [r7, #256]
 1682 00e6 1B68     		ldr	r3, [r3, #0]
 1683 00e8 C7F8E830 		str	r3, [r7, #232]
 1684              	.LBB210:
 1685              	.LBB211:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1686              		.loc 2 352 0
 1687 00ec D7F8E830 		ldr	r3, [r7, #232]
 1688              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1689 00f0 1CBA     		rev r4, r3
 1690              	@ 0 "" 2
 1691              		.thumb
 1692 00f2 C7F8E440 		str	r4, [r7, #228]
 1693              		.loc 2 353 0
 1694 00f6 D7F8E430 		ldr	r3, [r7, #228]
 1695              	.LBE211:
 1696              	.LBE210:
 1697              		.loc 1 502 0
 1698 00fa FB63     		str	r3, [r7, #60]
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1699              		.loc 1 503 0
 1700 00fc D7F80031 		ldr	r3, [r7, #256]
 1701 0100 03F10403 		add	r3, r3, #4
 1702 0104 C7F80031 		str	r3, [r7, #256]
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1703              		.loc 1 504 0
 1704 0108 D7F80031 		ldr	r3, [r7, #256]
 1705 010c 1B68     		ldr	r3, [r3, #0]
 1706 010e C7F8E030 		str	r3, [r7, #224]
 1707              	.LBB212:
 1708              	.LBB213:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1709              		.loc 2 352 0
 1710 0112 D7F8E030 		ldr	r3, [r7, #224]
 1711              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1712 0116 1CBA     		rev r4, r3
 1713              	@ 0 "" 2
 1714              		.thumb
 1715 0118 C7F8DC40 		str	r4, [r7, #220]
 1716              		.loc 2 353 0
 1717 011c D7F8DC30 		ldr	r3, [r7, #220]
 1718              	.LBE213:
 1719              	.LBE212:
 1720              		.loc 1 504 0
 1721 0120 3B64     		str	r3, [r7, #64]
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1722              		.loc 1 505 0
 1723 0122 FEE0     		b	.L44
 1724              	.L42:
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 1725              		.loc 1 507 0
 1726 0124 4FF48073 		mov	r3, #256
 1727 0128 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1728              		.loc 1 508 0
 1729 012c D7F80031 		ldr	r3, [r7, #256]
 1730 0130 1B68     		ldr	r3, [r3, #0]
 1731 0132 C7F8D830 		str	r3, [r7, #216]
 1732              	.LBB214:
 1733              	.LBB215:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1734              		.loc 2 352 0
 1735 0136 D7F8D830 		ldr	r3, [r7, #216]
 1736              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1737 013a 1CBA     		rev r4, r3
 1738              	@ 0 "" 2
 1739              		.thumb
 1740 013c C7F8D440 		str	r4, [r7, #212]
 1741              		.loc 2 353 0
 1742 0140 D7F8D430 		ldr	r3, [r7, #212]
 1743              	.LBE215:
 1744              	.LBE214:
 1745              		.loc 1 508 0
 1746 0144 FB62     		str	r3, [r7, #44]
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1747              		.loc 1 509 0
 1748 0146 D7F80031 		ldr	r3, [r7, #256]
 1749 014a 03F10403 		add	r3, r3, #4
 1750 014e C7F80031 		str	r3, [r7, #256]
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1751              		.loc 1 510 0
 1752 0152 D7F80031 		ldr	r3, [r7, #256]
 1753 0156 1B68     		ldr	r3, [r3, #0]
 1754 0158 C7F8D030 		str	r3, [r7, #208]
 1755              	.LBB216:
 1756              	.LBB217:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1757              		.loc 2 352 0
 1758 015c D7F8D030 		ldr	r3, [r7, #208]
 1759              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1760 0160 1CBA     		rev r4, r3
 1761              	@ 0 "" 2
 1762              		.thumb
 1763 0162 C7F8CC40 		str	r4, [r7, #204]
 1764              		.loc 2 353 0
 1765 0166 D7F8CC30 		ldr	r3, [r7, #204]
 1766              	.LBE217:
 1767              	.LBE216:
 1768              		.loc 1 510 0
 1769 016a 3B63     		str	r3, [r7, #48]
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1770              		.loc 1 511 0
 1771 016c D7F80031 		ldr	r3, [r7, #256]
 1772 0170 03F10403 		add	r3, r3, #4
 1773 0174 C7F80031 		str	r3, [r7, #256]
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1774              		.loc 1 512 0
 1775 0178 D7F80031 		ldr	r3, [r7, #256]
 1776 017c 1B68     		ldr	r3, [r3, #0]
 1777 017e C7F8C830 		str	r3, [r7, #200]
 1778              	.LBB218:
 1779              	.LBB219:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1780              		.loc 2 352 0
 1781 0182 D7F8C830 		ldr	r3, [r7, #200]
 1782              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1783 0186 1CBA     		rev r4, r3
 1784              	@ 0 "" 2
 1785              		.thumb
 1786 0188 C7F8C440 		str	r4, [r7, #196]
 1787              		.loc 2 353 0
 1788 018c D7F8C430 		ldr	r3, [r7, #196]
 1789              	.LBE219:
 1790              	.LBE218:
 1791              		.loc 1 512 0
 1792 0190 7B63     		str	r3, [r7, #52]
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1793              		.loc 1 513 0
 1794 0192 D7F80031 		ldr	r3, [r7, #256]
 1795 0196 03F10403 		add	r3, r3, #4
 1796 019a C7F80031 		str	r3, [r7, #256]
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1797              		.loc 1 514 0
 1798 019e D7F80031 		ldr	r3, [r7, #256]
 1799 01a2 1B68     		ldr	r3, [r3, #0]
 1800 01a4 C7F8C030 		str	r3, [r7, #192]
 1801              	.LBB220:
 1802              	.LBB221:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1803              		.loc 2 352 0
 1804 01a8 D7F8C030 		ldr	r3, [r7, #192]
 1805              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1806 01ac 1CBA     		rev r4, r3
 1807              	@ 0 "" 2
 1808              		.thumb
 1809 01ae C7F8BC40 		str	r4, [r7, #188]
 1810              		.loc 2 353 0
 1811 01b2 D7F8BC30 		ldr	r3, [r7, #188]
 1812              	.LBE221:
 1813              	.LBE220:
 1814              		.loc 1 514 0
 1815 01b6 BB63     		str	r3, [r7, #56]
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1816              		.loc 1 515 0
 1817 01b8 D7F80031 		ldr	r3, [r7, #256]
 1818 01bc 03F10403 		add	r3, r3, #4
 1819 01c0 C7F80031 		str	r3, [r7, #256]
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1820              		.loc 1 516 0
 1821 01c4 D7F80031 		ldr	r3, [r7, #256]
 1822 01c8 1B68     		ldr	r3, [r3, #0]
 1823 01ca C7F8B830 		str	r3, [r7, #184]
 1824              	.LBB222:
 1825              	.LBB223:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1826              		.loc 2 352 0
 1827 01ce D7F8B830 		ldr	r3, [r7, #184]
 1828              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1829 01d2 1CBA     		rev r4, r3
 1830              	@ 0 "" 2
 1831              		.thumb
 1832 01d4 C7F8B440 		str	r4, [r7, #180]
 1833              		.loc 2 353 0
 1834 01d8 D7F8B430 		ldr	r3, [r7, #180]
 1835              	.LBE223:
 1836              	.LBE222:
 1837              		.loc 1 516 0
 1838 01dc FB63     		str	r3, [r7, #60]
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1839              		.loc 1 517 0
 1840 01de D7F80031 		ldr	r3, [r7, #256]
 1841 01e2 03F10403 		add	r3, r3, #4
 1842 01e6 C7F80031 		str	r3, [r7, #256]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1843              		.loc 1 518 0
 1844 01ea D7F80031 		ldr	r3, [r7, #256]
 1845 01ee 1B68     		ldr	r3, [r3, #0]
 1846 01f0 C7F8B030 		str	r3, [r7, #176]
 1847              	.LBB224:
 1848              	.LBB225:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1849              		.loc 2 352 0
 1850 01f4 D7F8B030 		ldr	r3, [r7, #176]
 1851              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1852 01f8 1CBA     		rev r4, r3
 1853              	@ 0 "" 2
 1854              		.thumb
 1855 01fa C7F8AC40 		str	r4, [r7, #172]
 1856              		.loc 2 353 0
 1857 01fe D7F8AC30 		ldr	r3, [r7, #172]
 1858              	.LBE225:
 1859              	.LBE224:
 1860              		.loc 1 518 0
 1861 0202 3B64     		str	r3, [r7, #64]
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1862              		.loc 1 519 0
 1863 0204 8DE0     		b	.L44
 1864              	.L43:
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 1865              		.loc 1 521 0
 1866 0206 4FF40073 		mov	r3, #512
 1867 020a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1868              		.loc 1 522 0
 1869 020e D7F80031 		ldr	r3, [r7, #256]
 1870 0212 1B68     		ldr	r3, [r3, #0]
 1871 0214 C7F8A830 		str	r3, [r7, #168]
 1872              	.LBB226:
 1873              	.LBB227:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1874              		.loc 2 352 0
 1875 0218 D7F8A830 		ldr	r3, [r7, #168]
 1876              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1877 021c 1CBA     		rev r4, r3
 1878              	@ 0 "" 2
 1879              		.thumb
 1880 021e C7F8A440 		str	r4, [r7, #164]
 1881              		.loc 2 353 0
 1882 0222 D7F8A430 		ldr	r3, [r7, #164]
 1883              	.LBE227:
 1884              	.LBE226:
 1885              		.loc 1 522 0
 1886 0226 7B62     		str	r3, [r7, #36]
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1887              		.loc 1 523 0
 1888 0228 D7F80031 		ldr	r3, [r7, #256]
 1889 022c 03F10403 		add	r3, r3, #4
 1890 0230 C7F80031 		str	r3, [r7, #256]
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 1891              		.loc 1 524 0
 1892 0234 D7F80031 		ldr	r3, [r7, #256]
 1893 0238 1B68     		ldr	r3, [r3, #0]
 1894 023a C7F8A030 		str	r3, [r7, #160]
 1895              	.LBB228:
 1896              	.LBB229:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1897              		.loc 2 352 0
 1898 023e D7F8A030 		ldr	r3, [r7, #160]
 1899              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1900 0242 1CBA     		rev r4, r3
 1901              	@ 0 "" 2
 1902              		.thumb
 1903 0244 C7F89C40 		str	r4, [r7, #156]
 1904              		.loc 2 353 0
 1905 0248 D7F89C30 		ldr	r3, [r7, #156]
 1906              	.LBE229:
 1907              	.LBE228:
 1908              		.loc 1 524 0
 1909 024c BB62     		str	r3, [r7, #40]
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1910              		.loc 1 525 0
 1911 024e D7F80031 		ldr	r3, [r7, #256]
 1912 0252 03F10403 		add	r3, r3, #4
 1913 0256 C7F80031 		str	r3, [r7, #256]
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1914              		.loc 1 526 0
 1915 025a D7F80031 		ldr	r3, [r7, #256]
 1916 025e 1B68     		ldr	r3, [r3, #0]
 1917 0260 C7F89830 		str	r3, [r7, #152]
 1918              	.LBB230:
 1919              	.LBB231:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1920              		.loc 2 352 0
 1921 0264 D7F89830 		ldr	r3, [r7, #152]
 1922              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1923 0268 1CBA     		rev r4, r3
 1924              	@ 0 "" 2
 1925              		.thumb
 1926 026a C7F89440 		str	r4, [r7, #148]
 1927              		.loc 2 353 0
 1928 026e D7F89430 		ldr	r3, [r7, #148]
 1929              	.LBE231:
 1930              	.LBE230:
 1931              		.loc 1 526 0
 1932 0272 FB62     		str	r3, [r7, #44]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1933              		.loc 1 527 0
 1934 0274 D7F80031 		ldr	r3, [r7, #256]
 1935 0278 03F10403 		add	r3, r3, #4
 1936 027c C7F80031 		str	r3, [r7, #256]
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1937              		.loc 1 528 0
 1938 0280 D7F80031 		ldr	r3, [r7, #256]
 1939 0284 1B68     		ldr	r3, [r3, #0]
 1940 0286 C7F89030 		str	r3, [r7, #144]
 1941              	.LBB232:
 1942              	.LBB233:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1943              		.loc 2 352 0
 1944 028a D7F89030 		ldr	r3, [r7, #144]
 1945              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1946 028e 1CBA     		rev r4, r3
 1947              	@ 0 "" 2
 1948              		.thumb
 1949 0290 C7F88C40 		str	r4, [r7, #140]
 1950              		.loc 2 353 0
 1951 0294 D7F88C30 		ldr	r3, [r7, #140]
 1952              	.LBE233:
 1953              	.LBE232:
 1954              		.loc 1 528 0
 1955 0298 3B63     		str	r3, [r7, #48]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1956              		.loc 1 529 0
 1957 029a D7F80031 		ldr	r3, [r7, #256]
 1958 029e 03F10403 		add	r3, r3, #4
 1959 02a2 C7F80031 		str	r3, [r7, #256]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1960              		.loc 1 530 0
 1961 02a6 D7F80031 		ldr	r3, [r7, #256]
 1962 02aa 1B68     		ldr	r3, [r3, #0]
 1963 02ac C7F88830 		str	r3, [r7, #136]
 1964              	.LBB234:
 1965              	.LBB235:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1966              		.loc 2 352 0
 1967 02b0 D7F88830 		ldr	r3, [r7, #136]
 1968              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1969 02b4 1CBA     		rev r4, r3
 1970              	@ 0 "" 2
 1971              		.thumb
 1972 02b6 C7F88440 		str	r4, [r7, #132]
 1973              		.loc 2 353 0
 1974 02ba D7F88430 		ldr	r3, [r7, #132]
 1975              	.LBE235:
 1976              	.LBE234:
 1977              		.loc 1 530 0
 1978 02be 7B63     		str	r3, [r7, #52]
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1979              		.loc 1 531 0
 1980 02c0 D7F80031 		ldr	r3, [r7, #256]
 1981 02c4 03F10403 		add	r3, r3, #4
 1982 02c8 C7F80031 		str	r3, [r7, #256]
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1983              		.loc 1 532 0
 1984 02cc D7F80031 		ldr	r3, [r7, #256]
 1985 02d0 1B68     		ldr	r3, [r3, #0]
 1986 02d2 C7F88030 		str	r3, [r7, #128]
 1987              	.LBB236:
 1988              	.LBB237:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1989              		.loc 2 352 0
 1990 02d6 D7F88030 		ldr	r3, [r7, #128]
 1991              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1992 02da 1CBA     		rev r4, r3
 1993              	@ 0 "" 2
 1994              		.thumb
 1995 02dc FC67     		str	r4, [r7, #124]
 1996              		.loc 2 353 0
 1997 02de FB6F     		ldr	r3, [r7, #124]
 1998              	.LBE237:
 1999              	.LBE236:
 2000              		.loc 1 532 0
 2001 02e0 BB63     		str	r3, [r7, #56]
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2002              		.loc 1 533 0
 2003 02e2 D7F80031 		ldr	r3, [r7, #256]
 2004 02e6 03F10403 		add	r3, r3, #4
 2005 02ea C7F80031 		str	r3, [r7, #256]
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 2006              		.loc 1 534 0
 2007 02ee D7F80031 		ldr	r3, [r7, #256]
 2008 02f2 1B68     		ldr	r3, [r3, #0]
 2009 02f4 BB67     		str	r3, [r7, #120]
 2010              	.LBB238:
 2011              	.LBB239:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2012              		.loc 2 352 0
 2013 02f6 BB6F     		ldr	r3, [r7, #120]
 2014              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2015 02f8 1CBA     		rev r4, r3
 2016              	@ 0 "" 2
 2017              		.thumb
 2018 02fa 7C67     		str	r4, [r7, #116]
 2019              		.loc 2 353 0
 2020 02fc 7B6F     		ldr	r3, [r7, #116]
 2021              	.LBE239:
 2022              	.LBE238:
 2023              		.loc 1 534 0
 2024 02fe FB63     		str	r3, [r7, #60]
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2025              		.loc 1 535 0
 2026 0300 D7F80031 		ldr	r3, [r7, #256]
 2027 0304 03F10403 		add	r3, r3, #4
 2028 0308 C7F80031 		str	r3, [r7, #256]
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 2029              		.loc 1 536 0
 2030 030c D7F80031 		ldr	r3, [r7, #256]
 2031 0310 1B68     		ldr	r3, [r3, #0]
 2032 0312 3B67     		str	r3, [r7, #112]
 2033              	.LBB240:
 2034              	.LBB241:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2035              		.loc 2 352 0
 2036 0314 3B6F     		ldr	r3, [r7, #112]
 2037              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2038 0316 1CBA     		rev r4, r3
 2039              	@ 0 "" 2
 2040              		.thumb
 2041 0318 FC66     		str	r4, [r7, #108]
 2042              		.loc 2 353 0
 2043 031a FB6E     		ldr	r3, [r7, #108]
 2044              	.LBE241:
 2045              	.LBE240:
 2046              		.loc 1 536 0
 2047 031c 3B64     		str	r3, [r7, #64]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 2048              		.loc 1 537 0
 2049 031e 00E0     		b	.L44
 2050              	.L54:
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 2051              		.loc 1 539 0
 2052 0320 00BF     		nop
 2053              	.L44:
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 2054              		.loc 1 542 0
 2055 0322 D7F8FC30 		ldr	r3, [r7, #252]
 2056 0326 1B68     		ldr	r3, [r3, #0]
 2057 0328 BB66     		str	r3, [r7, #104]
 2058              	.LBB242:
 2059              	.LBB243:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2060              		.loc 2 352 0
 2061 032a BB6E     		ldr	r3, [r7, #104]
 2062              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2063 032c 1CBA     		rev r4, r3
 2064              	@ 0 "" 2
 2065              		.thumb
 2066 032e 7C66     		str	r4, [r7, #100]
 2067              		.loc 2 353 0
 2068 0330 7B6E     		ldr	r3, [r7, #100]
 2069              		.loc 1 542 0
 2070 0332 1A46     		mov	r2, r3
 2071              	.LBE243:
 2072              	.LBE242:
 2073 0334 07F11403 		add	r3, r7, #20
 2074 0338 1A60     		str	r2, [r3, #0]
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2075              		.loc 1 543 0
 2076 033a D7F8FC30 		ldr	r3, [r7, #252]
 2077 033e 03F10403 		add	r3, r3, #4
 2078 0342 C7F8FC30 		str	r3, [r7, #252]
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 2079              		.loc 1 544 0
 2080 0346 D7F8FC30 		ldr	r3, [r7, #252]
 2081 034a 1B68     		ldr	r3, [r3, #0]
 2082 034c 3B66     		str	r3, [r7, #96]
 2083              	.LBB244:
 2084              	.LBB245:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2085              		.loc 2 352 0
 2086 034e 3B6E     		ldr	r3, [r7, #96]
 2087              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2088 0350 1CBA     		rev r4, r3
 2089              	@ 0 "" 2
 2090              		.thumb
 2091 0352 FC65     		str	r4, [r7, #92]
 2092              		.loc 2 353 0
 2093 0354 FB6D     		ldr	r3, [r7, #92]
 2094              		.loc 1 544 0
 2095 0356 1A46     		mov	r2, r3
 2096              	.LBE245:
 2097              	.LBE244:
 2098 0358 07F11403 		add	r3, r7, #20
 2099 035c 5A60     		str	r2, [r3, #4]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2100              		.loc 1 545 0
 2101 035e D7F8FC30 		ldr	r3, [r7, #252]
 2102 0362 03F10403 		add	r3, r3, #4
 2103 0366 C7F8FC30 		str	r3, [r7, #252]
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 2104              		.loc 1 546 0
 2105 036a D7F8FC30 		ldr	r3, [r7, #252]
 2106 036e 1B68     		ldr	r3, [r3, #0]
 2107 0370 BB65     		str	r3, [r7, #88]
 2108              	.LBB246:
 2109              	.LBB247:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2110              		.loc 2 352 0
 2111 0372 BB6D     		ldr	r3, [r7, #88]
 2112              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2113 0374 1CBA     		rev r4, r3
 2114              	@ 0 "" 2
 2115              		.thumb
 2116 0376 7C65     		str	r4, [r7, #84]
 2117              		.loc 2 353 0
 2118 0378 7B6D     		ldr	r3, [r7, #84]
 2119              		.loc 1 546 0
 2120 037a 1A46     		mov	r2, r3
 2121              	.LBE247:
 2122              	.LBE246:
 2123 037c 07F11403 		add	r3, r7, #20
 2124 0380 9A60     		str	r2, [r3, #8]
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2125              		.loc 1 547 0
 2126 0382 D7F8FC30 		ldr	r3, [r7, #252]
 2127 0386 03F10403 		add	r3, r3, #4
 2128 038a C7F8FC30 		str	r3, [r7, #252]
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 2129              		.loc 1 548 0
 2130 038e D7F8FC30 		ldr	r3, [r7, #252]
 2131 0392 1B68     		ldr	r3, [r3, #0]
 2132 0394 3B65     		str	r3, [r7, #80]
 2133              	.LBB248:
 2134              	.LBB249:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2135              		.loc 2 352 0
 2136 0396 3B6D     		ldr	r3, [r7, #80]
 2137              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2138 0398 1CBA     		rev r4, r3
 2139              	@ 0 "" 2
 2140              		.thumb
 2141 039a FC64     		str	r4, [r7, #76]
 2142              		.loc 2 353 0
 2143 039c FB6C     		ldr	r3, [r7, #76]
 2144              		.loc 1 548 0
 2145 039e 1A46     		mov	r2, r3
 2146              	.LBE249:
 2147              	.LBE248:
 2148 03a0 07F11403 		add	r3, r7, #20
 2149 03a4 DA60     		str	r2, [r3, #12]
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Key Initialisation */
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 2150              		.loc 1 551 0
 2151 03a6 07F12403 		add	r3, r7, #36
 2152 03aa 1846     		mov	r0, r3
 2153 03ac FFF7FEFF 		bl	CRYP_KeyInit
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 2154              		.loc 1 554 0
 2155 03b0 07F11003 		add	r3, r7, #16
 2156 03b4 03F1FF33 		add	r3, r3, #-1
 2157 03b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2158 03ba 002B     		cmp	r3, #0
 2159 03bc 04D1     		bne	.L45
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for decryption process */
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 2160              		.loc 1 557 0
 2161 03be 4FF00403 		mov	r3, #4
 2162 03c2 A7F84430 		strh	r3, [r7, #68]	@ movhi
 2163 03c6 03E0     		b	.L46
 2164              	.L45:
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 2165              		.loc 1 563 0
 2166 03c8 4FF00003 		mov	r3, #0
 2167 03cc A7F84430 		strh	r3, [r7, #68]	@ movhi
 2168              	.L46:
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CTR;
 2169              		.loc 1 565 0
 2170 03d0 4FF03003 		mov	r3, #48
 2171 03d4 A7F84630 		strh	r3, [r7, #70]	@ movhi
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 2172              		.loc 1 566 0
 2173 03d8 4FF08003 		mov	r3, #128
 2174 03dc A7F84830 		strh	r3, [r7, #72]	@ movhi
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 2175              		.loc 1 567 0
 2176 03e0 07F14403 		add	r3, r7, #68
 2177 03e4 1846     		mov	r0, r3
 2178 03e6 FFF7FEFF 		bl	CRYP_Init
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 2179              		.loc 1 570 0
 2180 03ea 07F11403 		add	r3, r7, #20
 2181 03ee 1846     		mov	r0, r3
 2182 03f0 FFF7FEFF 		bl	CRYP_IVInit
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 2183              		.loc 1 573 0
 2184 03f4 FFF7FEFF 		bl	CRYP_FIFOFlush
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 2185              		.loc 1 576 0
 2186 03f8 4FF00100 		mov	r0, #1
 2187 03fc FFF7FEFF 		bl	CRYP_Cmd
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2188              		.loc 1 578 0
 2189 0400 4FF00003 		mov	r3, #0
 2190 0404 C7F80831 		str	r3, [r7, #264]
 2191 0408 8CE0     		b	.L47
 2192              	.L53:
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2193              		.loc 1 582 0
 2194 040a D7F81031 		ldr	r3, [r7, #272]
 2195 040e 1B68     		ldr	r3, [r3, #0]
 2196 0410 1846     		mov	r0, r3
 2197 0412 FFF7FEFF 		bl	CRYP_DataIn
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2198              		.loc 1 583 0
 2199 0416 D7F81031 		ldr	r3, [r7, #272]
 2200 041a 03F10403 		add	r3, r3, #4
 2201 041e C7F81031 		str	r3, [r7, #272]
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2202              		.loc 1 584 0
 2203 0422 D7F81031 		ldr	r3, [r7, #272]
 2204 0426 1B68     		ldr	r3, [r3, #0]
 2205 0428 1846     		mov	r0, r3
 2206 042a FFF7FEFF 		bl	CRYP_DataIn
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2207              		.loc 1 585 0
 2208 042e D7F81031 		ldr	r3, [r7, #272]
 2209 0432 03F10403 		add	r3, r3, #4
 2210 0436 C7F81031 		str	r3, [r7, #272]
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2211              		.loc 1 586 0
 2212 043a D7F81031 		ldr	r3, [r7, #272]
 2213 043e 1B68     		ldr	r3, [r3, #0]
 2214 0440 1846     		mov	r0, r3
 2215 0442 FFF7FEFF 		bl	CRYP_DataIn
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2216              		.loc 1 587 0
 2217 0446 D7F81031 		ldr	r3, [r7, #272]
 2218 044a 03F10403 		add	r3, r3, #4
 2219 044e C7F81031 		str	r3, [r7, #272]
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2220              		.loc 1 588 0
 2221 0452 D7F81031 		ldr	r3, [r7, #272]
 2222 0456 1B68     		ldr	r3, [r3, #0]
 2223 0458 1846     		mov	r0, r3
 2224 045a FFF7FEFF 		bl	CRYP_DataIn
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2225              		.loc 1 589 0
 2226 045e D7F81031 		ldr	r3, [r7, #272]
 2227 0462 03F10403 		add	r3, r3, #4
 2228 0466 C7F81031 		str	r3, [r7, #272]
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 2229              		.loc 1 591 0
 2230 046a 07F11003 		add	r3, r7, #16
 2231 046e 4FF00002 		mov	r2, #0
 2232 0472 1A60     		str	r2, [r3, #0]
 2233              	.L49:
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 2234              		.loc 1 594 0 discriminator 1
 2235 0474 4FF01000 		mov	r0, #16
 2236 0478 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2237 047c 0346     		mov	r3, r0
 2238 047e C7F80431 		str	r3, [r7, #260]
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 2239              		.loc 1 595 0 discriminator 1
 2240 0482 07F11003 		add	r3, r7, #16
 2241 0486 1B68     		ldr	r3, [r3, #0]
 2242 0488 03F10102 		add	r2, r3, #1
 2243 048c 07F11003 		add	r3, r7, #16
 2244 0490 1A60     		str	r2, [r3, #0]
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2245              		.loc 1 596 0 discriminator 1
 2246 0492 07F11003 		add	r3, r7, #16
 2247 0496 1B68     		ldr	r3, [r3, #0]
 2248 0498 B3F5803F 		cmp	r3, #65536
 2249 049c 03D0     		beq	.L48
 2250 049e D7F80431 		ldr	r3, [r7, #260]
 2251 04a2 002B     		cmp	r3, #0
 2252 04a4 E6D1     		bne	.L49
 2253              	.L48:
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 2254              		.loc 1 598 0
 2255 04a6 D7F80431 		ldr	r3, [r7, #260]
 2256 04aa 002B     		cmp	r3, #0
 2257 04ac 04D0     		beq	.L50
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 2258              		.loc 1 600 0
 2259 04ae 4FF00003 		mov	r3, #0
 2260 04b2 87F81731 		strb	r3, [r7, #279]
 2261 04b6 2FE0     		b	.L51
 2262              	.L50:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2263              		.loc 1 606 0
 2264 04b8 D7F80C41 		ldr	r4, [r7, #268]
 2265 04bc FFF7FEFF 		bl	CRYP_DataOut
 2266 04c0 0346     		mov	r3, r0
 2267 04c2 2360     		str	r3, [r4, #0]
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2268              		.loc 1 607 0
 2269 04c4 D7F80C31 		ldr	r3, [r7, #268]
 2270 04c8 03F10403 		add	r3, r3, #4
 2271 04cc C7F80C31 		str	r3, [r7, #268]
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2272              		.loc 1 608 0
 2273 04d0 D7F80C41 		ldr	r4, [r7, #268]
 2274 04d4 FFF7FEFF 		bl	CRYP_DataOut
 2275 04d8 0346     		mov	r3, r0
 2276 04da 2360     		str	r3, [r4, #0]
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2277              		.loc 1 609 0
 2278 04dc D7F80C31 		ldr	r3, [r7, #268]
 2279 04e0 03F10403 		add	r3, r3, #4
 2280 04e4 C7F80C31 		str	r3, [r7, #268]
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2281              		.loc 1 610 0
 2282 04e8 D7F80C41 		ldr	r4, [r7, #268]
 2283 04ec FFF7FEFF 		bl	CRYP_DataOut
 2284 04f0 0346     		mov	r3, r0
 2285 04f2 2360     		str	r3, [r4, #0]
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2286              		.loc 1 611 0
 2287 04f4 D7F80C31 		ldr	r3, [r7, #268]
 2288 04f8 03F10403 		add	r3, r3, #4
 2289 04fc C7F80C31 		str	r3, [r7, #268]
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2290              		.loc 1 612 0
 2291 0500 D7F80C41 		ldr	r4, [r7, #268]
 2292 0504 FFF7FEFF 		bl	CRYP_DataOut
 2293 0508 0346     		mov	r3, r0
 2294 050a 2360     		str	r3, [r4, #0]
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2295              		.loc 1 613 0
 2296 050c D7F80C31 		ldr	r3, [r7, #268]
 2297 0510 03F10403 		add	r3, r3, #4
 2298 0514 C7F80C31 		str	r3, [r7, #268]
 2299              	.L51:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2300              		.loc 1 578 0
 2301 0518 D7F80831 		ldr	r3, [r7, #264]
 2302 051c 03F11003 		add	r3, r3, #16
 2303 0520 C7F80831 		str	r3, [r7, #264]
 2304              	.L47:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2305              		.loc 1 578 0 is_stmt 0 discriminator 1
 2306 0524 D7F80821 		ldr	r2, [r7, #264]
 2307 0528 D7F82C31 		ldr	r3, [r7, #300]
 2308 052c 9A42     		cmp	r2, r3
 2309 052e 04D2     		bcs	.L52
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2310              		.loc 1 578 0 discriminator 2
 2311 0530 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 2312 0534 002B     		cmp	r3, #0
 2313 0536 7FF468AF 		bne	.L53
 2314              	.L52:
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 2315              		.loc 1 617 0 is_stmt 1
 2316 053a 4FF00000 		mov	r0, #0
 2317 053e FFF7FEFF 		bl	CRYP_Cmd
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status;
 2318              		.loc 1 619 0
 2319 0542 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 2320              		.loc 1 620 0
 2321 0546 1846     		mov	r0, r3
 2322 0548 07F58E77 		add	r7, r7, #284
 2323 054c BD46     		mov	sp, r7
 2324 054e 90BD     		pop	{r4, r7, pc}
 2325              		.cfi_endproc
 2326              	.LFE112:
 2328              		.text
 2329              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp_aes.c
     /tmp/cckz56if.s:25     .text.CRYP_AES_ECB:00000000 $t
     /tmp/cckz56if.s:30     .text.CRYP_AES_ECB:00000000 CRYP_AES_ECB
     /tmp/cckz56if.s:731    .text.CRYP_AES_CBC:00000000 $t
     /tmp/cckz56if.s:736    .text.CRYP_AES_CBC:00000000 CRYP_AES_CBC
     /tmp/cckz56if.s:1556   .text.CRYP_AES_CTR:00000000 $t
     /tmp/cckz56if.s:1561   .text.CRYP_AES_CTR:00000000 CRYP_AES_CTR
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_FIFOFlush
CRYP_Init
CRYP_KeyInit
CRYP_Cmd
CRYP_GetFlagStatus
CRYP_DataIn
CRYP_DataOut
CRYP_IVInit
